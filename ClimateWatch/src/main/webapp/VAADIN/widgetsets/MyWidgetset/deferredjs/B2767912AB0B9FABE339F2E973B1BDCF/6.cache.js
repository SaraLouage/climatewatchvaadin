$wnd.MyWidgetset.runAsyncCallback6("var $intern_155 = {2030:1, 2199:1, 1293:1, 2138:1, 108:1, 1948:1, 323:1, 1979:1, 217:1, 286:1, 20:1, 180:1}, $intern_156 = {2088:1, 2222:1, 2169:1, 1931:1, 2030:1, 2199:1, 1293:1, 2138:1, 108:1, 1948:1, 1979:1, 217:1, 286:1, 20:1, 156:1, 180:1}, $intern_157 = {356:1, 3:1, 4:1};\nvar impl_1;\nfunction TouchEvent$TouchSupportDetector(){\n  var elem;\n  this.isSupported = (elem = document.createElement('div') , elem.setAttribute('ontouchstart', 'return;') , typeof elem.ontouchstart == 'function');\n}\n\ndefineClass(1787, 1, {}, TouchEvent$TouchSupportDetector);\n_.isSupported = false;\nfunction $calcNewVelocity(initialVelocity, decelFactor, oldVelocity, minDecel){\n  var maxVelocityX, minVelocityX, newVelocity;\n  newVelocity = initialVelocity * decelFactor;\n  if (oldVelocity >= 0) {\n    maxVelocityX = 0 > oldVelocity - minDecel?0:oldVelocity - minDecel;\n    newVelocity = newVelocity < maxVelocityX?newVelocity:maxVelocityX;\n  }\n   else {\n    minVelocityX = 0 < oldVelocity + minDecel?0:oldVelocity + minDecel;\n    newVelocity = newVelocity > minVelocityX?newVelocity:minVelocityX;\n  }\n  return newVelocity;\n}\n\nfunction $updateState(state){\n  var decelFactor, dist, elapsedMillis, ellapsedMillis, initialVelocity, minDecel, newVelocity, newVelocityX, newVelocityY, oldVelocity, position, totalEllapsedMillis;\n  ellapsedMillis = state.elapsedMillis;\n  totalEllapsedMillis = state.cumulativeElapsedMillis;\n  initialVelocity = state.initialVelocity;\n  oldVelocity = state.velocity;\n  decelFactor = pow_0(0.9993, totalEllapsedMillis);\n  minDecel = ellapsedMillis * 5.0E-4;\n  newVelocityX = $calcNewVelocity(initialVelocity.x_0, decelFactor, oldVelocity.x_0, minDecel);\n  newVelocityY = $calcNewVelocity(initialVelocity.y_0, decelFactor, oldVelocity.y_0, minDecel);\n  newVelocity = new Point(newVelocityX, newVelocityY);\n  state.velocity = newVelocity;\n  elapsedMillis = state.elapsedMillis;\n  dist = $mult(newVelocity, new Point(elapsedMillis, elapsedMillis));\n  position = state.position_0;\n  $setPosition(state, new Point(position.x_0 + dist.x_0, position.y_0 + dist.y_0));\n  if (abs_0(newVelocity.x_0) < 0.02 && abs_0(newVelocity.y_0) < 0.02) {\n    return false;\n  }\n  return true;\n}\n\nfunction DefaultMomentum(){\n}\n\ndefineClass(601, 1, {}, DefaultMomentum);\nfunction $setCumulativeElapsedMillis(this$static, cumulativeElapsedMillis){\n  this$static.cumulativeElapsedMillis = cumulativeElapsedMillis;\n}\n\nfunction $setElapsedMillis(this$static, elapsedMillis){\n  this$static.elapsedMillis = elapsedMillis;\n}\n\nfunction $setPosition(this$static, position){\n  this$static.position_0 = position;\n}\n\nfunction Momentum$State(initialPosition, initialVelocity){\n  this.initialVelocity = initialVelocity;\n  this.position_0 = new Point_0(initialPosition);\n  this.velocity = new Point_0(initialVelocity);\n}\n\ndefineClass(1699, 1, {}, Momentum$State);\n_.cumulativeElapsedMillis = 0;\n_.elapsedMillis = 0;\nfunction $minus(this$static, c){\n  return new Point(this$static.x_0 - c.x_0, this$static.y_0 - c.y_0);\n}\n\nfunction $mult(this$static, c){\n  return new Point(this$static.x_0 * c.x_0, this$static.y_0 * c.y_0);\n}\n\nfunction $plus(this$static, c){\n  return new Point(this$static.x_0 + c.x_0, this$static.y_0 + c.y_0);\n}\n\nfunction Point(x_0, y_0){\n  this.x_0 = x_0;\n  this.y_0 = y_0;\n}\n\nfunction Point_0(c){\n  Point.call(this, c.x_0, c.y_0);\n}\n\ndefineClass(256, 1, {256:1}, Point, Point_0);\n_.equals$ = function equals_8(obj){\n  var c;\n  if (!instanceOf(obj, 256)) {\n    return false;\n  }\n  c = dynamicCast(obj, 256);\n  return this.x_0 == c.x_0 && this.y_0 == c.y_0;\n}\n;\n_.hashCode$ = function hashCode_10(){\n  return round_int(this.x_0) ^ round_int(this.y_0);\n}\n;\n_.toString$ = function toString_19(){\n  return 'Point(' + this.x_0 + ',' + this.y_0 + ')';\n}\n;\n_.x_0 = 0;\n_.y_0 = 0;\nfunction $calculateEndVelocity(from, to){\n  var dist, time;\n  time = to.time - from.time;\n  if (time <= 0) {\n    return null;\n  }\n  dist = $minus(from.point, to.point);\n  return new Point(dist.x_0 / time, dist.y_0 / time);\n}\n\nfunction $cancelAll(this$static){\n  this$static.touching = false;\n  this$static.dragging = false;\n  this$static.momentumCommand = null;\n}\n\nfunction $getTouchFromEvent(event_0){\n  var touches;\n  touches = $getTouches(event_0.nativeEvent);\n  return touches.length > 0?touches[0]:null;\n}\n\nfunction $getWidgetScrollPosition(this$static){\n  return new Point($getHorizontalScrollPosition(this$static.widget), $getVerticalScrollPosition(this$static.widget));\n}\n\nfunction $hitTest(point1, point2){\n  var absDiffX, absDiffY, diff;\n  diff = new Point(point1.x_0 - point2.x_0, point1.y_0 - point2.y_0);\n  absDiffX = abs_0(diff.x_0);\n  absDiffY = abs_0(diff.y_0);\n  return absDiffX <= 25 && absDiffY <= 25;\n}\n\nfunction $isClickScrollTriggeringTouch(this$static, clickPoint){\n  if (this$static.recentScrollTriggeringTouchPosition.point) {\n    return $hitTest(clickPoint, this$static.recentScrollTriggeringTouchPosition.point);\n  }\n  return false;\n}\n\nfunction $isClickTouchPositionDuringMomentum(this$static, clickPoint){\n  var currentTime, point, point$iterator, same;\n  currentTime = now_1();\n  same = false;\n  for (point$iterator = new AbstractList$IteratorImpl(this$static.touchPositionsDuringMomentum); point$iterator.i < point$iterator.this$0_0.size_1();) {\n    point = dynamicCast($next_3(point$iterator), 278);\n    if (currentTime - point.time <= 2500 && $hitTest(clickPoint, point.point)) {\n      same = true;\n      break;\n    }\n  }\n  return same;\n}\n\nfunction $onDragEnd(this$static){\n  var endVelocity;\n  if (!this$static.momentum) {\n    return;\n  }\n  endVelocity = $calculateEndVelocity(this$static.recentTouchPosition, this$static.lastTouchPosition);\n  if (endVelocity) {\n    this$static.momentumCommand = new TouchScroller$MomentumCommand(this$static, endVelocity);\n    scheduleFixedDelayImpl(($clinit_SchedulerImpl() , this$static.momentumCommand), 16);\n  }\n}\n\nfunction $onTouchEnd(this$static){\n  if (!this$static.touching) {\n    return;\n  }\n  this$static.touching = false;\n  if (this$static.dragging) {\n    this$static.dragging = false;\n    $onDragEnd(this$static);\n  }\n}\n\nfunction $onTouchMove(this$static, event_0){\n  var absDiffX, absDiffY, diff, hMax, hMin, hPosition, touch, touchPoint, touchTime, trackingTime, vMax, vPosition, diff_0, curScrollPosition;\n  if (!this$static.touching) {\n    return;\n  }\n  touch = $getTouchFromEvent(event_0);\n  touchPoint = new Point(toInt32(($clinit_DOMImpl() , touch).pageX || 0), toInt32(touch.pageY || 0));\n  touchTime = now_1();\n  $setTemporalPoint(this$static.lastTouchPosition, touchPoint, touchTime);\n  if (!this$static.dragging) {\n    diff = $minus(touchPoint, this$static.startTouchPosition);\n    absDiffX = abs_0(diff.x_0);\n    absDiffY = abs_0(diff.y_0);\n    if (absDiffX > 5 || absDiffY > 5) {\n      $setTemporalPoint(this$static.recentScrollTriggeringTouchPosition, this$static.recentTouchPosition.point, this$static.recentTouchPosition.time);\n      if (absDiffX > absDiffY) {\n        hPosition = $getHorizontalScrollPosition(this$static.widget);\n        hMin = $getMinimumHorizontalScrollPosition_0(this$static.widget);\n        hMax = $getMaximumHorizontalScrollPosition_0(this$static.widget);\n        if (diff.x_0 < 0 && hMax <= hPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n         else if (diff.x_0 > 0 && hMin >= hPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n      }\n       else {\n        vPosition = $getVerticalScrollPosition(this$static.widget);\n        vMax = $getMaximumVerticalScrollPosition(this$static.widget);\n        if (diff.y_0 < 0 && vMax <= vPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n         else if (diff.y_0 > 0 && 0 >= vPosition) {\n          $cancelAll(this$static);\n          return;\n        }\n      }\n      this$static.dragging = true;\n    }\n  }\n  $preventDefault(event_0.nativeEvent);\n  if (this$static.dragging) {\n    diff_0 = $minus(this$static.startTouchPosition, this$static.lastTouchPosition.point);\n    curScrollPosition = $plus(this$static.startScrollPosition, diff_0);\n    $setHorizontalScrollPosition(this$static.widget, round_int(curScrollPosition.x_0));\n    $setVerticalScrollPosition(this$static.widget, round_int(curScrollPosition.y_0));\n    trackingTime = touchTime - this$static.recentTouchPosition.time;\n    if (trackingTime > 200 && !!this$static.recentTouchPositionOnDeck) {\n      $setTemporalPoint(this$static.recentTouchPosition, this$static.recentTouchPositionOnDeck.point, this$static.recentTouchPositionOnDeck.time);\n      this$static.recentTouchPositionOnDeck = null;\n    }\n     else \n      trackingTime > 100 && !this$static.recentTouchPositionOnDeck && (this$static.recentTouchPositionOnDeck = new TouchScroller$TemporalPoint_0(touchPoint, touchTime));\n  }\n}\n\nfunction $onTouchStart(this$static, event_0){\n  var startTouchTime, touch;\n  $setTemporalPoint(this$static.recentScrollTriggeringTouchPosition, null, 0);\n  if (this$static.touching) {\n    return;\n  }\n  touch = $getTouchFromEvent(event_0);\n  this$static.startTouchPosition = new Point(toInt32(($clinit_DOMImpl() , touch).pageX || 0), toInt32(touch.pageY || 0));\n  startTouchTime = now_1();\n  $setTemporalPoint(this$static.recentTouchPosition, this$static.startTouchPosition, startTouchTime);\n  $setTemporalPoint(this$static.lastTouchPosition, this$static.startTouchPosition, startTouchTime);\n  this$static.recentTouchPositionOnDeck = null;\n  if (this$static.momentumCommand) {\n    $add_20(this$static.touchPositionsDuringMomentum, new TouchScroller$TemporalPoint_0(this$static.startTouchPosition, startTouchTime));\n    scheduleFixedDelayImpl(($clinit_SchedulerImpl() , this$static.momentumTouchRemovalCommand), 2500);\n  }\n  this$static.startScrollPosition = new Point($getHorizontalScrollPosition(this$static.widget), $getVerticalScrollPosition(this$static.widget));\n  $cancelAll(this$static);\n  this$static.touching = true;\n}\n\nfunction $removeAttachHandler(this$static){\n  if (this$static.attachHandlerReg) {\n    $removeHandler_0(this$static.attachHandlerReg.real);\n    this$static.attachHandlerReg = null;\n  }\n}\n\nfunction $removeBustClickHandler(this$static){\n  if (this$static.bustClickHandlerReg) {\n    $removeHandler_0(this$static.bustClickHandlerReg.real);\n    this$static.bustClickHandlerReg = null;\n  }\n}\n\nfunction $setMomentum(this$static, momentum){\n  this$static.momentum = momentum;\n  !momentum && (this$static.momentumCommand = null);\n}\n\nfunction $setTargetWidget(this$static, widget){\n  var reg, reg$iterator;\n  if (this$static.widget == widget) {\n    return;\n  }\n  $cancelAll(this$static);\n  for (reg$iterator = new AbstractList$IteratorImpl(this$static.handlerRegs); reg$iterator.i < reg$iterator.this$0_0.size_1();) {\n    reg = dynamicCast($next_3(reg$iterator), 165);\n    $removeHandler_0(reg.real);\n  }\n  $clear_7(this$static.handlerRegs);\n  $removeAttachHandler(this$static);\n  $removeBustClickHandler(this$static);\n  this$static.widget = widget;\n  if (widget) {\n    widget.attached && ($removeBustClickHandler(this$static) , this$static.bustClickHandlerReg = addNativePreviewHandler(new TouchScroller$6(this$static)));\n    this$static.attachHandlerReg = $addHandler_3(widget, new TouchScroller$1(this$static), (!TYPE_19 && (TYPE_19 = new GwtEvent$Type) , TYPE_19));\n    $add_20(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$2(this$static), ($clinit_TouchStartEvent() , $clinit_TouchStartEvent() , TYPE_18)));\n    $add_20(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$3(this$static), ($clinit_TouchMoveEvent() , $clinit_TouchMoveEvent() , TYPE_17)));\n    $add_20(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$4(this$static), ($clinit_TouchEndEvent() , $clinit_TouchEndEvent() , TYPE_16)));\n    $add_20(this$static.handlerRegs, $addDomHandler(widget, new TouchScroller$5(this$static), ($clinit_TouchCancelEvent() , $clinit_TouchCancelEvent() , TYPE_15)));\n  }\n}\n\nfunction $setWidgetScrollPosition(this$static, position){\n  $setHorizontalScrollPosition(this$static.widget, round_int(position.x_0));\n  $setVerticalScrollPosition(this$static.widget, round_int(position.y_0));\n}\n\nfunction $setupBustClickHandler(this$static){\n  $removeBustClickHandler(this$static);\n  this$static.bustClickHandlerReg = addNativePreviewHandler(new TouchScroller$6(this$static));\n}\n\nfunction TouchScroller(){\n  this.handlerRegs = new ArrayList;\n  this.lastTouchPosition = new TouchScroller$TemporalPoint;\n  this.recentTouchPosition = new TouchScroller$TemporalPoint;\n  this.recentScrollTriggeringTouchPosition = new TouchScroller$TemporalPoint;\n  this.touchPositionsDuringMomentum = new ArrayList;\n  this.momentumTouchRemovalCommand = new TouchScroller$MomentumTouchRemovalCommand(this);\n  $setMomentum(this, new DefaultMomentum);\n}\n\ndefineClass(1476, 1, {}, TouchScroller);\n_.dragging = false;\n_.touching = false;\nvar isSupported;\nfunction TouchScroller$1(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(1538, 1, {1044:1, 352:1}, TouchScroller$1);\n_.onAttachOrDetach = function onAttachOrDetach(event_0){\n  event_0.attached?$setupBustClickHandler(this.this$0):$removeBustClickHandler(this.this$0);\n}\n;\nfunction TouchScroller$2(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(1149, 1, $intern_111, TouchScroller$2);\n_.onTouchStart = function onTouchStart(event_0){\n  $onTouchStart(this.this$0, event_0);\n}\n;\nfunction TouchScroller$3(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(697, 1, $intern_126, TouchScroller$3);\n_.onTouchMove = function onTouchMove(event_0){\n  $onTouchMove(this.this$0, event_0);\n}\n;\nfunction TouchScroller$4(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(398, 1, $intern_127, TouchScroller$4);\n_.onTouchEnd = function onTouchEnd(event_0){\n  $onTouchEnd(this.this$0);\n}\n;\nfunction TouchScroller$5(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(768, 1, $intern_125, TouchScroller$5);\n_.onTouchCancel = function onTouchCancel(event_0){\n  $onTouchEnd(this.this$0);\n}\n;\nfunction TouchScroller$6(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(996, 1, $intern_83, TouchScroller$6);\n_.onPreviewNativeEvent = function onPreviewNativeEvent(event_0){\n  var clickPoint;\n  if (1 == $getTypeInt(event_0.nativeEvent)) {\n    clickPoint = new Point($getClientX(event_0.nativeEvent), $getClientY(event_0.nativeEvent));\n    if ($isClickScrollTriggeringTouch(this.this$0, clickPoint) || $isClickTouchPositionDuringMomentum(this.this$0, clickPoint)) {\n      event_0.isCanceled = true;\n      $stopPropagation(event_0.nativeEvent);\n      $preventDefault(event_0.nativeEvent);\n    }\n  }\n}\n;\nfunction $finish(this$static){\n  if (this$static.windowResizeHandler) {\n    $removeHandler_0(this$static.windowResizeHandler.real);\n    this$static.windowResizeHandler = null;\n  }\n  this$static == this$static.this$0.momentumCommand && (this$static.this$0.momentumCommand = null);\n}\n\nfunction TouchScroller$MomentumCommand(this$0, endVelocity){\n  this.this$0 = this$0;\n  this.duration = new Duration;\n  this.initialPosition = $getWidgetScrollPosition(this.this$0);\n  this.state = new Momentum$State(this.initialPosition, endVelocity);\n  this.windowResizeHandler = addResizeHandler(new TouchScroller$MomentumCommand$1(this));\n}\n\ndefineClass(1620, 1, {}, TouchScroller$MomentumCommand);\n_.execute_0 = function execute_6(){\n  var cumulativeElapsedMillis, hMax, hMin, hPos, notDone, vMax, vPos;\n  if (this != this.this$0.momentumCommand) {\n    $finish(this);\n    return false;\n  }\n  cumulativeElapsedMillis = $elapsedMillis(this.duration);\n  $setElapsedMillis(this.state, cumulativeElapsedMillis - this.lastElapsedMillis);\n  this.lastElapsedMillis = cumulativeElapsedMillis;\n  $setCumulativeElapsedMillis(this.state, cumulativeElapsedMillis);\n  notDone = $updateState(this.state);\n  notDone || $finish(this);\n  $setWidgetScrollPosition(this.this$0, this.state.position_0);\n  hPos = round_int(this.state.position_0.x_0);\n  hMin = $getMinimumHorizontalScrollPosition_0(this.this$0.widget);\n  hMax = $getMaximumHorizontalScrollPosition_0(this.this$0.widget);\n  vMax = $getMaximumVerticalScrollPosition(this.this$0.widget);\n  vPos = round_int(this.state.position_0.y_0);\n  if ((vMax <= vPos || 0 >= vPos) && (hMax <= hPos || hMin >= hPos)) {\n    $finish(this);\n    return false;\n  }\n  return notDone;\n}\n;\n_.lastElapsedMillis = 0;\nfunction TouchScroller$MomentumCommand$1(this$1){\n  this.this$1 = this$1;\n}\n\ndefineClass(1675, 1, $intern_82, TouchScroller$MomentumCommand$1);\n_.onResize = function onResize(event_0){\n  $finish(this.this$1);\n}\n;\nfunction TouchScroller$MomentumTouchRemovalCommand(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(1235, 1, {}, TouchScroller$MomentumTouchRemovalCommand);\n_.execute_0 = function execute_7(){\n  var currentTime, iter, point;\n  currentTime = now_1();\n  iter = new AbstractList$IteratorImpl(this.this$0.touchPositionsDuringMomentum);\n  while (iter.i < iter.this$0_0.size_1()) {\n    point = dynamicCast($next_3(iter), 278);\n    currentTime - point.time >= 2500 && $remove_16(iter);\n  }\n  return this.this$0.touchPositionsDuringMomentum.size_0 != 0;\n}\n;\nfunction $setTemporalPoint(this$static, point, time){\n  this$static.point = point;\n  this$static.time = time;\n}\n\nfunction TouchScroller$TemporalPoint(){\n}\n\nfunction TouchScroller$TemporalPoint_0(point, time){\n  this.point = point;\n  this.time = time;\n}\n\ndefineClass(278, 1, {278:1}, TouchScroller$TemporalPoint, TouchScroller$TemporalPoint_0);\n_.time = 0;\nfunction setEventListener(elem, listener){\n  $clinit_DOM();\n  setEventListener_0(elem, listener);\n}\n\nfunction $getWidgetTd(this$static, w){\n  if (w.parent_1 != this$static) {\n    return null;\n  }\n  return getParent(($clinit_DOM() , w.element_0));\n}\n\nfunction $setCellHorizontalAlignment_0(this$static, w, align_0){\n  var td;\n  td = $getWidgetTd(this$static, w);\n  !!td && $setPropertyString(($clinit_DOM() , td), 'align', align_0.textAlignString);\n}\n\nfunction $setCellWidth(this$static, w, width_0){\n  var td;\n  td = $getWidgetTd(this$static, w);\n  !!td && $setPropertyString(td, 'width', width_0);\n}\n\nfunction $clinit_DockPanel(){\n  $clinit_DockPanel = nullMethod;\n  CENTER_0 = new DockPanel$DockLayoutConstant;\n  LINE_START = new DockPanel$DockLayoutConstant;\n  LINE_END = new DockPanel$DockLayoutConstant;\n  EAST = new DockPanel$DockLayoutConstant;\n  NORTH = new DockPanel$DockLayoutConstant;\n  SOUTH = new DockPanel$DockLayoutConstant;\n  WEST = new DockPanel$DockLayoutConstant;\n}\n\nfunction $add_5(this$static, widget, direction){\n  var layout;\n  if (direction == CENTER_0) {\n    if (widget == this$static.center) {\n      return;\n    }\n     else if (this$static.center) {\n      throw new IllegalArgumentException_0('Only one CENTER widget may be added');\n    }\n  }\n  $removeFromParent_0(widget);\n  $add_9(this$static.children_1, widget);\n  direction == CENTER_0 && (this$static.center = widget);\n  layout = new DockPanel$LayoutData(direction);\n  widget.layoutData = layout;\n  $setCellHorizontalAlignment_1(widget, this$static.horzAlign);\n  $setCellVerticalAlignment_1(widget, this$static.vertAlign);\n  $realizeTable(this$static);\n  $setParent_0(widget, this$static);\n}\n\nfunction $realizeTable(this$static){\n  var bodyElem, centerTd, child, colCount, dir_0, i, it, it0, layout, logicalLeftCol, logicalRightCol, northRow, row, rowCount, rows_0, southRow, td;\n  bodyElem = ($clinit_DOM() , this$static.body_0);\n  while (impl_5.getChildCount(bodyElem) > 0) {\n    $removeChild(bodyElem, impl_5.getChild(bodyElem, 0));\n  }\n  rowCount = 1;\n  colCount = 1;\n  for (it0 = new WidgetCollection$WidgetIterator(this$static.children_1); it0.index_0 < it0.this$0.size_0;) {\n    child = $next_1(it0);\n    dir_0 = child.layoutData.direction_0;\n    dir_0 == NORTH || dir_0 == SOUTH?++rowCount:(dir_0 == EAST || dir_0 == WEST || dir_0 == LINE_START || dir_0 == LINE_END) && ++colCount;\n  }\n  rows_0 = initDim(_3Lcom_google_gwt_user_client_ui_DockPanel$TmpRow_2_classLit, $intern_5, 307, rowCount, 0);\n  for (i = 0; i < rowCount; ++i) {\n    rows_0[i] = new DockPanel$TmpRow;\n    rows_0[i].tr = $createTRElement($doc);\n    appendChild(bodyElem, rows_0[i].tr);\n  }\n  logicalLeftCol = 0;\n  logicalRightCol = colCount - 1;\n  northRow = 0;\n  southRow = rowCount - 1;\n  centerTd = null;\n  for (it = new WidgetCollection$WidgetIterator(this$static.children_1); it.index_0 < it.this$0.size_0;) {\n    child = $next_1(it);\n    layout = child.layoutData;\n    td = $createTDElement($doc);\n    layout.td = td;\n    $setPropertyString(layout.td, 'align', layout.hAlign);\n    $setPropertyImpl(layout.td.style, 'verticalAlign', layout.vAlign);\n    $setPropertyString(layout.td, 'width', '');\n    $setPropertyString(layout.td, 'height', '');\n    if (layout.direction_0 == NORTH) {\n      insertChild(rows_0[northRow].tr, td, rows_0[northRow].center);\n      appendChild(td, child.element_0);\n      $setPropertyInt(td, 'colSpan', logicalRightCol - logicalLeftCol + 1);\n      ++northRow;\n    }\n     else if (layout.direction_0 == SOUTH) {\n      insertChild(rows_0[southRow].tr, td, rows_0[southRow].center);\n      appendChild(td, child.element_0);\n      $setPropertyInt(td, 'colSpan', logicalRightCol - logicalLeftCol + 1);\n      --southRow;\n    }\n     else if (layout.direction_0 == CENTER_0) {\n      centerTd = td;\n    }\n     else if ($shouldAddToLogicalLeftOfTable(layout.direction_0)) {\n      row = rows_0[northRow];\n      insertChild(row.tr, td, row.center++);\n      appendChild(td, child.element_0);\n      $setPropertyInt(td, 'rowSpan', southRow - northRow + 1);\n      ++logicalLeftCol;\n    }\n     else if ($shouldAddToLogicalRightOfTable(layout.direction_0)) {\n      row = rows_0[northRow];\n      insertChild(row.tr, td, row.center);\n      appendChild(td, child.element_0);\n      $setPropertyInt(td, 'rowSpan', southRow - northRow + 1);\n      --logicalRightCol;\n    }\n  }\n  if (this$static.center) {\n    row = rows_0[northRow];\n    insertChild(row.tr, centerTd, row.center);\n    appendChild(centerTd, $getElement(this$static.center));\n  }\n}\n\nfunction $setCellHorizontalAlignment_1(w, align_0){\n  var data_0;\n  data_0 = w.layoutData;\n  data_0.hAlign = align_0.textAlignString;\n  !!data_0.td && $setCellHorizontalAlignment(data_0.td, align_0);\n}\n\nfunction $setCellVerticalAlignment_1(w, align_0){\n  var data_0;\n  data_0 = w.layoutData;\n  data_0.vAlign = align_0.verticalAlignString;\n  !!data_0.td && $setCellVerticalAlignment(data_0.td, align_0);\n}\n\nfunction $shouldAddToLogicalLeftOfTable(widgetDirection){\n  if (widgetDirection == LINE_START) {\n    return true;\n  }\n  $clinit_LocaleInfo();\n  return widgetDirection == WEST;\n}\n\nfunction $shouldAddToLogicalRightOfTable(widgetDirection){\n  if (widgetDirection == LINE_END) {\n    return true;\n  }\n  $clinit_LocaleInfo();\n  return widgetDirection == EAST;\n}\n\nfunction DockPanel(){\n  $clinit_DockPanel();\n  CellPanel.call(this);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  $setPropertyInt(($clinit_DOM() , this.table), 'cellSpacing', 0);\n  $setPropertyInt(this.table, 'cellPadding', 0);\n}\n\ndefineClass(928, 590, $intern_64, DockPanel);\n_.remove_2 = function remove_6(w){\n  var removed;\n  removed = $remove_3(this, w);\n  if (removed) {\n    w == this.center && (this.center = null);\n    $realizeTable(this);\n  }\n  return removed;\n}\n;\nvar CENTER_0, EAST, LINE_END, LINE_START, NORTH, SOUTH, WEST;\nfunction DockPanel$DockLayoutConstant(){\n}\n\ndefineClass(1148, 1, {}, DockPanel$DockLayoutConstant);\nfunction DockPanel$LayoutData(dir_0){\n  this.hAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT).textAlignString;\n  this.vAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP).verticalAlignString;\n  this.direction_0 = dir_0;\n}\n\ndefineClass(473, 1, {}, DockPanel$LayoutData);\nfunction DockPanel$TmpRow(){\n}\n\ndefineClass(307, 1, {307:1}, DockPanel$TmpRow);\n_.center = 0;\nfunction $removeAllRows(this$static){\n  var i, numRows;\n  numRows = $getDOMRowCount_0(this$static.bodyElem);\n  for (i = 0; i < numRows; i++) {\n    $removeRow(this$static, 0);\n  }\n}\n\nfunction $add_7(this$static, w){\n  var td, td_0;\n  td = (td_0 = ($clinit_DOM() , $createTDElement($doc)) , $setCellHorizontalAlignment(td_0, this$static.horzAlign) , $setCellVerticalAlignment(td_0, this$static.vertAlign) , td_0);\n  appendChild(this$static.tableRow, td);\n  $add_1(this$static, w, td);\n}\n\nfunction HorizontalPanel(){\n  CellPanel.call(this);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  this.tableRow = ($clinit_DOM() , $createTRElement($doc));\n  appendChild(this.body_0, this.tableRow);\n  $setPropertyString(this.table, 'cellSpacing', '0');\n  $setPropertyString(this.table, 'cellPadding', '0');\n}\n\ndefineClass(323, 590, $intern_155, HorizontalPanel);\n_.add_2 = function add_8(w){\n  $add_7(this, w);\n}\n;\n_.remove_2 = function remove_9(w){\n  var removed, td;\n  td = getParent(($clinit_DOM() , w.element_0));\n  removed = $remove_3(this, w);\n  removed && $removeChild(this.tableRow, td);\n  return removed;\n}\n;\nfunction $getMaximumHorizontalScrollPosition(this$static, scrollable){\n  return this$static.isRtl(scrollable)?0:($getSubPixelScrollWidth(scrollable) | 0) - (scrollable.clientWidth | 0);\n}\n\nfunction $getMinimumHorizontalScrollPosition(this$static, scrollable){\n  return this$static.isRtl(scrollable)?(scrollable.clientWidth | 0) - ($getSubPixelScrollWidth(scrollable) | 0):0;\n}\n\ndefineClass(955, 1, {});\n_.initialize = function initialize(scrollable, container){\n}\n;\n_.isRtl = function isRtl(scrollable){\n  var computedStyle = $doc.defaultView.getComputedStyle(scrollable, null);\n  return computedStyle.getPropertyValue('direction') == 'rtl';\n}\n;\nvar impl_11;\ndefineClass(1319, 955, {});\n_.initialize = function initialize_0(scrollable, container){\n  scrollable.__lastScrollTop = scrollable.__lastScrollLeft = 0;\n  scrollable.attachEvent('onscroll', scrollHandler);\n  scrollable.attachEvent('onresize', resizeHandler);\n  container.attachEvent('onresize', resizeHandler);\n  container.__isScrollContainer = true;\n}\n;\n_.isRtl = function isRtl_0(scrollable){\n  return scrollable.currentStyle.direction == 'rtl';\n}\n;\nfunction $addScrollHandler(this$static, handler){\n  sinkEvents_0(($clinit_DOM() , this$static.scrollableElem), $intern_52);\n  return $addHandler_3(this$static, handler, ($clinit_ScrollEvent() , $clinit_ScrollEvent() , TYPE_14));\n}\n\nfunction $getHorizontalScrollPosition(this$static){\n  return $getScrollLeft(($clinit_DOM() , this$static.scrollableElem));\n}\n\nfunction $getMaximumHorizontalScrollPosition_0(this$static){\n  return $getMaximumHorizontalScrollPosition((!impl_11 && (impl_11 = com_google_gwt_user_client_ui_ScrollImpl()) , impl_11), ($clinit_DOM() , this$static.scrollableElem));\n}\n\nfunction $getMaximumVerticalScrollPosition(this$static){\n  return ((($clinit_DOM() , this$static.scrollableElem).scrollHeight || 0) | 0) - (this$static.scrollableElem.clientHeight | 0);\n}\n\nfunction $getMinimumHorizontalScrollPosition_0(this$static){\n  return $getMinimumHorizontalScrollPosition((!impl_11 && (impl_11 = com_google_gwt_user_client_ui_ScrollImpl()) , impl_11), ($clinit_DOM() , this$static.scrollableElem));\n}\n\nfunction $getVerticalScrollPosition(this$static){\n  return (($clinit_DOM() , this$static.scrollableElem).scrollTop || 0) | 0;\n}\n\nfunction $onResize_0(this$static){\n  var child;\n  child = this$static.widget;\n  !!child && instanceOf(child, 207) && $onResize_0(dynamicCast(child, 207));\n}\n\nfunction $setHorizontalScrollPosition(this$static, position){\n  $setScrollLeft(($clinit_DOM() , this$static.scrollableElem), position);\n}\n\nfunction $setScrollPosition(this$static, position){\n  $setScrollTop(($clinit_DOM() , this$static.scrollableElem), position);\n}\n\nfunction $setTouchScrollingDisabled(this$static){\n  var scroller, ua;\n  if (this$static.touchScroller) {\n    return false;\n  }\n  this$static.touchScroller = (scroller = (!isSupported && (isSupported = ($clinit_Boolean() , !impl_1 && (impl_1 = new TouchEvent$TouchSupportDetector) , impl_1.isSupported && !(ua = navigator.userAgent.toLowerCase() , /android ([3-9]+)\\.([0-9]+)/.exec(ua) != null)?TRUE_4:FALSE_4)) , isSupported.value_0?new TouchScroller:null) , !!scroller && $setTargetWidget(scroller, this$static) , scroller);\n  return !this$static.touchScroller;\n}\n\nfunction $setVerticalScrollPosition(this$static, position){\n  $setScrollTop(($clinit_DOM() , this$static.scrollableElem), position);\n}\n\nfunction ScrollPanel(){\n  SimplePanel.call(this);\n  this.scrollableElem = ($clinit_DOM() , this.element_0);\n  this.containerElem = $createDivElement($doc);\n  $appendChild(this.scrollableElem, this.containerElem);\n  this.scrollableElem.style['overflow'] = ($clinit_Style$Overflow() , 'auto');\n  this.scrollableElem.style['position'] = ($clinit_Style$Position() , 'relative');\n  this.containerElem.style['position'] = 'relative';\n  $setPropertyImpl(this.scrollableElem.style, 'zoom', '1');\n  $setPropertyImpl(this.containerElem.style, 'zoom', '1');\n  $setTouchScrollingDisabled(this);\n  (!impl_11 && (impl_11 = com_google_gwt_user_client_ui_ScrollImpl()) , impl_11).initialize(this.scrollableElem, this.containerElem);\n}\n\ndefineClass(308, $intern_70, {2030:1, 2199:1, 1293:1, 2101:1, 2139:1, 2138:1, 108:1, 1948:1, 1979:1, 217:1, 207:1, 308:1, 1646:1, 286:1, 20:1, 180:1}, ScrollPanel);\n_.getContainerElement = function getContainerElement_2(){\n  return $clinit_DOM() , this.containerElem;\n}\n;\n_.onAttach = function onAttach_4(){\n  $onAttach(this);\n  setEventListener(($clinit_DOM() , this.scrollableElem), this);\n}\n;\n_.onDetach = function onDetach_4(){\n  setEventListener(($clinit_DOM() , this.scrollableElem), null);\n  $onDetach(this);\n}\n;\n_.onResize_0 = function onResize_2(){\n  $onResize_0(this);\n}\n;\n_.setHeight = function setHeight_2(height){\n  ($clinit_DOM() , this.element_0).style['height'] = height;\n}\n;\n_.setWidth = function setWidth_2(width_0){\n  ($clinit_DOM() , this.element_0).style['width'] = width_0;\n}\n;\nfunction TooltipInfo(){\n}\n\ndefineClass(252, 1, {252:1}, TooltipInfo);\nfunction measureVerticalBorder(element){\n  $clinit_Util();\n  var borders, height, offsetHeight, offsetWidth, width_0;\n  if (($clinit_BrowserInfo() , !instance_3 && (instance_3 = new BrowserInfo) , $clinit_BrowserInfo() , instance_3).browserDetails.isIE) {\n    width_0 = $getProperty(element.style, 'width');\n    height = $getProperty(element.style, 'height');\n    offsetWidth = $getSubPixelOffsetWidth(element) | 0;\n    offsetHeight = $getSubPixelOffsetHeight(element) | 0;\n    offsetHeight < 1 && (offsetHeight = 1);\n    offsetWidth < 1 && (offsetWidth = 10);\n    element.style['width'] = offsetWidth + ($clinit_Style$Unit() , 'px');\n    element.style['height'] = offsetHeight + 'px';\n    borders = ($getSubPixelOffsetHeight(element) | 0) - $getPropertyInt(element, 'clientHeight');\n    $setPropertyImpl(element.style, 'height', height);\n    $setPropertyImpl(element.style, 'width', width_0);\n  }\n   else {\n    borders = ($getSubPixelOffsetHeight(element) | 0) - $getPropertyInt(element, 'clientHeight');\n  }\n  return borders;\n}\n\nfunction $actionOnEmptyCell(this$static, p0, p1, p2){\n  $invoke(this$static.val$handler, new Method(new Type(Lcom_vaadin_shared_ui_calendar_CalendarServerRpc_2_classLit), 'actionOnEmptyCell'), initValues(_3Ljava_lang_Object_2_classLit, $intern_5, 1, 3, [p0, p1, p2]));\n}\n\nfunction $actionOnEvent(this$static, p0, p1, p2, p3){\n  $invoke(this$static.val$handler, new Method(new Type(Lcom_vaadin_shared_ui_calendar_CalendarServerRpc_2_classLit), 'actionOnEvent'), initValues(_3Ljava_lang_Object_2_classLit, $intern_5, 1, 3, [p0, p1, p2, valueOf_45(p3)]));\n}\n\nfunction $dateClick(this$static, p0){\n  $invoke(this$static.val$handler, new Method(new Type(Lcom_vaadin_shared_ui_calendar_CalendarServerRpc_2_classLit), 'dateClick'), initValues(_3Ljava_lang_Object_2_classLit, $intern_5, 1, 3, [p0]));\n}\n\nfunction $eventClick(this$static, p0){\n  $invoke(this$static.val$handler, new Method(new Type(Lcom_vaadin_shared_ui_calendar_CalendarServerRpc_2_classLit), 'eventClick'), initValues(_3Ljava_lang_Object_2_classLit, $intern_5, 1, 3, [valueOf_45(p0)]));\n}\n\nfunction $eventMove(this$static, p0, p1){\n  $invoke(this$static.val$handler, new Method(new Type(Lcom_vaadin_shared_ui_calendar_CalendarServerRpc_2_classLit), 'eventMove'), initValues(_3Ljava_lang_Object_2_classLit, $intern_5, 1, 3, [valueOf_45(p0), p1]));\n}\n\nfunction $eventResize(this$static, p0, p1, p2){\n  $invoke(this$static.val$handler, new Method(new Type(Lcom_vaadin_shared_ui_calendar_CalendarServerRpc_2_classLit), 'eventResize'), initValues(_3Ljava_lang_Object_2_classLit, $intern_5, 1, 3, [valueOf_45(p0), p1, p2]));\n}\n\nfunction $rangeSelect(this$static, p0){\n  $invoke(this$static.val$handler, new Method(new Type(Lcom_vaadin_shared_ui_calendar_CalendarServerRpc_2_classLit), 'rangeSelect'), initValues(_3Ljava_lang_Object_2_classLit, $intern_5, 1, 3, [p0]));\n}\n\nfunction $scroll_0(this$static, p0){\n  $invoke(this$static.val$handler, new Method(new Type(Lcom_vaadin_shared_ui_calendar_CalendarServerRpc_2_classLit), 'scroll'), initValues(_3Ljava_lang_Object_2_classLit, $intern_5, 1, 3, [valueOf_45(p0)]));\n}\n\nfunction $weekClick(this$static, p0){\n  $invoke(this$static.val$handler, new Method(new Type(Lcom_vaadin_shared_ui_calendar_CalendarServerRpc_2_classLit), 'weekClick'), initValues(_3Ljava_lang_Object_2_classLit, $intern_5, 1, 3, [p0]));\n}\n\nfunction $load_1(this$static){\n  $setSuperClass(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit, Ljava_lang_Object_2_classLit);\n  $setSuperClass(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit, Ljava_lang_Object_2_classLit);\n  $setSuperClass(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, Ljava_lang_Object_2_classLit);\n  $setSuperClass(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, Lcom_vaadin_shared_AbstractComponentState_2_classLit);\n  $setClass(this$static.val$store, 'com.vaadin.ui.Calendar', Lcom_vaadin_client_ui_calendar_CalendarConnector_2_classLit);\n  $setInvoker(this$static.val$store, Lcom_vaadin_client_ui_VCalendar_2_classLit, '!new', new ConnectorBundleLoaderImpl$6$1$1);\n  $setInvoker(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit, '!new', new ConnectorBundleLoaderImpl$6$1$2);\n  $setInvoker(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit, '!new', new ConnectorBundleLoaderImpl$6$1$3);\n  $setInvoker(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, '!new', new ConnectorBundleLoaderImpl$6$1$4);\n  $setInvoker(this$static.val$store, Lcom_vaadin_client_ui_calendar_CalendarConnector_2_classLit, '!new', new ConnectorBundleLoaderImpl$6$1$5);\n  $setInvoker(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, '!new', new ConnectorBundleLoaderImpl$6$1$6);\n  $setReturnType(this$static.val$store, Lcom_vaadin_client_ui_calendar_CalendarConnector_2_classLit, 'getWidget', new Type(Lcom_vaadin_client_ui_VCalendar_2_classLit));\n  $setReturnType(this$static.val$store, Lcom_vaadin_client_ui_calendar_CalendarConnector_2_classLit, 'getState', new Type(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit));\n  $loadNativeJs_2(this$static.val$store);\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit, 'localizedDateFormat', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'scroll', new Type(Ljava_lang_Integer_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit, 'startDate', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'dayNames', new Type(_3Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'timeFrom', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit, 'dayOfWeek', new Type(Ljava_lang_Integer_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'timeTo', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'days', new Type_0('java.util.List', initValues(_3Lcom_vaadin_client_metadata_Type_2_classLit, $intern_112, 8, 0, [new Type(Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit)])));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'caption', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit, 'week', new Type(Ljava_lang_Integer_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'firstDayOfWeek', new Type(Ljava_lang_Integer_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit, 'date', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'firstVisibleDayOfWeek', new Type(Ljava_lang_Integer_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'dateFrom', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'actions', new Type_0('java.util.List', initValues(_3Lcom_vaadin_client_metadata_Type_2_classLit, $intern_112, 8, 0, [new Type(Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit)])));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit, 'yearOfWeek', new Type(Ljava_lang_Integer_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit, 'endDate', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit, 'iconKey', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'now', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit, 'caption', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'firstHourOfDay', new Type(Ljava_lang_Integer_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'allDay', new Type(Ljava_lang_Boolean_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'lastHourOfDay', new Type(Ljava_lang_Integer_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'index', new Type(Ljava_lang_Integer_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'dateTo', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'styleName', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'format24H', new Type(Ljava_lang_Boolean_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'monthNames', new Type(_3Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'lastVisibleDayOfWeek', new Type(Ljava_lang_Integer_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'events', new Type_0('java.util.List', initValues(_3Lcom_vaadin_client_metadata_Type_2_classLit, $intern_112, 8, 0, [new Type(Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit)])));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit, 'actionKey', new Type(Ljava_lang_String_2_classLit));\n  $setPropertyType(this$static.val$store, Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'description', new Type(Ljava_lang_String_2_classLit));\n}\n\nfunction $loadNativeJs_2(store){\n  var data_0 = {setter:function(bean, value_0){\n    bean.localizedDateFormat = value_0;\n  }\n  , getter:function(bean){\n    return bean.localizedDateFormat;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit, 'localizedDateFormat', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.scroll_0 = value_0.intValue();\n  }\n  , getter:function(bean){\n    return valueOf_45(bean.scroll_0);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'scroll', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.startDate = value_0;\n  }\n  , getter:function(bean){\n    return bean.startDate;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit, 'startDate', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.dayNames = value_0;\n  }\n  , getter:function(bean){\n    return bean.dayNames;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'dayNames', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.timeFrom = value_0;\n  }\n  , getter:function(bean){\n    return bean.timeFrom;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'timeFrom', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.dayOfWeek = value_0.intValue();\n  }\n  , getter:function(bean){\n    return valueOf_45(bean.dayOfWeek);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit, 'dayOfWeek', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.timeTo = value_0;\n  }\n  , getter:function(bean){\n    return bean.timeTo;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'timeTo', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.days = value_0;\n  }\n  , getter:function(bean){\n    return bean.days;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'days', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.caption_0 = value_0;\n  }\n  , getter:function(bean){\n    return bean.caption_0;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'caption', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.week = value_0.intValue();\n  }\n  , getter:function(bean){\n    return valueOf_45(bean.week);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit, 'week', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.firstDayOfWeek = value_0.intValue();\n  }\n  , getter:function(bean){\n    return valueOf_45(bean.firstDayOfWeek);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'firstDayOfWeek', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.date = value_0;\n  }\n  , getter:function(bean){\n    return bean.date;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit, 'date', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.firstVisibleDayOfWeek = value_0.intValue();\n  }\n  , getter:function(bean){\n    return valueOf_45(bean.firstVisibleDayOfWeek);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'firstVisibleDayOfWeek', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.dateFrom = value_0;\n  }\n  , getter:function(bean){\n    return bean.dateFrom;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'dateFrom', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.actions = value_0;\n  }\n  , getter:function(bean){\n    return bean.actions;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'actions', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.yearOfWeek = value_0.intValue();\n  }\n  , getter:function(bean){\n    return valueOf_45(bean.yearOfWeek);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit, 'yearOfWeek', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.endDate = value_0;\n  }\n  , getter:function(bean){\n    return bean.endDate;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit, 'endDate', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.iconKey = value_0;\n  }\n  , getter:function(bean){\n    return bean.iconKey;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit, 'iconKey', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.now_0 = value_0;\n  }\n  , getter:function(bean){\n    return bean.now_0;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'now', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.caption_0 = value_0;\n  }\n  , getter:function(bean){\n    return bean.caption_0;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit, 'caption', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.firstHourOfDay = value_0.intValue();\n  }\n  , getter:function(bean){\n    return valueOf_45(bean.firstHourOfDay);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'firstHourOfDay', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.allDay = value_0.booleanValue();\n  }\n  , getter:function(bean){\n    return valueOf_40(bean.allDay);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'allDay', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.lastHourOfDay = value_0.intValue();\n  }\n  , getter:function(bean){\n    return valueOf_45(bean.lastHourOfDay);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'lastHourOfDay', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.index_0 = value_0.intValue();\n  }\n  , getter:function(bean){\n    return valueOf_45(bean.index_0);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'index', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.dateTo = value_0;\n  }\n  , getter:function(bean){\n    return bean.dateTo;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'dateTo', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.styleName = value_0;\n  }\n  , getter:function(bean){\n    return bean.styleName;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'styleName', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.format24H = value_0.booleanValue();\n  }\n  , getter:function(bean){\n    return valueOf_40(bean.format24H);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'format24H', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.monthNames = value_0;\n  }\n  , getter:function(bean){\n    return bean.monthNames;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'monthNames', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.lastVisibleDayOfWeek = value_0.intValue();\n  }\n  , getter:function(bean){\n    return valueOf_45(bean.lastVisibleDayOfWeek);\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'lastVisibleDayOfWeek', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.events = value_0;\n  }\n  , getter:function(bean){\n    return bean.events;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit, 'events', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.actionKey = value_0;\n  }\n  , getter:function(bean){\n    return bean.actionKey;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit, 'actionKey', data_0);\n  var data_0 = {setter:function(bean, value_0){\n    bean.description = value_0;\n  }\n  , getter:function(bean){\n    return bean.description;\n  }\n  };\n  store.setPropertyData(Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit, 'description', data_0);\n}\n\ndefineClass(890, 1, $intern_90);\n_.onSuccess_1 = function onSuccess_6(){\n  $load_1(this);\n  $setLoaded_0((!impl_15 && (impl_15 = new ConnectorBundleLoaderImpl) , impl_15), this.this$1.packageName);\n}\n;\nfunction ConnectorBundleLoaderImpl$6$1$1(){\n}\n\ndefineClass(1560, 1, $intern_113, ConnectorBundleLoaderImpl$6$1$1);\n_.invoke = function invoke_199(target, params){\n  return new VCalendar;\n}\n;\nfunction ConnectorBundleLoaderImpl$6$1$2(){\n}\n\ndefineClass(1298, 1, $intern_113, ConnectorBundleLoaderImpl$6$1$2);\n_.invoke = function invoke_200(target, params){\n  return new CalendarState$Action;\n}\n;\nfunction ConnectorBundleLoaderImpl$6$1$3(){\n}\n\ndefineClass(861, 1, $intern_113, ConnectorBundleLoaderImpl$6$1$3);\n_.invoke = function invoke_201(target, params){\n  return new CalendarState$Day;\n}\n;\nfunction ConnectorBundleLoaderImpl$6$1$4(){\n}\n\ndefineClass(1327, 1, $intern_113, ConnectorBundleLoaderImpl$6$1$4);\n_.invoke = function invoke_202(target, params){\n  return new CalendarState;\n}\n;\nfunction ConnectorBundleLoaderImpl$6$1$5(){\n}\n\ndefineClass(574, 1, $intern_113, ConnectorBundleLoaderImpl$6$1$5);\n_.invoke = function invoke_203(target, params){\n  return new CalendarConnector;\n}\n;\nfunction ConnectorBundleLoaderImpl$6$1$6(){\n}\n\ndefineClass(1170, 1, $intern_113, ConnectorBundleLoaderImpl$6$1$6);\n_.invoke = function invoke_204(target, params){\n  return new CalendarState$Event;\n}\n;\ndefineClass(1009, $intern_75, $intern_156);\n_.focus_0 = function focus_9(){\n  ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).focus_1(($clinit_DOM() , this.element_0));\n}\n;\nfunction $addEventToMonthGrid(this$static, e, renderImmediately){\n  var cell, d, dayCells, eventAdded, eventMoving, inProgress, row, sdc, sdc$iterator, sdc$iterator0, timeCells, to, when;\n  when = e.start_0;\n  to = e.end;\n  eventAdded = false;\n  inProgress = false;\n  eventMoving = false;\n  dayCells = new ArrayList;\n  timeCells = new ArrayList;\n  for (row = 0; row < this$static.monthGrid.numRows; row++) {\n    if (eventAdded) {\n      break;\n    }\n    for (cell = 0; cell < this$static.monthGrid.numColumns; cell++) {\n      sdc = dynamicCast($getWidget_0(this$static.monthGrid, row, cell), 67);\n      if ($isEventInDay(when, to, sdc.date) && $isEventInDayWithTime(when, to, sdc.date, e.endTime, e.allDay)) {\n        eventMoving || (eventMoving = !!sdc.moveEvent);\n        d = sub_0(fromDouble(e.endTime.jsdate.getTime()), fromDouble(e.startTime.jsdate.getTime()));\n        gt(d, P0_longLit) && lte(d, P5265c00_longLit) && !e.allDay?(setCheck(timeCells.array, timeCells.size_0++, sdc) , true):(setCheck(dayCells.array, dayCells.size_0++, sdc) , true);\n        inProgress = true;\n        continue;\n      }\n       else if (inProgress) {\n        eventAdded = true;\n        inProgress = false;\n        break;\n      }\n    }\n  }\n  $updateEventSlotIndex(e, dayCells);\n  $updateEventSlotIndex(e, timeCells);\n  for (sdc$iterator0 = new AbstractList$IteratorImpl(dayCells); sdc$iterator0.i < sdc$iterator0.this$0_0.size_1();) {\n    sdc = dynamicCast($next_3(sdc$iterator0), 67);\n    $addCalendarEvent(sdc, e);\n  }\n  for (sdc$iterator = new AbstractList$IteratorImpl(timeCells); sdc$iterator.i < sdc$iterator.this$0_0.size_1();) {\n    sdc = dynamicCast($next_3(sdc$iterator), 67);\n    $addCalendarEvent(sdc, e);\n  }\n  renderImmediately && $reDrawAllMonthEvents(this$static, !eventMoving);\n}\n\nfunction $blockSelect(e){\n  e.onselectstart = function(){\n    return false;\n  }\n  ;\n  e.ondragstart = function(){\n    return false;\n  }\n  ;\n}\n\nfunction $getTimeFormat(this$static){\n  if (this$static.format) {\n    return this$static.time24format_date;\n  }\n  return this$static.time12format_date;\n}\n\nfunction $isDisabledOrReadOnly(this$static){\n  return this$static.disabled_0 || this$static.readOnly;\n}\n\nfunction $isEventInDay(eventWhen, eventTo, gridDate){\n  if (signum(sub_0(fromDouble(eventWhen.jsdate.getTime()), fromDouble(gridDate.jsdate.getTime()))) <= 0 && signum(sub_0(fromDouble(eventTo.jsdate.getTime()), fromDouble(gridDate.jsdate.getTime()))) >= 0) {\n    return true;\n  }\n  return false;\n}\n\nfunction $isEventInDayWithTime(from, to, date, endTime, isAllDay){\n  return isAllDay || !(to.jsdate.getDay() == date.jsdate.getDay() && from.jsdate.getDay() != to.jsdate.getDay() && endTime.jsdate.getHours() == 0 && endTime.jsdate.getMinutes() == 0 && endTime.jsdate.getSeconds() == 0);\n}\n\nfunction $isSlotEmpty(addedEvent, slotIndex, cells_0){\n  var e, sdc, sdc$iterator;\n  for (sdc$iterator = new AbstractList$IteratorImpl(cells_0); sdc$iterator.i < sdc$iterator.this$0_0.size_1();) {\n    sdc = dynamicCast($next_3(sdc$iterator), 67);\n    e = sdc.events[slotIndex];\n    if (!!e && e != addedEvent) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction $reDrawAllMonthEvents(this$static, clearCells){\n  var cell, row, sdc;\n  for (row = 0; row < this$static.monthGrid.numRows; row++) {\n    for (cell = 0; cell < $getCellCount_0(this$static.monthGrid); cell++) {\n      sdc = dynamicCast($getWidget_0(this$static.monthGrid, row, cell), 67);\n      $setHeightPX_0(sdc, sdc.intHeight + 1, clearCells);\n    }\n  }\n}\n\nfunction $recalculateHeights(this$static){\n  if (this$static.monthGrid) {\n    this$static.intHeight == -1?$addStyleDependentName(this$static.monthGrid, 'sizedheight'):$removeStyleDependentName(this$static.monthGrid, 'sizedheight');\n    $updateCellSizes(this$static.monthGrid, this$static.intWidth - $getOffsetWidth(this$static.weekToolbar), this$static.intHeight - $getOffsetHeight(this$static.nameToolbar));\n    $setHeightPX_1(this$static.weekToolbar, this$static.intHeight == -1?this$static.intHeight:this$static.intHeight - $getOffsetHeight(this$static.nameToolbar));\n  }\n   else \n    !!this$static.weekGrid && $setHeightPX_2(this$static.weekGrid, this$static.intHeight == -1?this$static.intHeight:this$static.intHeight - $getOffsetHeight(this$static.weeklyLongEvents) - $getOffsetHeight(this$static.dayToolbar));\n}\n\nfunction $recalculateWidths(this$static){\n  if (this$static.isWidthUndefined) {\n    $setWidthPX_0(this$static.dayToolbar, this$static.intWidth);\n    $setWidthPX_1(this$static.nameToolbar, this$static.intWidth);\n    if (this$static.monthGrid) {\n      this$static.intWidth == -1?$addStyleDependentName(this$static.monthGrid, 'sizedwidth'):$removeStyleDependentName(this$static.monthGrid, 'sizedwidth');\n    }\n     else if (this$static.weekGrid) {\n      $setWidthPX_2(this$static.weekGrid, this$static.intWidth);\n      $setWidthPX_3(this$static.weeklyLongEvents, this$static.weekGrid.width_0);\n    }\n  }\n   else {\n    $setWidthPX_1(this$static.nameToolbar, this$static.intWidth);\n    $setWidthPX_0(this$static.dayToolbar, this$static.intWidth);\n    if (this$static.monthGrid) {\n      $updateCellSizes(this$static.monthGrid, this$static.intWidth - $getOffsetWidth(this$static.weekToolbar), this$static.intHeight - $getOffsetHeight(this$static.nameToolbar));\n    }\n     else if (this$static.weekGrid) {\n      $setWidthPX_2(this$static.weekGrid, this$static.intWidth);\n      $setWidthPX_3(this$static.weeklyLongEvents, this$static.weekGrid.width_0);\n    }\n  }\n}\n\nfunction $removeMonthEvent(this$static, target){\n  var cell, row, sdc;\n  if (!!target && target.slotIndex >= 0) {\n    for (row = 0; row < this$static.monthGrid.numRows; row++) {\n      for (cell = 0; cell < this$static.monthGrid.numColumns; cell++) {\n        sdc = dynamicCast($getWidget_0(this$static.monthGrid, row, cell), 67);\n        if (!sdc) {\n          return;\n        }\n        $removeEvent(sdc, target);\n      }\n    }\n  }\n}\n\nfunction $set24HFormat(this$static, format){\n  this$static.format = format;\n}\n\nfunction $setBackwardNavigationEnabled(this$static, enabled){\n  this$static.backwardNavigationEnabled = enabled;\n}\n\nfunction $setDayNames(this$static, names){\n  this$static.dayNames = names;\n}\n\nfunction $setDisabled_0(this$static, disabled){\n  this$static.disabled_0 = disabled;\n}\n\nfunction $setDropHandler(this$static, dropHandler){\n  this$static.dropHandler = dropHandler;\n}\n\nfunction $setEventMoveAllowed(this$static, eventMoveAllowed){\n  this$static.eventMoveAllowed = eventMoveAllowed;\n}\n\nfunction $setEventResizeAllowed(this$static, eventResizeAllowed){\n  this$static.eventResizeAllowed = eventResizeAllowed;\n}\n\nfunction $setFirstDayNumber(this$static, dayNumber){\n  this$static.firstDay = dayNumber;\n}\n\nfunction $setFirstHourOfTheDay(this$static, hour){\n  this$static.firstHour = hour;\n}\n\nfunction $setForwardNavigationEnabled(this$static, enabled){\n  this$static.forwardNavigationEnabled = enabled;\n}\n\nfunction $setLastDayNumber(this$static, dayNumber){\n  this$static.lastDay = dayNumber;\n}\n\nfunction $setLastHourOfTheDay(this$static, hour){\n  this$static.lastHour = hour;\n}\n\nfunction $setListener(this$static, listener){\n  this$static.backwardListener = listener;\n}\n\nfunction $setListener_0(this$static, listener){\n  this$static.dateClickListener = listener;\n}\n\nfunction $setListener_1(this$static, listener){\n  this$static.eventClickListener = listener;\n}\n\nfunction $setListener_2(this$static, eventMovedListener){\n  this$static.eventMovedListener = eventMovedListener;\n}\n\nfunction $setListener_3(this$static, eventResizeListener){\n  this$static.eventResizeListener = eventResizeListener;\n}\n\nfunction $setListener_4(this$static, listener){\n  this$static.forwardListener = listener;\n}\n\nfunction $setListener_5(this$static, mouseEventListener){\n  this$static.mouseEventListener = mouseEventListener;\n}\n\nfunction $setListener_6(this$static, listener){\n  this$static.rangeSelectListener = listener;\n}\n\nfunction $setListener_7(this$static, scrollListener){\n  this$static.scrollListener = scrollListener;\n}\n\nfunction $setListener_8(this$static, listener){\n  this$static.weekClickListener = listener;\n}\n\nfunction $setMonthNames(this$static, names){\n  this$static.monthNames = names;\n}\n\nfunction $setRangeSelectAllowed(this$static, rangeSelectAllowed){\n  this$static.rangeSelectAllowed = rangeSelectAllowed;\n}\n\nfunction $setReadOnly_0(this$static, readOnly){\n  this$static.readOnly = readOnly;\n}\n\nfunction $setSizeForChildren(this$static, newWidth, newHeight){\n  this$static.intWidth = newWidth;\n  this$static.intHeight = newHeight;\n  this$static.isWidthUndefined = this$static.intWidth == -1;\n  $setVerticalSized_0(this$static.dayToolbar);\n  $setHorizontalSized_0(this$static.dayToolbar, this$static.isWidthUndefined);\n  $recalculateWidths(this$static);\n  $recalculateHeights(this$static);\n}\n\nfunction $sortEventsByDuration(events){\n  var sorted;\n  sorted = dynamicCast($toArray_1(events, initDim(_3Lcom_vaadin_client_ui_calendar_schedule_CalendarEvent_2_classLit, $intern_157, 146, events.size_0, 0)), 356);\n  sort_0(sorted, new VCalendar$2);\n  return sorted;\n}\n\nfunction $updateEventSlotIndex(e, cells_0){\n  var i, newSlot, sdc, sdc$iterator, slot;\n  if (cells_0.size_0 == 0) {\n    return;\n  }\n  if (e.slotIndex == -1) {\n    newSlot = -1;\n    for (sdc$iterator = new AbstractList$IteratorImpl(cells_0); sdc$iterator.i < sdc$iterator.this$0_0.size_1();) {\n      sdc = dynamicCast($next_3(sdc$iterator), 67);\n      slot = sdc.eventCount;\n      slot > newSlot && (newSlot = slot);\n    }\n    ++newSlot;\n    for (i = 0; i < newSlot; i++) {\n      if ($isSlotEmpty(e, i, cells_0)) {\n        newSlot = i;\n        break;\n      }\n    }\n    e.slotIndex = newSlot;\n  }\n}\n\nfunction $updateEventToMonthGrid(this$static, changedEvent){\n  $removeMonthEvent(this$static, changedEvent);\n  changedEvent.slotIndex = -1;\n  $addEventToMonthGrid(this$static, changedEvent, true);\n}\n\nfunction $updateEventsToMonthGrid(this$static, events){\n  var e, e$array, e$index, e$max;\n  for (e$array = $sortEventsByDuration(events) , e$index = 0 , e$max = e$array.length; e$index < e$max; ++e$index) {\n    e = e$array[e$index];\n    $addEventToMonthGrid(this$static, e, false);\n  }\n}\n\nfunction $updateEventsToWeekGrid(this$static, events){\n  var allDayLong, belowDayLong, e, e$index, e$iterator, e$max;\n  allDayLong = new ArrayList;\n  belowDayLong = new ArrayList;\n  for (e$index = 0 , e$max = events.length; e$index < e$max; ++e$index) {\n    e = events[e$index];\n    e.allDay?(setCheck(allDayLong.array, allDayLong.size_0++, e) , true):(setCheck(belowDayLong.array, belowDayLong.size_0++, e) , true);\n  }\n  $addEvents(this$static.weeklyLongEvents, allDayLong);\n  for (e$iterator = new AbstractList$IteratorImpl(belowDayLong); e$iterator.i < e$iterator.this$0_0.size_1();) {\n    e = dynamicCast($next_3(e$iterator), 146);\n    $addEvent_0(this$static.weekGrid, e);\n  }\n}\n\nfunction $updateMonthGrid(this$static, daysCount, days, today){\n  var cell, columns, d, date, day, day$iterator, dayOfMonth, dayOfWeek, firstDayFound, lastDayFound, monthNameDrawn, pos, week, x_0, y_0, dateOfMonth, dateOfMonth_0;\n  columns = this$static.lastDay - this$static.firstDay + 1;\n  this$static.rows_0 = round_int(Math.ceil(daysCount / 7));\n  this$static.monthGrid = new MonthGrid(this$static, this$static.rows_0, columns);\n  $setEnabled_7(this$static.monthGrid, !(this$static.disabled_0 || this$static.readOnly));\n  $removeAllRows(this$static.weekToolbar);\n  pos = 0;\n  monthNameDrawn = true;\n  firstDayFound = false;\n  lastDayFound = false;\n  for (day$iterator = new AbstractList$IteratorImpl(days); day$iterator.i < day$iterator.this$0_0.size_1();) {\n    day = dynamicCast($next_3(day$iterator), 229);\n    date = day.date;\n    d = $parse_0(this$static.dateformat_date, date, false);\n    dayOfWeek = day.dayOfWeek;\n    week = day.week;\n    dayOfMonth = d.jsdate.getDate();\n    if (dayOfMonth == 1) {\n      monthNameDrawn = false;\n      firstDayFound && (lastDayFound = true);\n      firstDayFound = true;\n    }\n    if (dayOfWeek < this$static.firstDay || dayOfWeek > this$static.lastDay) {\n      continue;\n    }\n    y_0 = ~~(pos / columns);\n    x_0 = pos - y_0 * columns;\n    x_0 == 0 && daysCount > 7 && $addWeek(this$static.weekToolbar, week, day.yearOfWeek);\n    cell = new SimpleDayCell(this$static, y_0, x_0);\n    $setMonthGrid(cell, this$static.monthGrid);\n    dateOfMonth = d.jsdate.getDate();\n    cell.monthNameVisible?cell.caption_0.setText(dateOfMonth + ' ' + cell.calendar.monthNames[d.jsdate.getMonth()]):cell.caption_0.setText('' + dateOfMonth);\n    cell.date = d;\n    $addDomHandler(cell, new VCalendar$1(this$static, cell), ($clinit_ContextMenuEvent() , $clinit_ContextMenuEvent() , TYPE_2));\n    firstDayFound?lastDayFound && $setStyleName_0(cell, getStylePrimaryName(($clinit_DOM() , cell.element_0)) + '-next-month', true):$setStyleName_0(cell, getStylePrimaryName(($clinit_DOM() , cell.element_0)) + '-prev-month', true);\n    if (dayOfMonth >= 1 && !monthNameDrawn) {\n      cell.monthNameVisible = true;\n      dateOfMonth_0 = cell.date.jsdate.getDate();\n      cell.caption_0.setText(dateOfMonth_0 + ' ' + cell.calendar.monthNames[cell.date.jsdate.getMonth()]);\n      monthNameDrawn = true;\n    }\n    today.jsdate.getDate() == dayOfMonth && today.jsdate.getFullYear() - $intern_35 == d.jsdate.getFullYear() - $intern_35 && today.jsdate.getMonth() == d.jsdate.getMonth() && $setStyleName_0(cell, getStylePrimaryName(($clinit_DOM() , cell.element_0)) + '-today', true);\n    $setWidget_2(this$static.monthGrid, y_0, x_0, cell);\n    ++pos;\n  }\n}\n\nfunction $updateMonthView(this$static, firstDayOfWeek, today, daysInMonth, events, days){\n  var dayNames, daysPerWeek, firstDay, i, j, lastDay, realDayNames;\n  while (this$static.outer.children_1.size_0 > 0) {\n    $remove_2(this$static.outer, 0);\n  }\n  firstDay = this$static.firstDay;\n  lastDay = this$static.lastDay;\n  daysPerWeek = lastDay - firstDay + 1;\n  j = 0;\n  dayNames = this$static.dayNames;\n  realDayNames = initDim(_3Ljava_lang_String_2_classLit, $intern_6, 2, daysPerWeek, 0);\n  if (firstDayOfWeek == 2) {\n    for (i = firstDay; i < lastDay + 1; i++) {\n      i == 7?(realDayNames[j++] = dayNames[0]):(realDayNames[j++] = dayNames[i]);\n    }\n  }\n   else {\n    for (i = firstDay - 1; i < lastDay; i++) {\n      realDayNames[j++] = dayNames[i];\n    }\n  }\n  $setDayNames_0(this$static.nameToolbar, realDayNames);\n  this$static.weeklyLongEvents = null;\n  this$static.weekGrid = null;\n  $updateMonthGrid(this$static, daysInMonth, days, today);\n  $add_5(this$static.outer, this$static.nameToolbar, ($clinit_DockPanel() , NORTH));\n  $add_5(this$static.outer, this$static.weekToolbar, WEST);\n  $updateCellHeights(this$static.weekToolbar);\n  $add_5(this$static.outer, this$static.monthGrid, CENTER_0);\n  $updateEventsToMonthGrid(this$static, events);\n}\n\nfunction $updateWeekGrid(this$static, days, today, realDayNames){\n  var d, date, day, day$iterator, dayOfMonth, dayOfWeek, isToday, localized_date_format;\n  $setFirstHour(this$static.weekGrid, this$static.firstHour);\n  $setLastHour(this$static.weekGrid, this$static.lastHour);\n  $updateTimeBar(this$static.weekGrid.timebar, this$static.format);\n  $clear_1(this$static.dayToolbar);\n  $addBackButton(this$static.dayToolbar);\n  $setVerticalSized_0(this$static.dayToolbar);\n  $setHorizontalSized_0(this$static.dayToolbar, this$static.isWidthUndefined);\n  $clearDates(this$static.weekGrid);\n  $setDisabled_4(this$static.weekGrid, this$static.disabled_0 || this$static.readOnly);\n  for (day$iterator = new AbstractList$IteratorImpl(days); day$iterator.i < day$iterator.this$0_0.size_1();) {\n    day = dynamicCast($next_3(day$iterator), 229);\n    date = day.date;\n    localized_date_format = day.localizedDateFormat;\n    d = $parse_0(this$static.dateformat_date, date, false);\n    dayOfWeek = day.dayOfWeek;\n    if (dayOfWeek < this$static.firstDay || dayOfWeek > this$static.lastDay) {\n      continue;\n    }\n    isToday = false;\n    dayOfMonth = d.jsdate.getDate();\n    today.jsdate.getDate() == dayOfMonth && today.jsdate.getFullYear() - $intern_35 == d.jsdate.getFullYear() - $intern_35 && today.jsdate.getMonth() == d.jsdate.getMonth() && (isToday = true);\n    $add_17(this$static.dayToolbar, realDayNames[dayOfWeek - 1], date, localized_date_format, isToday?'today':null);\n    $addDate_0(this$static.weeklyLongEvents, d);\n    $addDate(this$static.weekGrid, d);\n    isToday && $setToday_0(this$static.weekGrid, d, today);\n  }\n  $addNextButton(this$static.dayToolbar);\n}\n\nfunction $updateWeekView(this$static, scroll_0, today, firstDayOfWeek, events, days){\n  var i, j, realDayNames;\n  while (this$static.outer.children_1.size_0 > 0) {\n    $remove_2(this$static.outer, 0);\n  }\n  this$static.monthGrid = null;\n  realDayNames = initDim(_3Ljava_lang_String_2_classLit, $intern_6, 2, this$static.dayNames.length, 0);\n  j = 0;\n  if (firstDayOfWeek == 2) {\n    for (i = 1; i < this$static.dayNames.length; i++) {\n      realDayNames[j++] = this$static.dayNames[i];\n    }\n    realDayNames[j] = this$static.dayNames[0];\n  }\n   else {\n    for (i = 0; i < this$static.dayNames.length; i++) {\n      realDayNames[j++] = this$static.dayNames[i];\n    }\n  }\n  this$static.weeklyLongEvents = new WeeklyLongEvents(this$static);\n  !this$static.weekGrid && (this$static.weekGrid = new WeekGrid(this$static, this$static.format));\n  $updateWeekGrid(this$static, days, today, realDayNames);\n  $updateEventsToWeekGrid(this$static, $sortEventsByDuration(events));\n  $add_5(this$static.outer, this$static.dayToolbar, ($clinit_DockPanel() , NORTH));\n  $add_5(this$static.outer, this$static.weeklyLongEvents, NORTH);\n  $add_5(this$static.outer, this$static.weekGrid, SOUTH);\n  $setVerticalScrollPosition_0(this$static.weekGrid, scroll_0);\n}\n\nfunction VCalendar(){\n  this.outer = new DockPanel;\n  this.nameToolbar = new SimpleDayToolbar;\n  this.dayToolbar = new DayToolbar(this);\n  this.dateformat_datetime = ($clinit_DateTimeFormat_0() , getFormat('yyyy-MM-dd HH:mm:ss', $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_1))));\n  this.dateformat_date = getFormat('yyyy-MM-dd', $getDateTimeFormatInfo(instance_1));\n  this.time12format_date = getFormat('h:mm a', $getDateTimeFormatInfo(instance_1));\n  this.time24format_date = getFormat('HH:mm', $getDateTimeFormatInfo(instance_1));\n  this.weekToolbar = new SimpleWeekToolbar(this);\n  $initWidget(this, this.outer);\n  setStylePrimaryName(($clinit_DOM() , this.element_0), 'v-calendar');\n  $blockSelect(this.element_0);\n}\n\nfunction areDatesEqualToSecond(date1, date2){\n  return date1.jsdate.getFullYear() - $intern_35 == date2.jsdate.getFullYear() - $intern_35 && date1.jsdate.getMonth() == date2.jsdate.getMonth() && date1.jsdate.getDay() == date2.jsdate.getDay() && date1.jsdate.getHours() == date2.jsdate.getHours() && date1.jsdate.getSeconds() == date2.jsdate.getSeconds();\n}\n\nfunction distributeSize(totalSize, numberOfCells, sizeModifier){\n  var cellSizeOverFlow, cellSizes, i, j, startingSize;\n  cellSizes = initDim(_3I_classLit, $intern_12, 0, numberOfCells, 5);\n  startingSize = ~~(totalSize / numberOfCells);\n  cellSizeOverFlow = totalSize % numberOfCells;\n  for (i = 0; i < numberOfCells; i++) {\n    cellSizes[i] = startingSize + sizeModifier;\n  }\n  j = 0;\n  while (cellSizeOverFlow > 0) {\n    ++cellSizes[j];\n    --cellSizeOverFlow;\n    ++j;\n    j >= numberOfCells && (j = 0);\n  }\n  return cellSizes;\n}\n\nfunction isMidnight(date){\n  return date.jsdate.getHours() == 0 && date.jsdate.getMinutes() == 0 && date.jsdate.getSeconds() == 0;\n}\n\ndefineClass(19, 986, {2030:1, 2199:1, 1293:1, 2138:1, 322:1, 1979:1, 286:1, 20:1, 19:1, 290:1}, VCalendar);\n_.getDropHandler = function getDropHandler(){\n  return this.dropHandler;\n}\n;\n_.backwardNavigationEnabled = true;\n_.disabled_0 = false;\n_.eventMoveAllowed = true;\n_.eventResizeAllowed = true;\n_.firstDay = 0;\n_.firstHour = 0;\n_.format = false;\n_.forwardNavigationEnabled = true;\n_.intHeight = 0;\n_.intWidth = 0;\n_.isWidthUndefined = false;\n_.lastDay = 0;\n_.lastHour = 0;\n_.rangeSelectAllowed = true;\n_.readOnly = false;\n_.rows_0 = 0;\nfunction VCalendar$1(this$0, val$cell){\n  this.this$0 = this$0;\n  this.val$cell = val$cell;\n}\n\ndefineClass(710, 1, $intern_138, VCalendar$1);\n_.onContextMenu = function onContextMenu_0(event_0){\n  if (this.this$0.mouseEventListener) {\n    $preventDefault(event_0.nativeEvent);\n    $stopPropagation(event_0.nativeEvent);\n    $contextMenu(this.this$0.mouseEventListener, event_0, this.val$cell);\n  }\n}\n;\nfunction $compare(o1, o2){\n  var d1, d2, r;\n  if (o1.allDay != o2.allDay) {\n    if (o2.allDay) {\n      return 1;\n    }\n    return -1;\n  }\n  d1 = valueOf_46(sub_0(fromDouble(o1.endTime.jsdate.getTime()), fromDouble(o1.startTime.jsdate.getTime())));\n  d2 = valueOf_46(sub_0(fromDouble(o2.endTime.jsdate.getTime()), fromDouble(o2.startTime.jsdate.getTime())));\n  if (!$equals_6(d1, valueOf_46(P0_longLit)) && !$equals_6(d2, valueOf_46(P0_longLit))) {\n    r = compare_4(d2.value_0, d1.value_0);\n    return r == 0?$compareTo_6(valueOf_45(o2.index_0), valueOf_45(o1.index_0)):r;\n  }\n  if ($equals_6(d2, valueOf_46(P0_longLit)) && $equals_6(d1, valueOf_46(P0_longLit))) {\n    return $compareTo_6(valueOf_45(o2.index_0), valueOf_45(o1.index_0));\n  }\n   else if ($equals_6(d2, valueOf_46(P0_longLit)) && gte_0(d1.value_0, P5265c00_longLit)) {\n    return -1;\n  }\n   else if ($equals_6(d2, valueOf_46(P0_longLit)) && lt(d1.value_0, P5265c00_longLit)) {\n    return 1;\n  }\n   else if ($equals_6(d1, valueOf_46(P0_longLit)) && gte_0(d2.value_0, P5265c00_longLit)) {\n    return 1;\n  }\n   else if ($equals_6(d1, valueOf_46(P0_longLit)) && lt(d2.value_0, P5265c00_longLit)) {\n    return -1;\n  }\n  r = compare_4(d2.value_0, d1.value_0);\n  return r == 0?$compareTo_6(valueOf_45(o2.index_0), valueOf_45(o1.index_0)):r;\n}\n\nfunction VCalendar$2(){\n}\n\ndefineClass(1623, 1, {}, VCalendar$2);\n_.compare = function compare(o1, o2){\n  return $compare(dynamicCast(o1, 146), dynamicCast(o2, 146));\n}\n;\nfunction $calendarDayListOf(days){\n  var d, day, day$iterator, list;\n  list = new ArrayList_0(days.size_1());\n  for (day$iterator = days.iterator(); day$iterator.hasNext();) {\n    day = dynamicCast(day$iterator.next_0(), 317);\n    d = new CalendarDay(day.date, day.localizedDateFormat, day.dayOfWeek, day.week, day.yearOfWeek);\n    setCheck(list.array, list.size_0++, d);\n  }\n  return list;\n}\n\nfunction $calendarEventListOf(this$static, events, format24h){\n  var calendarEvent, dateFrom, dateTo, event_0, event$iterator, list, timeFrom, timeTo;\n  list = new ArrayList_0(events.size_1());\n  for (event$iterator = events.iterator(); event$iterator.hasNext();) {\n    event_0 = dynamicCast(event$iterator.next_0(), 273);\n    dateFrom = event_0.dateFrom;\n    dateTo = event_0.dateTo;\n    timeFrom = event_0.timeFrom;\n    timeTo = event_0.timeTo;\n    calendarEvent = new CalendarEvent;\n    $setAllDay(calendarEvent, event_0.allDay);\n    $setCaption_5(calendarEvent, event_0.caption_0);\n    $setStart(calendarEvent, $parse_0(dynamicCast($getWidget_1(this$static), 19).dateformat_date, dateFrom, false));\n    $setEnd(calendarEvent, $parse_0(dynamicCast($getWidget_1(this$static), 19).dateformat_date, dateTo, false));\n    calendarEvent.format24h = format24h;\n    $setStartTime(calendarEvent, $parse_0(dynamicCast($getWidget_1(this$static), 19).dateformat_datetime, dateFrom + ' ' + timeFrom, false));\n    $setEndTime(calendarEvent, $parse_0(dynamicCast($getWidget_1(this$static), 19).dateformat_datetime, dateTo + ' ' + timeTo, false));\n    $setStyleName_10(calendarEvent, event_0.styleName);\n    $setIndex_0(calendarEvent, event_0.index_0);\n    setCheck(list.array, list.size_0++, calendarEvent);\n  }\n  return list;\n}\n\nfunction $getActionEndDate(this$static, actionKey){\n  var dateStr, formatter;\n  dateStr = dynamicCast(this$static.actionMap.get_0(actionKey + '_e'), 2);\n  formatter = ($clinit_DateTimeFormat_0() , getFormat('yyyy-MM-dd HH:mm:ss', $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_1))));\n  return $parse_0(formatter, dateStr, false);\n}\n\nfunction $getActionStartDate(this$static, actionKey){\n  var dateStr, formatter;\n  dateStr = dynamicCast(this$static.actionMap.get_0(actionKey + '_s'), 2);\n  formatter = ($clinit_DateTimeFormat_0() , getFormat('yyyy-MM-dd HH:mm:ss', $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_1))));\n  return $parse_0(formatter, dateStr, false);\n}\n\nfunction $getActionsBetween(this$static, start_0, end){\n  var a, actionEndDate, actionKey, actionStartDate, actions, i, id_0, ids, test0, test1, test2, test3;\n  actions = new ArrayList;\n  ids = new ArrayList;\n  for (i = 0; i < this$static.actionKeys.size_0; i++) {\n    actionKey = dynamicCast($get_7(this$static.actionKeys, i), 2);\n    id_0 = dynamicCast(this$static.actionMap.get_0(actionKey + '_k'), 2);\n    if ($indexOf_4(ids, id_0, 0) == -1) {\n      actionStartDate = $getActionStartDate(this$static, actionKey);\n      actionEndDate = $getActionEndDate(this$static, actionKey);\n      test0 = signum(sub_0(fromDouble(actionStartDate.jsdate.getTime()), fromDouble(start_0.jsdate.getTime()))) >= 0 && signum(sub_0(fromDouble(actionEndDate.jsdate.getTime()), fromDouble(end.jsdate.getTime()))) <= 0;\n      test1 = signum(sub_0(fromDouble(actionEndDate.jsdate.getTime()), fromDouble(start_0.jsdate.getTime()))) > 0 && signum(sub_0(fromDouble(actionEndDate.jsdate.getTime()), fromDouble(end.jsdate.getTime()))) <= 0;\n      test2 = signum(sub_0(fromDouble(actionStartDate.jsdate.getTime()), fromDouble(start_0.jsdate.getTime()))) >= 0 && signum(sub_0(fromDouble(actionStartDate.jsdate.getTime()), fromDouble(end.jsdate.getTime()))) < 0;\n      test3 = signum(sub_0(fromDouble(start_0.jsdate.getTime()), fromDouble(actionStartDate.jsdate.getTime()))) >= 0 && signum(sub_0(fromDouble(end.jsdate.getTime()), fromDouble(actionEndDate.jsdate.getTime()))) <= 0;\n      if (test0 || test1 || test2 || test3) {\n        a = new VCalendarAction(this$static, this$static.rpc, actionKey);\n        $setCaption(a, dynamicCast(this$static.actionMap.get_0(actionKey + '_c'), 2));\n        $setIconUrl(a, dynamicCast(this$static.actionMap.get_0(actionKey + '_i'), 2));\n        a.actionStartDate = start_0;\n        a.actionEndDate = end;\n        setCheck(actions.array, actions.size_0++, a);\n        setCheck(ids.array, ids.size_0++, id_0);\n      }\n    }\n  }\n  return dynamicCast($toArray_1(actions, initDim(_3Lcom_vaadin_client_ui_Action_2_classLit, $intern_135, 83, actions.size_0, 0)), 84);\n}\n\nfunction $registerEventToolTips(this$static, events){\n  var e, e$iterator;\n  for (e$iterator = events.iterator(); e$iterator.hasNext();) {\n    e = dynamicCast(e$iterator.next_0(), 273);\n    e.description != null && !$equals_7('', e.description)?this$static.tooltips.put(valueOf_45(e.index_0), e.description):this$static.tooltips.remove_4(valueOf_45(e.index_0));\n  }\n}\n\nfunction $updateActionMap_1(this$static, actions){\n  var action, action$iterator, id_0;\n  this$static.actionMap.clear_1();\n  $clear_7(this$static.actionKeys);\n  if (!actions) {\n    return;\n  }\n  for (action$iterator = actions.iterator(); action$iterator.hasNext();) {\n    action = dynamicCast(action$iterator.next_0(), 338);\n    id_0 = action.actionKey + '-' + action.startDate + '-' + action.endDate;\n    this$static.actionMap.put(id_0 + '_k', action.actionKey);\n    this$static.actionMap.put(id_0 + '_c', action.caption_0);\n    this$static.actionMap.put(id_0 + '_s', action.startDate);\n    this$static.actionMap.put(id_0 + '_e', action.endDate);\n    $add_20(this$static.actionKeys, id_0);\n    action.iconKey != null?this$static.actionMap.put(id_0 + '_i', $getResourceUrl(this$static, action.iconKey)):this$static.actionMap.remove_4(id_0 + '_i');\n  }\n  sort_1(this$static.actionKeys);\n}\n\nfunction $updateSizes_0(this$static){\n  var height, width_0;\n  height = $getOuterHeight(this$static.connection.layoutManager, $getElement(dynamicCast($getWidget_1(this$static), 19)));\n  width_0 = $getOuterWidth(this$static.connection.layoutManager, $getElement(dynamicCast($getWidget_1(this$static), 19)));\n  isUndefinedWidth_0((!this$static.state && (this$static.state = $createState(this$static)) , dynamicCast(dynamicCast(this$static.state, 5), 79))) && (width_0 = -1);\n  isUndefinedHeight_0((!this$static.state && (this$static.state = $createState(this$static)) , dynamicCast(dynamicCast(this$static.state, 5), 79))) && (height = -1);\n  $setSizeForChildren(dynamicCast($getWidget_1(this$static), 19), width_0, height);\n}\n\nfunction CalendarConnector(){\n  AbstractComponentConnector.call(this);\n  this.rpc = dynamicCast(create_5(Lcom_vaadin_shared_ui_calendar_CalendarServerRpc_2_classLit, this), 1263);\n  this.actionMap = new HashMap;\n  this.tooltips = new HashMap;\n  this.actionKeys = new ArrayList;\n  $setListener_0(dynamicCast($getWidget_1(this), 19), new CalendarConnector$2(this));\n  $setListener_4(dynamicCast($getWidget_1(this), 19), new CalendarConnector$3(this));\n  $setListener(dynamicCast($getWidget_1(this), 19), new CalendarConnector$4(this));\n  $setListener_6(dynamicCast($getWidget_1(this), 19), new CalendarConnector$5(this));\n  $setListener_8(dynamicCast($getWidget_1(this), 19), new CalendarConnector$6(this));\n  $setListener_2(dynamicCast($getWidget_1(this), 19), new CalendarConnector$7(this));\n  $setListener_3(dynamicCast($getWidget_1(this), 19), new CalendarConnector$8(this));\n  $setListener_7(dynamicCast($getWidget_1(this), 19), new CalendarConnector$9(this));\n  $setListener_1(dynamicCast($getWidget_1(this), 19), new CalendarConnector$10(this));\n  $setListener_5(dynamicCast($getWidget_1(this), 19), new CalendarConnector$11(this));\n}\n\ndefineClass(1219, 348, {352:1, 6:1, 319:1, 62:1, 681:1, 348:1, 188:1, 1988:1, 76:1, 341:1, 123:1, 3:1}, CalendarConnector);\n_.getActions = function getActions_4(){\n  var a, actionKey, actions, i;\n  actions = new ArrayList;\n  for (i = 0; i < this.actionKeys.size_0; i++) {\n    actionKey = dynamicCast($get_7(this.actionKeys, i), 2);\n    a = new VCalendarAction(this, this.rpc, actionKey);\n    $setCaption(a, dynamicCast(this.actionMap.get_0(actionKey + '_c'), 2));\n    $setIconUrl(a, dynamicCast(this.actionMap.get_0(actionKey + '_i'), 2));\n    $setActionStartDate(a, $getActionStartDate(this, actionKey));\n    $setActionEndDate(a, $getActionEndDate(this, actionKey));\n    setCheck(actions.array, actions.size_0++, a);\n  }\n  return dynamicCast($toArray_1(actions, initDim(_3Lcom_vaadin_client_ui_Action_2_classLit, $intern_135, 83, actions.size_0, 0)), 84);\n}\n;\n_.getClient = function getClient_4(){\n  return this.connection;\n}\n;\n_.getPaintableId = function getPaintableId_4(){\n  return this.id_0;\n}\n;\n_.getState = function getState_28(){\n  return !this.state && (this.state = $createState(this)) , dynamicCast(dynamicCast(this.state, 5), 79);\n}\n;\n_.getState_0 = function getState_29(){\n  return !this.state && (this.state = $createState(this)) , dynamicCast(dynamicCast(this.state, 5), 79);\n}\n;\n_.getTooltipInfo = function getTooltipInfo_0(element){\n  var title_0, tooltipInfo, w;\n  tooltipInfo = null;\n  w = findWidget(element, null);\n  if (instanceOf(w, 365)) {\n    tooltipInfo = new TooltipInfo;\n    title_0 = dynamicCast(this.tooltips.get_0(dynamicCast(w, 365).getTooltipKey()), 2);\n    tooltipInfo.title_0 = title_0 != null?title_0:'';\n  }\n  !tooltipInfo && (tooltipInfo = new TooltipInfo_1((!this.state && (this.state = $createState(this)) , dynamicCast(dynamicCast(this.state, 5), 79)).description, (!this.state && (this.state = $createState(this)) , dynamicCast(dynamicCast(this.state, 5), 79)).errorMessage));\n  return tooltipInfo;\n}\n;\n_.getWidget_0 = function getWidget_15(){\n  return dynamicCast($getWidget_1(this), 19);\n}\n;\n_.hasTooltip_0 = function hasTooltip_0(){\n  return true;\n}\n;\n_.init = function init_12(){\n  $registerRpc(this, Lcom_vaadin_shared_ui_calendar_CalendarClientRpc_2_classLit, new CalendarConnector$1);\n  $registerDependency(this.connection.layoutManager, this, $getElement(dynamicCast($getWidget_1(this), 19)));\n}\n;\n_.layout_0 = function layout_1(){\n  $updateSizes_0(this);\n}\n;\n_.onStateChanged = function onStateChanged_12(stateChangeEvent){\n  var days, dropHandler, events, state, widget, state_0, state_1;\n  $onStateChanged_0(this, stateChangeEvent);\n  state = (!this.state && (this.state = $createState(this)) , dynamicCast(dynamicCast(this.state, 5), 79));\n  widget = dynamicCast($getWidget_1(this), 19);\n  $setForwardNavigationEnabled(widget, $hasEventListener(this, 'forward'));\n  $setBackwardNavigationEnabled(widget, $hasEventListener(this, 'backward'));\n  $set24HFormat(widget, state.format24H);\n  $setDayNames(widget, state.dayNames);\n  $setMonthNames(widget, state.monthNames);\n  $setFirstDayNumber(widget, state.firstVisibleDayOfWeek);\n  $setLastDayNumber(widget, state.lastVisibleDayOfWeek);\n  $setFirstHourOfTheDay(widget, state.firstHourOfDay);\n  $setLastHourOfTheDay(widget, state.lastHourOfDay);\n  $setReadOnly_0(widget, state.readOnly);\n  $setDisabled_0(widget, !state.enabled);\n  $setRangeSelectAllowed(widget, $hasEventListener(this, 'rangeSelect'));\n  $hasEventListener(this, 'eventMove');\n  $setEventMoveAllowed(widget, $hasEventListener(this, 'eventMove'));\n  $setEventResizeAllowed(widget, $hasEventListener(this, 'eventResize'));\n  days = state.days;\n  events = state.events;\n  dropHandler = dynamicCast($getWidget_1(this), 19).dropHandler;\n  if ((!this.state && (this.state = $createState(this)) , dynamicCast(dynamicCast(this.state, 5), 79)).days.size_1() > 7) {\n    state_0 = (!this.state && (this.state = $createState(this)) , dynamicCast(dynamicCast(this.state, 5), 79));\n    $updateMonthView(dynamicCast($getWidget_1(this), 19), state_0.firstDayOfWeek, $parse_0(dynamicCast($getWidget_1(this), 19).dateformat_datetime, state_0.now_0, false), days.size_1(), $calendarEventListOf(this, events, state_0.format24H), $calendarDayListOf(days));\n    !!dropHandler && !instanceOf(dropHandler, 326) && $setDropHandler(dynamicCast($getWidget_1(this), 19), new CalendarMonthDropHandler(this));\n  }\n   else {\n    state_1 = (!this.state && (this.state = $createState(this)) , dynamicCast(dynamicCast(this.state, 5), 79));\n    $updateWeekView(dynamicCast($getWidget_1(this), 19), state_1.scroll_0, $parse_0(dynamicCast($getWidget_1(this), 19).dateformat_datetime, state_1.now_0, false), (days.size_1() , state_1.firstDayOfWeek), $calendarEventListOf(this, events, state_1.format24H), $calendarDayListOf(days));\n    !!dropHandler && !instanceOf(dropHandler, 313) && $setDropHandler(dynamicCast($getWidget_1(this), 19), new CalendarWeekDropHandler(this));\n  }\n  $updateSizes_0(this);\n  $registerEventToolTips(this, state.events);\n  $updateActionMap_1(this, state.actions);\n}\n;\n_.onUnregister = function onUnregister_4(){\n  $onUnregister_0(this);\n  $unregisterDependency(this.connection.layoutManager, this, $getElement(dynamicCast($getWidget_1(this), 19)));\n}\n;\n_.updateFromUIDL = function updateFromUIDL(uidl, client){\n  var child, childIterator;\n  childIterator = new UIDL$1(uidl);\n  while ($hasNext(childIterator)) {\n    child = dynamicCastJso($next_2(childIterator));\n    if ($equals_7('-ac', child[0])) {\n      !dynamicCast($getWidget_1(this), 19).dropHandler && $setDropHandler(dynamicCast($getWidget_1(this), 19), (!this.state && (this.state = $createState(this)) , dynamicCast(dynamicCast(this.state, 5), 79)).days.size_1() > 7?new CalendarMonthDropHandler(this):new CalendarWeekDropHandler(this));\n      $updateAcceptRules(dynamicCast($getWidget_1(this), 19).dropHandler, child);\n    }\n     else {\n      $setDropHandler(dynamicCast($getWidget_1(this), 19), null);\n    }\n  }\n}\n;\nfunction CalendarConnector$1(){\n}\n\ndefineClass(669, 1, {796:1, 1636:1, 3:1}, CalendarConnector$1);\n_.scroll_1 = function scroll_1(scrollPosition){\n}\n;\nfunction $eventClick_0(this$static, event_0){\n  $hasEventListener(this$static.this$0, 'eventClick') && $eventClick(this$static.this$0.rpc, event_0.index_0);\n}\n\nfunction CalendarConnector$10(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(1244, 1, {}, CalendarConnector$10);\nfunction $contextMenu(this$static, event_0, widget){\n  var left, ne, top_0;\n  ne = event_0.nativeEvent;\n  left = toInt32(($clinit_DOMImpl() , ne).clientX || 0);\n  top_0 = toInt32(ne.clientY || 0);\n  top_0 += ($clinit_Window() , $getScrollTop($doc));\n  left += $getScrollLeft_0($doc);\n  $showAt_0($getContextMenu(this$static.this$0.connection), new CalendarConnector$11$1(this$static, widget, ne), left, top_0);\n}\n\nfunction CalendarConnector$11(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(899, 1, {}, CalendarConnector$11);\nfunction CalendarConnector$11$1(this$1, val$widget, val$ne){\n  this.this$1 = this$1;\n  this.val$widget = val$widget;\n  this.val$ne = val$ne;\n}\n\ndefineClass(1256, 1, {1988:1}, CalendarConnector$11$1);\n_.getActions = function getActions_5(){\n  var action, action$index, action$max, actions, cell, dayEvent, end, event_0, mel, slot, slotIndex, start_0;\n  if (instanceOf(this.val$widget, 67)) {\n    cell = dynamicCast(this.val$widget, 67);\n    start_0 = new Date_2(cell.date.jsdate.getFullYear() - $intern_35, cell.date.jsdate.getMonth(), cell.date.jsdate.getDate(), 0, 0, 0);\n    end = new Date_2(cell.date.jsdate.getFullYear() - $intern_35, cell.date.jsdate.getMonth(), cell.date.jsdate.getDate(), 23, 59, 59);\n    return $getActionsBetween(this.this$1.this$0, start_0, end);\n  }\n   else if (instanceOf(this.val$widget, 91)) {\n    mel = dynamicCast(this.val$widget, 91);\n    event_0 = mel.calendarEvent;\n    actions = $getActionsBetween(this.this$1.this$0, event_0.startTime, event_0.endTime);\n    for (action$index = 0 , action$max = actions.length; action$index < action$max; ++action$index) {\n      action = actions[action$index];\n      $setEvent(dynamicCast(action, 275), event_0);\n    }\n    return actions;\n  }\n   else if (instanceOf(this.val$widget, 59)) {\n    cell = dynamicCast(this.val$widget, 59);\n    slotIndex = getChildIndex(($clinit_DOM() , cell.element_0), $getEventTarget(this.val$ne));\n    slot = dynamicCast($get_7(cell.slots, slotIndex), 376);\n    return $getActionsBetween(this.this$1.this$0, slot.from, slot.to);\n  }\n   else if (instanceOf(this.val$widget, 70)) {\n    dayEvent = dynamicCast(this.val$widget, 70);\n    event_0 = dayEvent.calendarEvent;\n    actions = $getActionsBetween(this.this$1.this$0, event_0.startTime, event_0.endTime);\n    for (action$index = 0 , action$max = actions.length; action$index < action$max; ++action$index) {\n      action = actions[action$index];\n      $setEvent(dynamicCast(action, 275), event_0);\n    }\n    return actions;\n  }\n  return null;\n}\n;\n_.getClient = function getClient_5(){\n  return this.this$1.this$0.connection;\n}\n;\n_.getPaintableId = function getPaintableId_5(){\n  return this.this$1.this$0.id_0;\n}\n;\nfunction $dateClick_0(this$static, date){\n  !$isDisabledOrReadOnly(dynamicCast($getWidget_1(this$static.this$0), 19)) && $hasEventListener(this$static.this$0, 'dateClick') && $dateClick(this$static.this$0.rpc, date);\n}\n\nfunction CalendarConnector$2(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(1199, 1, {}, CalendarConnector$2);\nfunction $forward(this$static){\n  $hasEventListener(this$static.this$0, 'forward') && $invoke(this$static.this$0.rpc.val$handler, new Method(new Type(Lcom_vaadin_shared_ui_calendar_CalendarServerRpc_2_classLit), 'forward'), initValues(_3Ljava_lang_Object_2_classLit, $intern_5, 1, 3, []));\n}\n\nfunction CalendarConnector$3(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(980, 1, {}, CalendarConnector$3);\nfunction $backward(this$static){\n  $hasEventListener(this$static.this$0, 'backward') && $invoke(this$static.this$0.rpc.val$handler, new Method(new Type(Lcom_vaadin_shared_ui_calendar_CalendarServerRpc_2_classLit), 'backward'), initValues(_3Ljava_lang_Object_2_classLit, $intern_5, 1, 3, []));\n}\n\nfunction CalendarConnector$4(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(836, 1, {}, CalendarConnector$4);\nfunction $rangeSelected(this$static, value_0){\n  $hasEventListener(this$static.this$0, 'rangeSelect') && $rangeSelect(this$static.this$0.rpc, value_0);\n}\n\nfunction CalendarConnector$5(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(941, 1, {}, CalendarConnector$5);\nfunction $weekClick_0(this$static, event_0){\n  !$isDisabledOrReadOnly(dynamicCast($getWidget_1(this$static.this$0), 19)) && $hasEventListener(this$static.this$0, 'weekClick') && $weekClick(this$static.this$0.rpc, event_0);\n}\n\nfunction CalendarConnector$6(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(1618, 1, {}, CalendarConnector$6);\nfunction $eventMoved(this$static, event_0){\n  var sb;\n  if ($hasEventListener(this$static.this$0, 'eventMove')) {\n    sb = new StringBuilder;\n    $append_7(sb, formatClientSideDate(event_0.start_0));\n    $append_1(sb.impl, '-');\n    $append_7(sb, formatClientSideTime(event_0.startTime));\n    $eventMove(this$static.this$0.rpc, event_0.index_0, sb.impl.string);\n  }\n}\n\nfunction CalendarConnector$7(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(1701, 1, {}, CalendarConnector$7);\nfunction $eventResized(this$static, event_0){\n  var buffer, newEndDate, newStartDate;\n  if ($hasEventListener(this$static.this$0, 'eventResize')) {\n    buffer = new StringBuilder;\n    $append_7(buffer, formatClientSideDate(event_0.start_0));\n    $append_1(buffer.impl, '-');\n    $append_7(buffer, formatClientSideTime(event_0.startTime));\n    newStartDate = buffer.impl.string;\n    buffer = new StringBuilder;\n    $append_7(buffer, formatClientSideDate(event_0.end));\n    $append_1(buffer.impl, '-');\n    $append_7(buffer, formatClientSideTime(event_0.endTime));\n    newEndDate = buffer.impl.string;\n    $eventResize(this$static.this$0.rpc, event_0.index_0, newStartDate, newEndDate);\n  }\n}\n\nfunction CalendarConnector$8(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(464, 1, {}, CalendarConnector$8);\nfunction $scroll_1(this$static, scrollPosition){\n  $scroll_0(this$static.this$0.rpc, scrollPosition);\n}\n\nfunction CalendarConnector$9(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(1635, 1, {}, CalendarConnector$9);\nfunction $setActionEndDate(this$static, actionEndDate){\n  this$static.actionEndDate = actionEndDate;\n}\n\nfunction $setActionStartDate(this$static, actionStartDate){\n  this$static.actionStartDate = actionStartDate;\n}\n\nfunction $setEvent(this$static, event_0){\n  this$static.event_0 = event_0;\n}\n\nfunction VCalendarAction(owner, rpc, key){\n  Action.call(this, owner);\n  this.dateformat_datetime = ($clinit_DateTimeFormat_0() , getFormat('yyyy-MM-dd HH:mm:ss', $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_1))));\n  this.rpc = rpc;\n  this.actionKey = key;\n}\n\ndefineClass(275, 83, {1843:1, 1771:1, 83:1, 275:1}, VCalendarAction);\n_.execute_1 = function execute_81(){\n  var endDate, startDate;\n  startDate = $format(this.dateformat_datetime, this.actionStartDate, null);\n  endDate = $format(this.dateformat_datetime, this.actionEndDate, null);\n  !this.event_0?$actionOnEmptyCell(this.rpc, $split_0(this.actionKey, '-', 0)[0], startDate, endDate):$actionOnEvent(this.rpc, $split_0(this.actionKey, '-', 0)[0], startDate, endDate, this.event_0.index_0);\n  $hide_1($getContextMenu(this.owner.getClient()), false, true, true);\n}\n;\n_.actionKey = '';\nfunction CalendarDay(date, localizedDateFormat, dayOfWeek, week, yearOfWeek){\n  this.date = date;\n  this.localizedDateFormat = localizedDateFormat;\n  this.dayOfWeek = dayOfWeek;\n  this.week = week;\n  this.yearOfWeek = yearOfWeek;\n}\n\ndefineClass(229, 1, {229:1}, CalendarDay);\n_.dayOfWeek = 0;\n_.week = 0;\n_.yearOfWeek = 0;\nfunction $getRangeInMinutes(this$static){\n  return div_0(sub_0(fromDouble(this$static.endTime.jsdate.getTime()), fromDouble(this$static.startTime.jsdate.getTime())), Pea60_longLit);\n}\n\nfunction $getTimeAsText(this$static){\n  return this$static.format24h?$format(this$static.dateformat_date24, this$static.startTime, null):$format(this$static.dateformat_date, this$static.startTime, null);\n}\n\nfunction $isTimeOnDifferentDays(this$static){\n  var isSeveralDays;\n  isSeveralDays = false;\n  gt(sub_0(fromDouble(this$static.endTime.jsdate.getTime()), fromDouble(this$static.startTime.jsdate.getTime())), P5265c00_longLit)?(isSeveralDays = true):$compareTo_0(this$static.start_0, this$static.end) != 0 && $compareTo_0(this$static.endTime, this$static.end) != 0 && (isSeveralDays = true);\n  return isSeveralDays;\n}\n\nfunction $setAllDay(this$static, allDay){\n  this$static.allDay = allDay;\n}\n\nfunction $setCaption_5(this$static, caption){\n  this$static.caption_0 = caption;\n}\n\nfunction $setEnd(this$static, end){\n  this$static.end = end;\n}\n\nfunction $setEndTime(this$static, endTime){\n  this$static.endTime = endTime;\n}\n\nfunction $setIndex_0(this$static, index_0){\n  this$static.index_0 = index_0;\n}\n\nfunction $setStart(this$static, start_0){\n  this$static.start_0 = start_0;\n}\n\nfunction $setStartTime(this$static, startTime){\n  this$static.startTime = startTime;\n}\n\nfunction $setStyleName_10(this$static, style){\n  this$static.styleName = style;\n}\n\nfunction CalendarEvent(){\n  this.dateformat_date = ($clinit_DateTimeFormat_0() , getFormat('h:mm a', $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_1))));\n  this.dateformat_date24 = getFormat('H:mm', $getDateTimeFormatInfo(instance_1));\n}\n\ndefineClass(146, 1, {146:1}, CalendarEvent);\n_.allDay = false;\n_.format24h = false;\n_.index_0 = 0;\n_.slotIndex = -1;\ndefineClass(637, $intern_65, $intern_156);\n_.focus_0 = function focus_23(){\n  ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).focus_1(($clinit_DOM() , this.element_0));\n}\n;\nfunction $addEmphasisStyle(elementOver){\n  $addEmphasisStyle_0(($clinit_DOM() , elementOver));\n}\n\nfunction $addEmphasisStyle_0(elementOver){\n  var originalStylename;\n  originalStylename = elementOver.className;\n  $setClassName(elementOver, originalStylename + ' dragemphasis');\n}\n\nfunction $addEvent(this$static, dayEvent){\n  var dc, e, e$array, e$index, e$max, events, index_0, main;\n  main = ($clinit_DOM() , this$static.element_0);\n  index_0 = 0;\n  events = new ArrayList;\n  for (; index_0 < this$static.children_1.size_0; index_0++) {\n    dc = dynamicCast($get_4(this$static.children_1, index_0), 70);\n    $setDisabled_3(dc, this$static.disabled_0);\n    $add_20(events, dc.calendarEvent);\n  }\n  $add_20(events, dayEvent.calendarEvent);\n  index_0 = 0;\n  for (e$array = $sortEventsByDuration((this$static.weekgrid , events)) , e$index = 0 , e$max = e$array.length; e$index < e$max; ++e$index) {\n    e = e$array[e$index];\n    if (e == dayEvent.calendarEvent) {\n      break;\n    }\n    ++index_0;\n  }\n  $insert_0(this$static, dayEvent, main, index_0, true);\n}\n\nfunction $cancelRangeSelect(this$static){\n  releaseCapture_0(($clinit_DOM() , this$static.element_0));\n  ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).blur_0(this$static.element_0);\n  $clearSelectionRange(this$static);\n}\n\nfunction $clearSelectionRange(this$static){\n  var c, i, main, nodes;\n  if (this$static.eventRangeStart > -1) {\n    main = ($clinit_DOM() , this$static.element_0);\n    nodes = main.childNodes;\n    for (i = 0; i <= 47; i++) {\n      c = nodes[i];\n      if (!c) {\n        continue;\n      }\n      $removeClassName(c, 'v-daterange');\n    }\n    this$static.eventRangeStart = -1;\n  }\n}\n\nfunction $drawDayEvents(this$static, groups){\n  var col, colCount, columns, d, eventIndex, eventIndex$iterator, eventWidth, freeSpaceCol, g, g$iterator, i, i$iterator, index_0, index$iterator, newOrderindex, order;\n  for (g$iterator = new AbstractList$IteratorImpl(groups); g$iterator.i < g$iterator.this$0_0.size_1();) {\n    g = dynamicCast($next_3(g$iterator), 220);\n    colCount = 0;\n    order = new ArrayList;\n    columns = new HashMap;\n    for (eventIndex$iterator = new AbstractList$IteratorImpl(g.items); eventIndex$iterator.i < eventIndex$iterator.this$0_0.size_1();) {\n      eventIndex = dynamicCast($next_3(eventIndex$iterator), 40);\n      d = dynamicCast($getWidget(this$static, eventIndex.value_0), 70);\n      $setMoveWidth(d, this$static.width_0);\n      freeSpaceCol = $findFreeColumnSpaceOnLeft(this$static, new WeekGridMinuteTimeRange(d.calendarEvent.startTime, d.calendarEvent.endTime), order, columns);\n      if (freeSpaceCol >= 0) {\n        columns.put(eventIndex, valueOf_45(freeSpaceCol));\n        newOrderindex = 0;\n        for (i$iterator = new AbstractList$IteratorImpl(order); i$iterator.i < i$iterator.this$0_0.size_1();) {\n          i = dynamicCast($next_3(i$iterator), 40);\n          if (dynamicCast(columns.get_0(i), 40).value_0 >= freeSpaceCol) {\n            newOrderindex = $indexOf_4(order, i, 0);\n            break;\n          }\n        }\n        $add_19(order, newOrderindex, eventIndex);\n      }\n       else {\n        col = colCount++;\n        columns.put(eventIndex, valueOf_45(col));\n        setCheck(order.array, order.size_0++, eventIndex);\n      }\n    }\n    eventWidth = ~~(this$static.width_0 / colCount);\n    for (index$iterator = new AbstractList$IteratorImpl(g.items); index$iterator.i < index$iterator.this$0_0.size_1();) {\n      index_0 = dynamicCast($next_3(index$iterator), 40);\n      d = dynamicCast($getWidget(this$static, index_0.value_0), 70);\n      ($clinit_DOM() , d.element_0).style['marginLeft'] = eventWidth * dynamicCast(columns.get_0(index_0), 40).value_0 + ($clinit_Style$Unit() , 'px');\n      d.element_0.style['width'] = eventWidth + 'px';\n      $setSlotHeightInPX(d, this$static.startingSlotHeight);\n    }\n  }\n}\n\nfunction $findFreeColumnSpaceOnLeft(this$static, dateRange, order, columns){\n  var col, d, eventIndex, eventIndex$iterator, freeSpot, nextRange, skipIndex;\n  freeSpot = -1;\n  skipIndex = -1;\n  for (eventIndex$iterator = new AbstractList$IteratorImpl(order); eventIndex$iterator.i < eventIndex$iterator.this$0_0.size_1();) {\n    eventIndex = dynamicCast($next_3(eventIndex$iterator), 40);\n    col = dynamicCast(columns.get_0(eventIndex), 40).value_0;\n    if (col == skipIndex) {\n      continue;\n    }\n    if (freeSpot != -1 && freeSpot != col) {\n      return freeSpot;\n    }\n    d = dynamicCast($getWidget(this$static, eventIndex.value_0), 70);\n    nextRange = new WeekGridMinuteTimeRange(d.calendarEvent.startTime, d.calendarEvent.endTime);\n    if (doesOverlap(dateRange, nextRange)) {\n      skipIndex = col;\n      freeSpot = -1;\n    }\n     else {\n      freeSpot = col;\n    }\n  }\n  return freeSpot;\n}\n\nfunction $getOverlappingEvents(this$static, targetIndex){\n  var count, d, g, groupEnd, groupStart, i, nextRange, target, targetRange;\n  g = new DateCellGroup(valueOf_45(targetIndex));\n  count = this$static.children_1.size_0;\n  target = dynamicCast($get_4(this$static.children_1, targetIndex), 70);\n  targetRange = new WeekGridMinuteTimeRange(target.calendarEvent.startTime, target.calendarEvent.endTime);\n  groupStart = targetRange.start_0;\n  groupEnd = targetRange.end;\n  for (i = 0; i < count; i++) {\n    if (targetIndex == i) {\n      continue;\n    }\n    d = dynamicCast($get_4(this$static.children_1, i), 70);\n    nextRange = new WeekGridMinuteTimeRange(d.calendarEvent.startTime, d.calendarEvent.endTime);\n    if (doesOverlap(targetRange, nextRange)) {\n      $add_16(g, valueOf_45(i));\n      $before(nextRange.start_0, targetRange.start_0) && (groupStart = targetRange.start_0);\n      $after(nextRange.end, targetRange.end) && (groupEnd = targetRange.end);\n    }\n  }\n  $setDateRange(g, new WeekGridMinuteTimeRange(groupStart, groupEnd));\n  return g;\n}\n\nfunction $getSlotIndex(this$static, slotElement){\n  var i;\n  for (i = 0; i < this$static.slotElements.length; i++) {\n    if (slotElement == this$static.slotElements[i]) {\n      return i;\n    }\n  }\n  throw new IllegalArgumentException_0('Element not found in this DateCell');\n}\n\nfunction $recalculateCellHeights(this$static){\n  var i;\n  this$static.startingSlotHeight = ~~(this$static.height_0 / this$static.numberOfSlots);\n  for (i = 0; i < this$static.slotElements.length; i++) {\n    this$static.slotElements[i].style['height'] = this$static.slotElementHeights[i] + ($clinit_Style$Unit() , 'px');\n  }\n  $updateEventCellsHeight(this$static);\n}\n\nfunction $recalculateEventPositions(this$static){\n  var dayEvent, i;\n  for (i = 0; i < this$static.children_1.size_0; i++) {\n    dayEvent = dynamicCast($get_4(this$static.children_1, i), 70);\n    $updatePositionFor(this$static, dayEvent, this$static.date, dayEvent.calendarEvent);\n  }\n}\n\nfunction $recalculateEventWidths(this$static){\n  var count, curGroup, g, g$iterator, groups, handled, i, newGroup;\n  groups = new ArrayList;\n  count = this$static.children_1.size_0;\n  handled = new ArrayList;\n  for (i = 0; i < count; i++) {\n    if ($indexOf_4(handled, valueOf_45(i), 0) != -1) {\n      continue;\n    }\n    curGroup = $getOverlappingEvents(this$static, i);\n    $addAll_2(handled, curGroup.items);\n    newGroup = true;\n    if (curGroup.items.size_0 != count) {\n      for (g$iterator = new AbstractList$IteratorImpl(groups); g$iterator.i < g$iterator.this$0_0.size_1();) {\n        g = dynamicCast($next_3(g$iterator), 220);\n        if (doesOverlap(curGroup.range, g.range)) {\n          newGroup = false;\n          $updateGroup(g, curGroup);\n        }\n      }\n    }\n     else {\n      setCheck(groups.array, groups.size_0++, curGroup);\n      break;\n    }\n    newGroup && (setCheck(groups.array, groups.size_0++, curGroup) , true);\n  }\n  $drawDayEvents(this$static, groups);\n}\n\nfunction $recalculateTimeBarPosition(this$static){\n  var h_0, m_0, pixelTop;\n  h_0 = this$static.today.jsdate.getHours();\n  m_0 = this$static.today.jsdate.getMinutes();\n  if (h_0 >= this$static.firstHour && h_0 <= this$static.lastHour) {\n    pixelTop = $getPixelTopFor(this$static.weekgrid, m_0 + 60 * h_0);\n    $setPropertyImpl(this$static.todaybar.style, 'display', '');\n    this$static.todaybar.style['top'] = pixelTop + ($clinit_Style$Unit() , 'px');\n  }\n   else {\n    this$static.todaybar.style['display'] = ($clinit_Style$Display() , 'none');\n  }\n}\n\nfunction $removeEmphasisStyle(elementOver){\n  var originalStylename;\n  originalStylename = elementOver.className;\n  $setClassName(elementOver, $substring_0(originalStylename, 0, originalStylename.length - 13));\n}\n\nfunction $setDisabled_2(this$static, disabled){\n  this$static.disabled_0 = disabled;\n}\n\nfunction $setHeightPX(this$static, height, cellHeights){\n  this$static.height_0 = height;\n  this$static.slotElementHeights = cellHeights;\n  ($clinit_DOM() , this$static.element_0).style['height'] = height + 'px';\n  $recalculateCellHeights(this$static);\n  $recalculateEventPositions(this$static);\n  !!this$static.today && $recalculateTimeBarPosition(this$static);\n}\n\nfunction $setHorizontalSized(this$static, isHorizontalSized){\n  if (isHorizontalSized) {\n    $setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-Hsized', true);\n    this$static.width_0 = $getPropertyInt(this$static.element_0, 'offsetWidth') - measureHorizontalBorder(this$static.element_0);\n    $updateEventCellsWidth(this$static);\n    $recalculateEventWidths(this$static);\n  }\n   else {\n    $setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-Hsized', false);\n  }\n}\n\nfunction $setTimeBarWidth(this$static, timebarWidth){\n  this$static.todaybar.style['width'] = timebarWidth + ($clinit_Style$Unit() , 'px');\n}\n\nfunction $setToday(this$static, today, width_0){\n  var lastChild;\n  this$static.today = today;\n  $setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-today', true);\n  lastChild = this$static.element_0.lastChild;\n  if ($equals_7(lastChild.className, 'v-calendar-current-time')) {\n    this$static.todaybar = lastChild;\n  }\n   else {\n    this$static.todaybar = $createDivElement($doc);\n    $setClassName(this$static.todaybar, 'v-calendar-current-time');\n    $appendChild(this$static.element_0, this$static.todaybar);\n  }\n  width_0 != -1 && (this$static.todaybar.style['width'] = width_0 + ($clinit_Style$Unit() , 'px') , undefined);\n}\n\nfunction $setVerticalSized(this$static, isVerticalSized){\n  if (isVerticalSized) {\n    $setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-Vsized', true);\n    this$static.startingSlotHeight = (this$static.slotElements[0].offsetHeight || 0) | 0;\n    $updateEventCellsHeight(this$static);\n    $recalculateEventPositions(this$static);\n    !!this$static.today && $recalculateTimeBarPosition(this$static);\n  }\n   else {\n    $setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-Vsized', false);\n  }\n}\n\nfunction $setWidthPX(this$static, cellWidth){\n  this$static.width_0 = cellWidth;\n  ($clinit_DOM() , this$static.element_0).style['width'] = cellWidth + 'px';\n  $recalculateEventWidths(this$static);\n}\n\nfunction $shouldDisplay(this$static, event_0){\n  var display, eventEnd, eventEndHours, eventStart, eventStartHours;\n  if ($isTimeOnDifferentDays(event_0)) {\n    display = true;\n  }\n   else {\n    eventStart = event_0.startTime;\n    eventEnd = event_0.endTime;\n    eventStartHours = eventStart.jsdate.getHours();\n    eventEndHours = eventEnd.jsdate.getHours();\n    display = !(eventEndHours < this$static.firstHour || eventStartHours > this$static.lastHour);\n  }\n  return display;\n}\n\nfunction $updateEventCellsHeight(this$static){\n  var widget, widget$iterator;\n  for (widget$iterator = new WidgetCollection$WidgetIterator(this$static.children_1); widget$iterator.index_0 < widget$iterator.this$0.size_0;) {\n    widget = $next_1(widget$iterator);\n    instanceOf(widget, 70) && $setSlotHeightInPX(dynamicCast(widget, 70), this$static.startingSlotHeight);\n  }\n}\n\nfunction $updateEventCellsWidth(this$static){\n  var widget, widget$iterator;\n  for (widget$iterator = new WidgetCollection$WidgetIterator(this$static.children_1); widget$iterator.index_0 < widget$iterator.this$0.size_0;) {\n    widget = $next_1(widget$iterator);\n    instanceOf(widget, 70) && $setMoveWidth(dynamicCast(widget, 70), this$static.width_0);\n  }\n}\n\nfunction $updateGroup(targetGroup, byGroup){\n  var index_0, index$iterator, newEnd, newStart;\n  newStart = targetGroup.range.start_0;\n  newEnd = targetGroup.range.end;\n  $before(byGroup.range.start_0, targetGroup.range.start_0) && (newStart = byGroup.range.end);\n  $after(byGroup.range.start_0, targetGroup.range.end) && (newStart = byGroup.range.start_0);\n  $setDateRange(targetGroup, new WeekGridMinuteTimeRange(newStart, newEnd));\n  for (index$iterator = new AbstractList$IteratorImpl(byGroup.items); index$iterator.i < index$iterator.this$0_0.size_1();) {\n    index_0 = dynamicCast($next_3(index$iterator), 40);\n    $indexOf_4(targetGroup.items, index_0, 0) != -1 || $add_20(targetGroup.items, index_0);\n  }\n}\n\nfunction $updatePositionFor(this$static, dayEvent, targetDay, calendarEvent){\n  var fromDt, h_0, m_0, onDifferentDays, range, startFromMinutes, rangeInMinutesForDay;\n  if ($shouldDisplay(this$static, calendarEvent)) {\n    ($clinit_DOM() , dayEvent.element_0).style['display'] = '';\n    fromDt = calendarEvent.startTime;\n    h_0 = fromDt.jsdate.getHours();\n    m_0 = fromDt.jsdate.getMinutes();\n    range = ($isTimeOnDifferentDays(calendarEvent)?$compareTo_0(targetDay, calendarEvent.start_0) == 0?(rangeInMinutesForDay = sub_0(P5a0_longLit, div_0(sub_0(fromDouble(calendarEvent.startTime.jsdate.getTime()), fromDouble(calendarEvent.start_0.jsdate.getTime())), Pea60_longLit))):$compareTo_0(targetDay, calendarEvent.end) == 0?(rangeInMinutesForDay = div_0(sub_0(fromDouble(calendarEvent.endTime.jsdate.getTime()), fromDouble(calendarEvent.end.jsdate.getTime())), Pea60_longLit)):(rangeInMinutesForDay = P5a0_longLit):(rangeInMinutesForDay = div_0(sub_0(fromDouble(calendarEvent.endTime.jsdate.getTime()), fromDouble(calendarEvent.startTime.jsdate.getTime())), Pea60_longLit)) , rangeInMinutesForDay);\n    onDifferentDays = $isTimeOnDifferentDays(calendarEvent);\n    if (onDifferentDays) {\n      if ($compareTo_0(calendarEvent.start_0, targetDay) != 0) {\n        h_0 = 0;\n        m_0 = 0;\n      }\n    }\n    startFromMinutes = h_0 * 60 + m_0;\n    $updatePosition_0(dayEvent, fromInt(startFromMinutes), range);\n  }\n   else {\n    ($clinit_DOM() , dayEvent.element_0).style['display'] = ($clinit_Style$Display() , 'none');\n  }\n}\n\nfunction DateCell(parent_0, date){\n  var end, i, mainElement, slot, slotTime, start_0;\n  ComplexPanel.call(this);\n  this.eventRangeStart = -1;\n  this.eventRangeStop = -1;\n  this.disabled_0 = false;\n  this.slots = new ArrayList;\n  this.weekgrid = parent_0;\n  mainElement = ($clinit_DOM() , $createDivElement($doc));\n  $setElement_0(this, mainElement);\n  $setTabIndex(this.element_0, 0);\n  this.date = date;\n  setStyleName(this.element_0, 'v-calendar-day-times', true);\n  this.handlers = new LinkedList;\n  this.firstHour = this.weekgrid.firstHour;\n  this.lastHour = this.weekgrid.lastHour;\n  this.numberOfSlots = (this.lastHour - this.firstHour + 1) * 2;\n  slotTime = fromDouble(round0((this.lastHour - this.firstHour + 1) * 3600000 / this.numberOfSlots));\n  this.slotElements = initDim(_3Lcom_google_gwt_core_client_JavaScriptObject_2_classLit, $intern_5, 0, this.numberOfSlots, 2);\n  this.slotElementHeights = initDim(_3I_classLit, $intern_12, 0, this.numberOfSlots, 5);\n  $clear_7(this.slots);\n  start_0 = add_2(fromDouble(this.date.jsdate.getTime()), fromInt(this.firstHour * 3600000));\n  end = add_2(start_0, slotTime);\n  for (i = 0; i < this.numberOfSlots; i++) {\n    slot = new DateCell$DateCellSlot(new Date_3(start_0), new Date_3(end));\n    i % 2 == 0?$setClassName(slot.element_0, 'v-datecellslot-even'):$setClassName(slot.element_0, 'v-datecellslot');\n    sinkEvents_0(slot.element_0, 124);\n    $appendChild(mainElement, slot.element_0);\n    setCheck(this.slotElements, i, slot.element_0);\n    $add_20(this.slots, slot);\n    start_0 = end;\n    end = add_2(end, slotTime);\n  }\n  impl_5.sinkEvents(mainElement, 124);\n}\n\ndefineClass(59, 637, {1253:1, 2088:1, 2222:1, 2169:1, 1931:1, 1519:1, 1304:1, 1751:1, 1490:1, 2030:1, 352:1, 2199:1, 1293:1, 2138:1, 108:1, 1948:1, 1979:1, 217:1, 286:1, 20:1, 156:1, 59:1, 180:1}, DateCell);\n_.onAttach = function onAttach_13(){\n  $onAttach(this);\n  $add_22(this.handlers, $addHandler_3(this, this, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_9)));\n  $add_22(this.handlers, $addHandler_3(this, this, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_13)));\n  $add_22(this.handlers, $addHandler_3(this, this, ($clinit_MouseMoveEvent() , $clinit_MouseMoveEvent() , TYPE_10)));\n  $add_22(this.handlers, $addDomHandler(this, this, ($clinit_ContextMenuEvent() , $clinit_ContextMenuEvent() , TYPE_2)));\n  $add_22(this.handlers, $addDomHandler(this, this, ($clinit_KeyDownEvent() , $clinit_KeyDownEvent() , TYPE_5)));\n}\n;\n_.onContextMenu = function onContextMenu_2(event_0){\n  if (this.weekgrid.calendar.mouseEventListener) {\n    $preventDefault(event_0.nativeEvent);\n    $stopPropagation(event_0.nativeEvent);\n    $contextMenu(this.weekgrid.calendar.mouseEventListener, event_0, this);\n  }\n}\n;\n_.onDetach = function onDetach_24(){\n  var handler, handler$iterator;\n  for (handler$iterator = $listIterator(this.handlers, 0); handler$iterator.currentNode != handler$iterator.this$0.header;) {\n    handler = dynamicCast($next_7(handler$iterator), 165);\n    $removeHandler_0(handler.real);\n  }\n  $clear_9(this.handlers);\n  $onDetach(this);\n}\n;\n_.onKeyDown = function onKeyDown_15(event_0){\n  var keycode;\n  keycode = $getKeyCode(event_0.nativeEvent);\n  keycode == 27 && this.eventRangeStart > -1 && $cancelRangeSelect(this);\n}\n;\n_.onMouseDown = function onMouseDown_6(event_0){\n  var e;\n  if ($getButton(event_0.nativeEvent) == 1) {\n    e = $getEventTarget(event_0.nativeEvent);\n    if (e.className.indexOf('reserved') != -1 || this.disabled_0 || !this.weekgrid.calendar.rangeSelectAllowed) {\n      this.eventRangeStart = -1;\n    }\n     else {\n      this.eventRangeStart = $getY(event_0);\n      this.eventRangeStop = this.eventRangeStart;\n      setCapture_0(($clinit_DOM() , this.element_0));\n      ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).focus_1(this.element_0);\n    }\n  }\n}\n;\n_.onMouseMove = function onMouseMove_1(event_0){\n  var c, elemStart, elemStop, fromY, i, main, newY, nodes, toY;\n  if ($getButton(event_0.nativeEvent) != 1) {\n    return;\n  }\n  if (this.eventRangeStart >= 0) {\n    newY = $getY(event_0);\n    if (newY < this.eventRangeStart) {\n      fromY = newY;\n      toY = this.eventRangeStart;\n    }\n     else {\n      fromY = this.eventRangeStart;\n      toY = newY;\n    }\n    main = ($clinit_DOM() , this.element_0);\n    this.eventRangeStop = newY;\n    nodes = main.childNodes;\n    for (i = 0; i < nodes.length; i++) {\n      c = nodes[i];\n      if (this.todaybar != c) {\n        elemStart = (c.offsetTop || 0) | 0;\n        elemStop = elemStart + this.startingSlotHeight;\n        elemStart >= fromY && elemStart <= toY?$addClassName(c, 'v-daterange'):elemStop >= fromY && elemStop <= toY?$addClassName(c, 'v-daterange'):elemStop >= fromY && elemStart <= toY?$addClassName(c, 'v-daterange'):$removeClassName(c, 'v-daterange');\n      }\n    }\n  }\n  $preventDefault(event_0.nativeEvent);\n}\n;\n_.onMouseUp = function onMouseUp_2(event_0){\n  var currentDate, dragDistance, element, endMinutes, i, isRangeElement, main, nodes, slotEnd, slotStart, startMinutes, temp, yr;\n  if ($getButton(event_0.nativeEvent) != 1) {\n    return;\n  }\n  releaseCapture_0(($clinit_DOM() , this.element_0));\n  ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).blur_0(this.element_0);\n  dragDistance = abs_1(this.eventRangeStart - $getY(event_0));\n  if (dragDistance > 0 && this.eventRangeStart >= 0) {\n    main = this.element_0;\n    if (this.eventRangeStart > this.eventRangeStop) {\n      this.eventRangeStop <= -1 && (this.eventRangeStop = 0);\n      temp = this.eventRangeStart;\n      this.eventRangeStart = this.eventRangeStop;\n      this.eventRangeStop = temp;\n    }\n    nodes = main.childNodes;\n    slotStart = -1;\n    slotEnd = -1;\n    for (i = 0; i < nodes.length; i++) {\n      element = nodes[i];\n      isRangeElement = element.className.indexOf('v-daterange') != -1;\n      if (isRangeElement && slotStart == -1) {\n        slotStart = i;\n        slotEnd = i;\n      }\n       else if (isRangeElement) {\n        slotEnd = i;\n      }\n       else if (slotStart != -1 && slotEnd != -1) {\n        break;\n      }\n    }\n    $clearSelectionRange(this);\n    startMinutes = this.firstHour * 60 + slotStart * 30;\n    endMinutes = this.firstHour * 60 + (slotEnd + 1) * 30;\n    currentDate = this.date;\n    yr = currentDate.jsdate.getFullYear() - $intern_35 + $intern_35 + '-' + (currentDate.jsdate.getMonth() + 1) + '-' + currentDate.jsdate.getDate();\n    !!this.weekgrid.calendar.rangeSelectListener && $rangeSelected(this.weekgrid.calendar.rangeSelectListener, yr + ':' + startMinutes + ':' + endMinutes);\n    this.eventRangeStart = -1;\n  }\n   else {\n    this.eventRangeStart = -1;\n    $cancelRangeSelect(this);\n  }\n}\n;\n_.disabled_0 = false;\n_.eventRangeStart = 0;\n_.eventRangeStop = 0;\n_.firstHour = 0;\n_.height_0 = 0;\n_.lastHour = 0;\n_.numberOfSlots = 0;\n_.startingSlotHeight = 0;\n_.width_0 = 0;\nfunction DateCell$DateCellSlot(from, to){\n  $setElement_0(this, ($clinit_DOM() , $createDivElement($doc)));\n  $setInnerHTML(this.element_0, '&nbsp;');\n  this.from = from;\n  this.to = to;\n}\n\ndefineClass(376, 20, {2030:1, 2199:1, 1293:1, 2138:1, 1979:1, 286:1, 20:1, 376:1}, DateCell$DateCellSlot);\nfunction $addEmptyEventCells(this$static, eventCount){\n  var i, dateCell;\n  for (i = 0; i < eventCount; i++) {\n    dateCell = new WeeklyLongEventsDateCell;\n    $addDomHandler(dateCell, this$static, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_9));\n    $addDomHandler(dateCell, this$static, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_13));\n    $add_1(this$static, dateCell, ($clinit_DOM() , this$static.element_0));\n  }\n}\n\nfunction $getDateCell(this$static, slotIndex){\n  this$static.children_1.size_0 - 1 >= slotIndex || $addEmptyEventCells(this$static, slotIndex - (this$static.children_1.size_0 - 1));\n  return dynamicCast($get_4(this$static.children_1, slotIndex), 177);\n}\n\nfunction $setCalendar(this$static, calendar){\n  this$static.calendar = calendar;\n}\n\nfunction DateCellContainer(){\n  FlowPanel.call(this);\n  setStylePrimaryName(($clinit_DOM() , this.element_0), 'v-calendar-datecell');\n}\n\ndefineClass(210, $intern_75, {1304:1, 1490:1, 2030:1, 352:1, 2199:1, 1293:1, 2138:1, 108:1, 1948:1, 1979:1, 217:1, 286:1, 20:1, 210:1, 180:1}, DateCellContainer);\n_.onMouseDown = function onMouseDown_7(event_0){\n  this.clickTargetWidget = dynamicCast(event_0.source_0, 20);\n  $stopPropagation(event_0.nativeEvent);\n}\n;\n_.onMouseUp = function onMouseUp_3(event_0){\n  var calendarEvent;\n  if (maskUndefined(event_0.source_0) === maskUndefined(this.clickTargetWidget) && instanceOf(this.clickTargetWidget, 177) && !$isDisabledOrReadOnly(this.calendar)) {\n    calendarEvent = dynamicCast(this.clickTargetWidget, 177).calendarEvent;\n    !!this.calendar.eventClickListener && $eventClick_0(this.calendar.eventClickListener, calendarEvent);\n  }\n}\n;\ndefineClass(762, 747, {2048:1, 1814:1, 1898:1, 1838:1, 2088:1, 383:1, 297:1, 1909:1, 2152:1, 2162:1, 2241:1, 1963:1, 2075:1, 1877:1, 2222:1, 1858:1, 2213:1, 1974:1, 2169:1, 1931:1, 1910:1, 2229:1, 1980:1, 2144:1, 2084:1, 1942:1, 1893:1, 1926:1, 1915:1, 1832:1, 2030:1, 2199:1, 2204:1, 1293:1, 2127:1, 1875:1, 2138:1, 1979:1, 238:1, 2061:1, 2039:1, 286:1, 20:1, 156:1});\n_.focus_0 = function focus_24(){\n  ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).focus_1(($clinit_DOM() , this.element_0));\n}\n;\nfunction $calculateDateCellOffsetPx(this$static, dateOffset){\n  var dateCellOffset, dateWidths, i;\n  dateCellOffset = 0;\n  dateWidths = this$static.weekGrid.cellWidths;\n  if (dateWidths != null) {\n    for (i = 0; i < dateOffset; i++) {\n      dateCellOffset += dateWidths[i] + 1;\n    }\n  }\n   else {\n    dateCellOffset = dateOffset * $getDateCellWidth(this$static.weekGrid);\n  }\n  return dateCellOffset;\n}\n\nfunction $calculateStartFromMinute(this$static, startFromMinutes, from, to, dayOffset){\n  var eventStartAtDifferentDay, minutesOnPrevDay, newParent;\n  eventStartAtDifferentDay = from.jsdate.getDate() != to.jsdate.getDate();\n  if (eventStartAtDifferentDay) {\n    minutesOnPrevDay = div_0(sub_0(fromDouble((newParent = dynamicCast($getWidget(this$static.weekGrid.content_0, ~~(dayOffset / $getDateCellWidth(this$static.weekGrid)) + 1), 59) , newParent.date).jsdate.getTime()), fromDouble(from.jsdate.getTime())), Pea60_longLit);\n    startFromMinutes = neg(minutesOnPrevDay);\n  }\n  return startFromMinutes;\n}\n\nfunction $cancelMouseMove(this$static){\n  var dateCellWidth, dayOffset, range, s, startFromMinutes;\n  this$static.mouseMoveCanceled = true;\n  releaseCapture_0(($clinit_DOM() , this$static.element_0));\n  ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).blur_0(this$static.element_0);\n  if (this$static.moveRegistration) {\n    $removeHandler_0(this$static.moveRegistration.real);\n    this$static.moveRegistration = null;\n  }\n  this$static.mouseMoveStarted = false;\n  $removeStyleDependentName(this$static.weekGrid.calendar, 'nresize');\n  $removeStyleDependentName(this$static.weekGrid.calendar, 'sresize');\n  s = this$static.element_0.style;\n  $setPropertyImpl(s, 'zIndex', '1');\n  dateCellWidth = $getDateCellWidth(this$static.weekGrid);\n  dayOffset = ~~(this$static.startXrelative / dateCellWidth);\n  $setPropertyImpl(s, 'left', '');\n  $setStartTime(this$static.calendarEvent, this$static.startDatetimeFrom);\n  $setEndTime(this$static.calendarEvent, this$static.startDatetimeTo);\n  startFromMinutes = fromInt(this$static.startDatetimeFrom.jsdate.getHours() * 60 + this$static.startDatetimeFrom.jsdate.getMinutes());\n  range = $getRangeInMinutes(this$static.calendarEvent);\n  startFromMinutes = $calculateStartFromMinute(this$static, startFromMinutes, this$static.startDatetimeFrom, this$static.startDatetimeTo, dayOffset);\n  lt(startFromMinutes, P0_longLit) && (range = add_2(range, startFromMinutes));\n  $updatePosition_0(this$static, startFromMinutes, range);\n  this$static.startY = -1;\n  this$static.startX = -1;\n  $recalculateEventWidths(dynamicCast(this$static.parent_1, 59));\n}\n\nfunction $getDatesWidth(this$static){\n  var count;\n  if (this$static.weekGrid.width_0 == -1) {\n    count = this$static.weekGrid.content_0.children_1.size_0 - 1;\n    return count * $getDateCellWidth(this$static.weekGrid);\n  }\n  return this$static.weekGrid.width_0;\n}\n\nfunction $isTimeRangeTooSmall(start_0, end){\n  return gte_0(sub_0(end, start_0), P1b7740_longLit);\n}\n\nfunction $setDisabled_3(this$static, disabled){\n  this$static.disabled_0 = disabled;\n}\n\nfunction $setHeight_7(this$static, h_0){\n  if (h_0 == -1) {\n    ($clinit_DOM() , this$static.element_0).style['height'] = '';\n    $setPropertyImpl(this$static.eventContent.style, 'height', '');\n  }\n   else {\n    ($clinit_DOM() , this$static.element_0).style['height'] = h_0 + ($clinit_Style$Unit() , 'px');\n    this$static.eventContent.style['height'] = h_0 - 2 + 'px';\n  }\n}\n\nfunction $setMoveWidth(this$static, width_0){\n  this$static.moveWidth = width_0 + 'px';\n}\n\nfunction $setSlotHeightInPX(this$static, slotHeight){\n  this$static.slotHeight = slotHeight;\n}\n\nfunction $updatePosition_0(this$static, startFromMinutes, durationInMinutes){\n  var heightMinutes, multiRowCaption, escapedCaption, timeAsText, innerHtml;\n  lt(startFromMinutes, P0_longLit) && (startFromMinutes = P0_longLit);\n  this$static.top_0 = $getPixelTopFor(this$static.weekGrid, toInt(startFromMinutes));\n  ($clinit_DOM() , this$static.element_0).style['top'] = this$static.top_0 + ($clinit_Style$Unit() , 'px');\n  if (gt(durationInMinutes, P0_longLit)) {\n    heightMinutes = $getPixelLengthFor(this$static.weekGrid, toInt(startFromMinutes), toInt(durationInMinutes));\n    $setHeight_7(this$static, heightMinutes);\n  }\n   else {\n    $setHeight_7(this$static, -1);\n  }\n  multiRowCaption = gt(durationInMinutes, P1e_longLit);\n  escapedCaption = escapeHTML(this$static.calendarEvent.caption_0);\n  timeAsText = $getTimeAsText(this$static.calendarEvent);\n  multiRowCaption?(innerHtml = '<span>' + timeAsText + '<\\/span><br />' + escapedCaption):(innerHtml = '<span>' + timeAsText + '<span>:<\\/span><\\/span> ' + escapedCaption);\n  $setInnerHTML(this$static.caption_0, innerHtml);\n  $setInnerHTML(this$static.eventContent, '');\n}\n\nfunction DateCellDayEvent(dateCell, parent_0, event_0){\n  var s;\n  HTML.call(this);\n  $setTabIndex(($clinit_DOM() , this.element_0), 0);\n  this.caption_0 = null;\n  this.calendarEvent = null;\n  this.startY = -1;\n  this.startX = -1;\n  this.dateCell = dateCell;\n  this.handlers = new LinkedList;\n  setStylePrimaryName(this.element_0, 'v-calendar-event');\n  this.calendarEvent = event_0;\n  this.weekGrid = parent_0;\n  s = this.element_0.style;\n  event_0.styleName.length > 0 && $addStyleDependentName(this, event_0.styleName);\n  $setPropertyImpl(s, 'position', ($clinit_Style$Position() , 'absolute'));\n  this.caption_0 = $createDivElement($doc);\n  $addClassName(this.caption_0, 'v-calendar-event-caption');\n  $appendChild(this.element_0, this.caption_0);\n  this.eventContent = $createDivElement($doc);\n  $addClassName(this.eventContent, 'v-calendar-event-content');\n  $appendChild(this.element_0, this.eventContent);\n  if (this.weekGrid.calendar.eventResizeAllowed) {\n    this.topResizeBar = $createDivElement($doc);\n    this.bottomResizeBar = $createDivElement($doc);\n    $addClassName(this.topResizeBar, 'v-calendar-event-resizetop');\n    $addClassName(this.bottomResizeBar, 'v-calendar-event-resizebottom');\n    $appendChild(this.element_0, this.topResizeBar);\n    $appendChild(this.element_0, this.bottomResizeBar);\n  }\n  this.eventIndex = valueOf_45(event_0.index_0);\n}\n\ndefineClass(70, 762, {1253:1, 2048:1, 1814:1, 1898:1, 1838:1, 2088:1, 383:1, 297:1, 1909:1, 2152:1, 2162:1, 2241:1, 1963:1, 2075:1, 1877:1, 2222:1, 1858:1, 2213:1, 1974:1, 2169:1, 1931:1, 1910:1, 2229:1, 1980:1, 2144:1, 2084:1, 1942:1, 1893:1, 1926:1, 1915:1, 1832:1, 1519:1, 1304:1, 1751:1, 1490:1, 2030:1, 352:1, 2199:1, 2204:1, 1293:1, 2127:1, 1875:1, 2138:1, 1979:1, 238:1, 2061:1, 2039:1, 286:1, 20:1, 156:1, 70:1, 365:1}, DateCellDayEvent);\n_.getTooltipKey = function getTooltipKey(){\n  return this.eventIndex;\n}\n;\n_.onAttach = function onAttach_14(){\n  $onAttach(this);\n  $add_22(this.handlers, $addDomHandler(this, this, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_9)));\n  $add_22(this.handlers, $addDomHandler(this, this, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_13)));\n  $add_22(this.handlers, $addDomHandler(this, this, ($clinit_KeyDownEvent() , $clinit_KeyDownEvent() , TYPE_5)));\n  $add_22(this.handlers, $addDomHandler(this, this, ($clinit_ContextMenuEvent() , $clinit_ContextMenuEvent() , TYPE_2)));\n}\n;\n_.onContextMenu = function onContextMenu_3(event_0){\n  if (this.dateCell.weekgrid.calendar.mouseEventListener) {\n    $preventDefault(event_0.nativeEvent);\n    $stopPropagation(event_0.nativeEvent);\n    $contextMenu(this.dateCell.weekgrid.calendar.mouseEventListener, event_0, this);\n  }\n}\n;\n_.onDetach = function onDetach_25(){\n  var handler, handler$iterator;\n  for (handler$iterator = $listIterator(this.handlers, 0); handler$iterator.currentNode != handler$iterator.this$0.header;) {\n    handler = dynamicCast($next_7(handler$iterator), 165);\n    $removeHandler_0(handler.real);\n  }\n  $clear_9(this.handlers);\n  $onDetach(this);\n}\n;\n_.onKeyDown = function onKeyDown_16(event_0){\n  var keycode;\n  keycode = $getKeyCode(event_0.nativeEvent);\n  keycode == 27 && this.mouseMoveStarted && $cancelMouseMove(this);\n}\n;\n_.onMouseDown = function onMouseDown_8(event_0){\n  var s;\n  this.startX = $getClientX(event_0.nativeEvent);\n  this.startY = $getClientY(event_0.nativeEvent);\n  if (this.disabled_0 || $getButton(event_0.nativeEvent) != 1) {\n    return;\n  }\n  this.clickTarget = $getEventTarget(event_0.nativeEvent);\n  this.mouseMoveCanceled = false;\n  if (this.weekGrid.calendar.eventMoveAllowed || this.weekGrid.calendar.eventResizeAllowed && (this.clickTarget == this.topResizeBar || this.clickTarget == this.bottomResizeBar)) {\n    this.moveRegistration = $addDomHandler(this, this, ($clinit_MouseMoveEvent() , $clinit_MouseMoveEvent() , TYPE_10));\n    ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).focus_1(($clinit_DOM() , this.element_0));\n    try {\n      this.startYrelative = round_int($getRelativeY(event_0, this.caption_0) % this.slotHeight);\n      this.startXrelative = ($getRelativeX(event_0, $getElement(this.weekGrid)) - $getOffsetWidth(this.weekGrid.timebar)) % $getDateCellWidth(this.weekGrid);\n    }\n     catch ($e0) {\n      $e0 = wrap_0($e0);\n      if (!instanceOf($e0, 17))\n        throw unwrap_5($e0);\n    }\n    this.mouseMoveStarted = false;\n    s = this.element_0.style;\n    $setPropertyImpl(s, 'zIndex', '1000');\n    this.startDatetimeFrom = new Date_3(fromDouble(this.calendarEvent.startTime.jsdate.getTime()));\n    this.startDatetimeTo = new Date_3(fromDouble(this.calendarEvent.endTime.jsdate.getTime()));\n    setCapture_0(this.element_0);\n  }\n  this.weekGrid.calendar.eventResizeAllowed && (this.clickTarget == this.topResizeBar || this.clickTarget == this.bottomResizeBar) && (this.clickTarget == this.topResizeBar?$addStyleDependentName(this.weekGrid.calendar, 'nresize'):this.clickTarget == this.bottomResizeBar && $addStyleDependentName(this.weekGrid.calendar, 'sresize'));\n  $stopPropagation(event_0.nativeEvent);\n  $preventDefault(event_0.nativeEvent);\n}\n;\n_.onMouseMove = function onMouseMove_2(event_0){\n  var currentX, currentY, dateCellCount, dateCellWidth, dayDiff, dayOffset, dayOffsetPx, daysMs, duration, from, halfHourDiff, moveX, moveY, newEndTime, newStartTime, oldEndTime, oldStartTime, parent_0, range, relativeX, s, startFromMinutes, to;\n  if (this.startY < 0 && this.startX < 0) {\n    return;\n  }\n  if (this.disabled_0) {\n    releaseCapture_0(($clinit_DOM() , this.element_0));\n    this.mouseMoveStarted = false;\n    this.startY = -1;\n    this.startX = -1;\n    $removeStyleDependentName(this.weekGrid.calendar, 'nresize');\n    $removeStyleDependentName(this.weekGrid.calendar, 'sresize');\n    return;\n  }\n  currentY = $getClientY(event_0.nativeEvent);\n  currentX = $getClientX(event_0.nativeEvent);\n  moveY = currentY - this.startY;\n  moveX = currentX - this.startX;\n  if (moveY < 5 && moveY > -6 && moveX < 5 && moveX > -6) {\n    return;\n  }\n  if (!this.mouseMoveStarted) {\n    $setWidth_0(this, this.moveWidth);\n    ($clinit_DOM() , this.element_0).style['marginLeft'] = 0 + ($clinit_Style$Unit() , 'px');\n    this.mouseMoveStarted = true;\n  }\n  parent_0 = dynamicCast(this.parent_1.parent_1, 323);\n  relativeX = $getRelativeX(event_0, ($clinit_DOM() , parent_0.element_0)) - $getOffsetWidth(this.weekGrid.timebar);\n  moveY > 0?(halfHourDiff = ~~((this.startYrelative + moveY) / this.slotHeight)):(halfHourDiff = ~~((moveY - this.startYrelative) / this.slotHeight));\n  dateCellWidth = $getDateCellWidth(this.weekGrid);\n  moveX >= 0?(dayDiff = fromInt(~~((this.startXrelative + moveX) / dateCellWidth))):(dayDiff = fromInt(~~((moveX - (dateCellWidth - this.startXrelative)) / dateCellWidth)));\n  dayOffset = ~~(relativeX / dateCellWidth);\n  dateCellCount = this.weekGrid.content_0.children_1.size_0 - 1;\n  if (dayOffset >= dateCellCount) {\n    --dayOffset;\n    dayDiff = sub_0(dayDiff, P1_longLit);\n  }\n  dayOffsetPx = $calculateDateCellOffsetPx(this, dayOffset) + $getOffsetWidth(this.weekGrid.timebar);\n  if (relativeX < 0 || relativeX >= $getDatesWidth(this)) {\n    return;\n  }\n  s = this.element_0.style;\n  from = this.calendarEvent.startTime;\n  to = this.calendarEvent.endTime;\n  duration = sub_0(fromDouble(to.jsdate.getTime()), fromDouble(from.jsdate.getTime()));\n  if (!(this.weekGrid.calendar.eventResizeAllowed && (this.clickTarget == this.topResizeBar || this.clickTarget == this.bottomResizeBar)) && this.weekGrid.calendar.eventMoveAllowed) {\n    daysMs = mul(dayDiff, P5265c00_longLit);\n    from.setTime_0(add_2(fromDouble(this.startDatetimeFrom.jsdate.getTime()), daysMs));\n    from.setTime_0(add_2(fromDouble(from.jsdate.getTime()), mul(P1b7740_longLit, fromInt(halfHourDiff))));\n    to.setTime_0(add_2(fromDouble(from.jsdate.getTime()), duration));\n    $setStartTime(this.calendarEvent, from);\n    $setEndTime(this.calendarEvent, to);\n    $setStart(this.calendarEvent, new Date_3(fromDouble(from.jsdate.getTime())));\n    $setEnd(this.calendarEvent, new Date_3(fromDouble(to.jsdate.getTime())));\n    startFromMinutes = fromInt(from.jsdate.getHours() * 60 + from.jsdate.getMinutes());\n    range = $getRangeInMinutes(this.calendarEvent);\n    startFromMinutes = $calculateStartFromMinute(this, startFromMinutes, from, to, dayOffsetPx);\n    lt(startFromMinutes, P0_longLit) && (range = add_2(range, startFromMinutes));\n    $updatePosition_0(this, startFromMinutes, range);\n    s['left'] = dayOffsetPx + ($clinit_Style$Unit() , 'px');\n    this.weekGrid.cellWidths != null?(s['width'] = this.weekGrid.cellWidths[dayOffset] + 'px' , undefined):$setWidth_0(this, this.moveWidth);\n  }\n   else if (this.clickTarget == this.topResizeBar) {\n    oldStartTime = fromDouble(this.startDatetimeFrom.jsdate.getTime());\n    newStartTime = add_2(oldStartTime, mul(P1b7740_longLit, fromInt(halfHourDiff)));\n    $isTimeRangeTooSmall(newStartTime, fromDouble(this.startDatetimeTo.jsdate.getTime())) || (newStartTime = sub_0(fromDouble(this.startDatetimeTo.jsdate.getTime()), P1b7740_longLit));\n    from.setTime_0(newStartTime);\n    $setStartTime(this.calendarEvent, from);\n    $setStart(this.calendarEvent, new Date_3(fromDouble(from.jsdate.getTime())));\n    startFromMinutes = fromInt(from.jsdate.getHours() * 60 + from.jsdate.getMinutes());\n    range = $getRangeInMinutes(this.calendarEvent);\n    $updatePosition_0(this, startFromMinutes, range);\n  }\n   else if (this.clickTarget == this.bottomResizeBar) {\n    oldEndTime = fromDouble(this.startDatetimeTo.jsdate.getTime());\n    newEndTime = add_2(oldEndTime, mul(P1b7740_longLit, fromInt(halfHourDiff)));\n    $isTimeRangeTooSmall(fromDouble(this.startDatetimeFrom.jsdate.getTime()), newEndTime) || (newEndTime = add_2(fromDouble(this.startDatetimeFrom.jsdate.getTime()), P1b7740_longLit));\n    to.setTime_0(newEndTime);\n    $setEndTime(this.calendarEvent, to);\n    $setEnd(this.calendarEvent, new Date_3(fromDouble(to.jsdate.getTime())));\n    startFromMinutes = fromInt(this.startDatetimeFrom.jsdate.getHours() * 60 + this.startDatetimeFrom.jsdate.getMinutes());\n    range = $getRangeInMinutes(this.calendarEvent);\n    startFromMinutes = $calculateStartFromMinute(this, startFromMinutes, from, to, dayOffsetPx);\n    lt(startFromMinutes, P0_longLit) && (range = add_2(range, startFromMinutes));\n    $updatePosition_0(this, startFromMinutes, range);\n  }\n}\n;\n_.onMouseUp = function onMouseUp_4(event_0){\n  var e, endX, endY, et, mouseMoved, s, xDiff, yDiff;\n  if (this.mouseMoveCanceled || $getButton(event_0.nativeEvent) != 1) {\n    return;\n  }\n  releaseCapture_0(($clinit_DOM() , this.element_0));\n  ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).blur_0(this.element_0);\n  if (this.moveRegistration) {\n    $removeHandler_0(this.moveRegistration.real);\n    this.moveRegistration = null;\n  }\n  endX = $getClientX(event_0.nativeEvent);\n  endY = $getClientY(event_0.nativeEvent);\n  xDiff = this.startX - endX;\n  yDiff = this.startY - endY;\n  this.startX = -1;\n  this.startY = -1;\n  this.mouseMoveStarted = false;\n  s = this.element_0.style;\n  $setPropertyImpl(s, 'zIndex', '1');\n  if (this.weekGrid.calendar.eventResizeAllowed && (this.clickTarget == this.topResizeBar || this.clickTarget == this.bottomResizeBar)) {\n    $removeStyleDependentName(this.weekGrid.calendar, 'nresize');\n    $removeStyleDependentName(this.weekGrid.calendar, 'sresize');\n    !!this.weekGrid.calendar.eventResizeListener && $eventResized(this.weekGrid.calendar.eventResizeListener, this.calendarEvent);\n    $recalculateEventWidths(this.dateCell);\n  }\n   else {\n    mouseMoved = xDiff < -3 || xDiff > 3 || yDiff < -3 || yDiff > 3;\n    if (!$isDisabledOrReadOnly(this.weekGrid.calendar) && mouseMoved) {\n      $eventMoved_1(this.weekGrid, this);\n    }\n     else if (!this.weekGrid.calendar.disabled_0) {\n      et = $getEventTarget(event_0.nativeEvent);\n      e = et;\n      (e == this.caption_0 || e == this.eventContent || $getParentElement_0(($clinit_DOMImpl() , e)) == this.caption_0) && !!this.weekGrid.calendar.eventClickListener && $eventClick_0(this.weekGrid.calendar.eventClickListener, this.calendarEvent);\n    }\n  }\n}\n;\n_.disabled_0 = false;\n_.mouseMoveCanceled = false;\n_.mouseMoveStarted = false;\n_.slotHeight = 0;\n_.startX = 0;\n_.startXrelative = 0;\n_.startY = 0;\n_.startYrelative = 0;\n_.top_0 = 0;\nfunction $add_16(this$static, index_0){\n  $add_20(this$static.items, index_0);\n}\n\nfunction $setDateRange(this$static, range){\n  this$static.range = range;\n}\n\nfunction DateCellGroup(index_0){\n  this.items = new ArrayList;\n  $add_20(this.items, index_0);\n}\n\ndefineClass(220, 1, {220:1}, DateCellGroup);\nfunction formatClientSideDate(date){\n  var dateformat_date;\n  dateformat_date = ($clinit_DateTimeFormat_0() , getFormat('yyyy-MM-dd', $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_1))));\n  return $format(dateformat_date, date, null);\n}\n\nfunction formatClientSideTime(date){\n  var dateformat_date;\n  dateformat_date = ($clinit_DateTimeFormat_0() , getFormat('HH-mm', $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_1))));\n  return $format(dateformat_date, date, null);\n}\n\nfunction $add_17(this$static, dayName, date, localized_date_format, extraClass){\n  var l_0;\n  l_0 = new Label_1(dayName + ' ' + localized_date_format);\n  setStylePrimaryName(($clinit_DOM() , l_0.element_0), 'v-calendar-header-day');\n  extraClass != null && $setStyleName_0(l_0, getStylePrimaryName(l_0.element_0) + '-' + extraClass, true);\n  this$static.verticalSized && $setStyleName_0(l_0, getStylePrimaryName(l_0.element_0) + '-Vsized', true);\n  this$static.horizontalSized && $setStyleName_0(l_0, getStylePrimaryName(l_0.element_0) + '-Hsized', true);\n  $addDomHandler(l_0, new DayToolbar$1(this$static, date), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n  $add_7(this$static, l_0);\n}\n\nfunction $addBackButton(this$static){\n  this$static.calendar.backwardNavigationEnabled || ($getElement(this$static.nextLabel).style['height'] = 0 + ($clinit_Style$Unit() , 'px') , undefined);\n  $add_7(this$static, this$static.backLabel);\n}\n\nfunction $addNextButton(this$static){\n  this$static.calendar.forwardNavigationEnabled || ($getElement(this$static.backLabel).style['height'] = 0 + ($clinit_Style$Unit() , 'px') , undefined);\n  $add_7(this$static, this$static.nextLabel);\n}\n\nfunction $setHorizontalSized_0(this$static, sized){\n  this$static.horizontalSized = sized;\n  $updateDayLabelSizedStyleNames(this$static);\n}\n\nfunction $setVerticalSized_0(this$static){\n  this$static.verticalSized = false;\n  $updateDayLabelSizedStyleNames(this$static);\n}\n\nfunction $setWidthPX_0(this$static, width_0){\n  this$static.width_0 = width_0 - 50 - 20;\n  if (this$static.children_1.size_0 == 0) {\n    return;\n  }\n  $updateCellWidths(this$static);\n}\n\nfunction $updateCellWidths(this$static){\n  var cellWidths, cellw, count, i, widget;\n  count = this$static.children_1.size_0;\n  if (count > 0) {\n    $setCellWidth(this$static, this$static.backLabel, '50px');\n    $setCellWidth(this$static, this$static.nextLabel, '20px');\n    $setCellHorizontalAlignment_0(this$static, this$static.nextLabel, ($clinit_HasHorizontalAlignment() , ALIGN_RIGHT));\n    cellw = ~~(this$static.width_0 / (count - 2));\n    if (cellw > 0) {\n      cellWidths = distributeSize(this$static.width_0, count - 2, 0);\n      for (i = 1; i < count - 1; i++) {\n        widget = $get_4(this$static.children_1, i);\n        $setCellWidth(this$static, widget, cellWidths[i - 1] + 'px');\n        widget.setWidth(cellWidths[i - 1] + 'px');\n      }\n    }\n  }\n}\n\nfunction $updateDayLabelSizedStyleNames(this$static){\n  var it;\n  it = new WidgetCollection$WidgetIterator(this$static.children_1);\n  while (it.index_0 < it.this$0.size_0) {\n    $updateWidgetSizedStyleName(this$static, $next_1(it));\n  }\n}\n\nfunction $updateWidgetSizedStyleName(this$static, w){\n  this$static.verticalSized?w.addStyleDependentName('Vsized'):$setStyleName_0(w, getStylePrimaryName(w.getStyleElement()) + '-VSized', false);\n  this$static.horizontalSized?w.addStyleDependentName('Hsized'):$setStyleName_0(w, getStylePrimaryName(w.getStyleElement()) + '-HSized', false);\n}\n\nfunction DayToolbar(vcalendar){\n  HorizontalPanel.call(this);\n  this.width_0 = 0;\n  this.calendar = vcalendar;\n  setStylePrimaryName(($clinit_DOM() , this.element_0), 'v-calendar-header-week');\n  this.backLabel = new Button;\n  $setStylePrimaryName(this.backLabel, 'v-calendar-back');\n  this.nextLabel = new Button;\n  $addDomHandler(this.nextLabel, this, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n  $setStylePrimaryName(this.nextLabel, 'v-calendar-next');\n  $addDomHandler(this.backLabel, this, TYPE_1);\n  $setPropertyString(this.table, 'border', '0');\n  $setPropertyInt(this.table, 'cellSpacing', 0);\n}\n\ndefineClass(1717, 323, {699:1, 2030:1, 352:1, 2199:1, 1293:1, 2138:1, 108:1, 1948:1, 323:1, 1979:1, 217:1, 286:1, 20:1, 180:1}, DayToolbar);\n_.onClick = function onClick_44(event_0){\n  $isDisabledOrReadOnly(this.calendar) || (maskUndefined(event_0.source_0) === maskUndefined(this.nextLabel)?!!this.calendar.forwardListener && $forward(this.calendar.forwardListener):maskUndefined(event_0.source_0) === maskUndefined(this.backLabel) && !!this.calendar.backwardListener && $backward(this.calendar.backwardListener));\n}\n;\n_.horizontalSized = false;\n_.verticalSized = false;\n_.width_0 = 0;\nfunction DayToolbar$1(this$0, val$date){\n  this.this$0 = this$0;\n  this.val$date = val$date;\n}\n\ndefineClass(1317, 1, $intern_97, DayToolbar$1);\n_.onClick = function onClick_45(event_0){\n  !!this.this$0.calendar.dateClickListener && $dateClick_0(this.this$0.calendar.dateClickListener, this.val$date);\n}\n;\ndefineClass(406, 571, $intern_123);\n_.focus_0 = function focus_25(){\n  ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).focus_1(($clinit_DOM() , this.element_0));\n}\n;\nfunction $renderCaption(this$static){\n  var html;\n  html = new StringBuilder;\n  if (this$static.caption_0 != null && !!this$static.time) {\n    $append_1(html.impl, '<span class=\"v-calendar-event-time\">');\n    $append_7(html, $format($getTimeFormat(this$static.calendar), this$static.time, null));\n    $append_1(html.impl, '<\\/span> ');\n    $append_7(html, this$static.caption_0);\n  }\n   else if (this$static.caption_0 != null) {\n    $append_7(html, this$static.caption_0);\n  }\n   else if (this$static.time) {\n    $append_1(html.impl, '<span class=\"v-calendar-event-time\">');\n    $append_7(html, $format($getTimeFormat(this$static.calendar), this$static.time, null));\n    $append_1(html.impl, '<\\/span>');\n  }\n  $setHTML_2(this$static, html.impl.string);\n}\n\nfunction $setCalendar_0(this$static, calendar){\n  this$static.calendar = calendar;\n}\n\nfunction $setCaption_6(this$static, caption){\n  this$static.caption_0 = caption;\n  $renderCaption(this$static);\n}\n\nfunction $setEventIndex(this$static, index_0){\n  this$static.eventIndex = valueOf_45(index_0);\n}\n\nfunction MonthEventLabel(){\n  HTML.call(this);\n  this.timeSpecificEvent = false;\n  setStylePrimaryName(($clinit_DOM() , this.element_0), 'v-calendar-event');\n  $addDomHandler(this, new MonthEventLabel$1(this), ($clinit_ContextMenuEvent() , $clinit_ContextMenuEvent() , TYPE_2));\n}\n\ndefineClass(91, 747, {2048:1, 1814:1, 1898:1, 1838:1, 383:1, 297:1, 1909:1, 2152:1, 2162:1, 2241:1, 1963:1, 2075:1, 1877:1, 1858:1, 2213:1, 1974:1, 1910:1, 2229:1, 1980:1, 2144:1, 2084:1, 1942:1, 1893:1, 1926:1, 1915:1, 1832:1, 2030:1, 2199:1, 2204:1, 1293:1, 2127:1, 1875:1, 2138:1, 1979:1, 238:1, 2061:1, 2039:1, 286:1, 20:1, 365:1, 91:1}, MonthEventLabel);\n_.getTooltipKey = function getTooltipKey_0(){\n  return this.eventIndex;\n}\n;\n_.setHTML = function setHTML_4(html){\n  throw new UnsupportedOperationException_0('Use setCaption() and setTime() instead');\n}\n;\n_.timeSpecificEvent = false;\nfunction MonthEventLabel$1(this$0){\n  this.this$0 = this$0;\n}\n\ndefineClass(956, 1, $intern_138, MonthEventLabel$1);\n_.onContextMenu = function onContextMenu_4(event_0){\n  $contextMenu(this.this$0.calendar.mouseEventListener, event_0, this.this$0);\n  $stopPropagation(event_0.nativeEvent);\n  $preventDefault(event_0.nativeEvent);\n}\n;\nfunction $cancelRangeSelection(this$static){\n  var cell, row, sdc;\n  if (!!this$static.selectionStart_0 && !!this$static.selectionEnd) {\n    for (row = 0; row < this$static.numRows; row++) {\n      for (cell = 0; cell < this$static.numColumns; cell++) {\n        sdc = ($checkCellBounds(this$static, row, cell) , dynamicCast($getWidgetImpl(this$static, row, cell), 67));\n        if (!sdc) {\n          return;\n        }\n        $setStyleName_0(sdc, getStylePrimaryName($getStyleElement(sdc)) + '-selected', false);\n      }\n    }\n  }\n  ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).blur_0(($clinit_DOM() , this$static.element_0));\n  this$static.selectionStart_0 = null;\n}\n\nfunction $getDayCellIndex(this$static, dayCell){\n  var cells_0, i, j, rows_0, sdc;\n  rows_0 = this$static.numRows;\n  cells_0 = this$static.numColumns;\n  for (i = 0; i < rows_0; i++) {\n    for (j = 0; j < cells_0; j++) {\n      sdc = ($checkCellBounds(this$static, i, j) , dynamicCast($getWidgetImpl(this$static, i, j), 67));\n      if (dayCell == sdc) {\n        return i * cells_0 + j;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction $setEnabled_7(this$static, enabled){\n  this$static.enabled = enabled;\n}\n\nfunction $setSelectionEnd(this$static, simpleDayCell){\n  this$static.selectionEnd = simpleDayCell;\n  $updateSelection(this$static);\n}\n\nfunction $setSelectionReady(this$static){\n  var endDate, startDate, temp, value_0;\n  if (!!this$static.selectionStart_0 && !!this$static.selectionEnd) {\n    startDate = this$static.selectionStart_0.date;\n    endDate = this$static.selectionEnd.date;\n    if (signum(sub_0(fromDouble(startDate.jsdate.getTime()), fromDouble(endDate.jsdate.getTime()))) > 0) {\n      temp = startDate;\n      startDate = endDate;\n      endDate = temp;\n    }\n    if (this$static.calendar.rangeSelectListener) {\n      value_0 = $format(this$static.calendar.dateformat_date, startDate, null) + 'TO' + $format(this$static.calendar.dateformat_date, endDate, null);\n      $rangeSelected(this$static.calendar.rangeSelectListener, value_0);\n    }\n    this$static.selectionStart_0 = null;\n    this$static.selectionEnd = null;\n    ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).blur_0(($clinit_DOM() , this$static.element_0));\n  }\n}\n\nfunction $setSelectionStart(this$static, simpleDayCell){\n  if (!this$static.rangeSelectDisabled && this$static.enabled) {\n    this$static.selectionStart_0 = simpleDayCell;\n    ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).focus_1(($clinit_DOM() , this$static.element_0));\n  }\n}\n\nfunction $updateCellSizes(this$static, totalWidthPX, totalHeightPX){\n  var cellHeight, cellWidth, cells_0, heightRemainder, i, j, rows_0, sdc, setHeight, setWidth, widthRemainder;\n  setHeight = totalHeightPX > 0;\n  setWidth = totalWidthPX > 0;\n  rows_0 = this$static.numRows;\n  cells_0 = this$static.numColumns;\n  cellWidth = ~~(totalWidthPX / cells_0) - 1;\n  widthRemainder = totalWidthPX % cells_0;\n  cellHeight = ~~(totalHeightPX / rows_0);\n  heightRemainder = totalHeightPX % rows_0;\n  for (i = 0; i < rows_0; i++) {\n    for (j = 0; j < cells_0; j++) {\n      sdc = ($checkCellBounds(this$static, i, j) , dynamicCast($getWidgetImpl(this$static, i, j), 67));\n      if (setWidth) {\n        if (widthRemainder > 0) {\n          ($clinit_DOM() , sdc.element_0).style['width'] = cellWidth + 1 + 'px';\n          --widthRemainder;\n        }\n         else {\n          ($clinit_DOM() , sdc.element_0).style['width'] = cellWidth + 'px';\n        }\n      }\n      setHeight?heightRemainder > 0?$setHeightPX_0(sdc, cellHeight + 1, true):$setHeightPX_0(sdc, cellHeight, true):$setHeightPX_0(sdc, -1, true);\n    }\n    --heightRemainder;\n  }\n}\n\nfunction $updateSelection(this$static){\n  var cell, d, endDate, row, sdc, startDate;\n  if (!this$static.selectionStart_0) {\n    return;\n  }\n  if (!!this$static.selectionStart_0 && !!this$static.selectionEnd) {\n    startDate = this$static.selectionStart_0.date;\n    endDate = this$static.selectionEnd.date;\n    for (row = 0; row < this$static.numRows; row++) {\n      for (cell = 0; cell < this$static.numColumns; cell++) {\n        sdc = ($checkCellBounds(this$static, row, cell) , dynamicCast($getWidgetImpl(this$static, row, cell), 67));\n        if (!sdc) {\n          return;\n        }\n        d = sdc.date;\n        signum(sub_0(fromDouble(startDate.jsdate.getTime()), fromDouble(d.jsdate.getTime()))) <= 0 && signum(sub_0(fromDouble(endDate.jsdate.getTime()), fromDouble(d.jsdate.getTime()))) >= 0?$setStyleName_0(sdc, getStylePrimaryName($getStyleElement(sdc)) + '-selected', true):signum(sub_0(fromDouble(startDate.jsdate.getTime()), fromDouble(d.jsdate.getTime()))) >= 0 && signum(sub_0(fromDouble(endDate.jsdate.getTime()), fromDouble(d.jsdate.getTime()))) <= 0?$setStyleName_0(sdc, getStylePrimaryName($getStyleElement(sdc)) + '-selected', true):$setStyleName_0(sdc, getStylePrimaryName($getStyleElement(sdc)) + '-selected', false);\n      }\n    }\n  }\n}\n\nfunction MonthGrid(parent_0, rows_0, columns){\n  $clinit_HTMLTable();\n  Grid.call(this, rows_0, columns);\n  $setTabIndex(($clinit_DOM() , this.element_0), 0);\n  this.enabled = true;\n  this.calendar = parent_0;\n  $setPropertyInt(this.tableElem, 'cellSpacing', 0);\n  $setPropertyInt(this.tableElem, 'cellPadding', 0);\n  setStylePrimaryName(this.element_0, 'v-calendar-month');\n  this.keyDownHandler = $addDomHandler(this, this, ($clinit_KeyDownEvent() , $clinit_KeyDownEvent() , TYPE_5));\n}\n\ndefineClass(949, 406, {2048:1, 2088:1, 383:1, 297:1, 1909:1, 2152:1, 2162:1, 2241:1, 1963:1, 2075:1, 1877:1, 2222:1, 2169:1, 1931:1, 1519:1, 2030:1, 352:1, 2199:1, 1293:1, 2138:1, 108:1, 1948:1, 1979:1, 217:1, 286:1, 20:1, 156:1, 180:1}, MonthGrid);\n_.onKeyDown = function onKeyDown_17(event_0){\n  var keycode;\n  keycode = $getKeyCode(event_0.nativeEvent);\n  27 == keycode && !!this.selectionStart_0 && $cancelRangeSelection(this);\n}\n;\n_.onUnload = function onUnload_3(){\n  $removeHandler_0(this.keyDownHandler.real);\n}\n;\n_.enabled = false;\n_.rangeSelectDisabled = false;\nfunction $addCalendarEvent(this$static, e){\n  var i, slot;\n  ++this$static.eventCount;\n  slot = e.slotIndex;\n  if (slot == -1) {\n    for (i = 0; i < this$static.events.length; i++) {\n      if (!this$static.events[i]) {\n        this$static.events[i] = e;\n        e.slotIndex = i;\n        break;\n      }\n    }\n  }\n   else {\n    this$static.events[slot] = e;\n  }\n}\n\nfunction $cancelEventDrag(this$static, w){\n  if (this$static.moveRegistration) {\n    !this$static.moveEvent && (this$static.moveEvent = $getEventByWidget(this$static, w));\n    $setStart(this$static.moveEvent, this$static.dndSourceDateFrom);\n    $setEnd(this$static.moveEvent, this$static.dndSourceDateTo);\n    $setStartTime(this$static.moveEvent, this$static.dndSourceStartDateTime);\n    $setEndTime(this$static.moveEvent, this$static.dndSourceEndDateTime);\n    $updateEventToMonthGrid(this$static.calendar, this$static.moveEvent);\n    releaseCapture_0(($clinit_DOM() , this$static.element_0));\n    $removeHandler_0(this$static.moveRegistration.real);\n    this$static.moveRegistration = null;\n    $removeHandler_0(this$static.keyDownHandler.real);\n    this$static.keyDownHandler = null;\n    ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).blur_0(this$static.element_0);\n    this$static.monthEventMouseDown = false;\n    this$static.startY = -1;\n    this$static.startX = -1;\n    this$static.moveEvent = null;\n    this$static.labelMouseDown = false;\n    this$static.clickedWidget = null;\n  }\n}\n\nfunction $createMonthEventLabel(this$static, e){\n  var eventDiv, from, fromCompareToDate, fromDatetime, rangeInMillis, timeEvent, to, toCompareToDate;\n  rangeInMillis = sub_0(fromDouble(e.endTime.jsdate.getTime()), fromDouble(e.startTime.jsdate.getTime()));\n  timeEvent = lte(rangeInMillis, P5265c00_longLit) && !e.allDay;\n  fromDatetime = e.startTime;\n  eventDiv = new MonthEventLabel;\n  $setStyleName_0(eventDiv, getStylePrimaryName(($clinit_DOM() , eventDiv.element_0)) + '-month', true);\n  $addDomHandler(eventDiv, this$static, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_9));\n  $addDomHandler(eventDiv, this$static, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_13));\n  $setCalendar_0(eventDiv, this$static.calendar);\n  $setEventIndex(eventDiv, e.index_0);\n  eventDiv.calendarEvent = e;\n  if (timeEvent) {\n    eventDiv.timeSpecificEvent = true;\n    e.styleName != null && $addStyleDependentName(eventDiv, e.styleName);\n    $setCaption_6(eventDiv, e.caption_0);\n    eventDiv.time = fromDatetime;\n    $renderCaption(eventDiv);\n  }\n   else {\n    eventDiv.timeSpecificEvent = false;\n    from = e.start_0;\n    to = e.end;\n    e.styleName.length > 0?$addStyleName(eventDiv, 'month-event ' + e.styleName):setStyleName(eventDiv.element_0, 'month-event', true);\n    fromCompareToDate = $compareTo_0(from, this$static.date);\n    toCompareToDate = $compareTo_0(to, this$static.date);\n    $setStyleName_0(eventDiv, getStylePrimaryName(eventDiv.element_0) + '-all-day', true);\n    if (fromCompareToDate == 0) {\n      $setStyleName_0(eventDiv, getStylePrimaryName(eventDiv.element_0) + '-start', true);\n      $setCaption_6(eventDiv, e.caption_0);\n    }\n     else if (fromCompareToDate < 0 && this$static.cell == 0) {\n      $setStyleName_0(eventDiv, getStylePrimaryName(eventDiv.element_0) + '-continued-from', true);\n      $setCaption_6(eventDiv, e.caption_0);\n    }\n    toCompareToDate == 0?$setStyleName_0(eventDiv, getStylePrimaryName(eventDiv.element_0) + '-end', true):toCompareToDate > 0 && this$static.cell + 1 == this$static.monthGrid.numColumns && $setStyleName_0(eventDiv, getStylePrimaryName(eventDiv.element_0) + '-continued-to', true);\n    e.styleName != null && $addStyleDependentName(eventDiv, e.styleName + '-all-day');\n  }\n  return eventDiv;\n}\n\nfunction $eventMoved_0(this$static, e){\n  $updateEventToMonthGrid(this$static.calendar, e);\n  !!this$static.calendar.eventMovedListener && $eventMoved(this$static.calendar.eventMovedListener, e);\n}\n\nfunction $getEventByWidget(this$static, eventWidget){\n  var index_0;\n  index_0 = $indexOf(this$static.children_1, eventWidget);\n  return this$static.events[index_0 - 1];\n}\n\nfunction $reDraw(this$static, clear_0){\n  $setHeightPX_0(this$static, this$static.intHeight + 1, clear_0);\n}\n\nfunction $removeEvent(this$static, targetEvent){\n  var e, slot;\n  slot = targetEvent.slotIndex;\n  if (slot < 0) {\n    return false;\n  }\n  e = this$static.events[slot];\n  if (targetEvent == e) {\n    this$static.events[slot] = null;\n    --this$static.eventCount;\n    $reDraw(this$static, !this$static.moveEvent);\n    return true;\n  }\n  return false;\n}\n\nfunction $setDates(this$static, e, start_0, end, shift_0, isDateTime){\n  var currentEnd, currentStart, duration;\n  if (isDateTime) {\n    currentStart = e.startTime;\n    currentEnd = e.endTime;\n  }\n   else {\n    currentStart = e.start_0;\n    currentEnd = e.end;\n  }\n  duration = sub_0(fromDouble(currentEnd.jsdate.getTime()), fromDouble(currentStart.jsdate.getTime()));\n  isDateTime?start_0.setTime_0(add_2(fromDouble(this$static.dndSourceStartDateTime.jsdate.getTime()), shift_0)):start_0.setTime_0(add_2(fromDouble(this$static.dndSourceDateFrom.jsdate.getTime()), shift_0));\n  end.setTime_0(add_2(fromDouble(start_0.jsdate.getTime()), duration));\n}\n\nfunction $setHeightPX_0(this$static, px, clear_0){\n  var i, slots;\n  px < 0?(this$static.intHeight = $getPropertyInt(($clinit_DOM() , this$static.element_0), 'offsetHeight') - 1):(this$static.intHeight = px - 1);\n  if (this$static.intHeight == -1) {\n    return;\n  }\n  if (clear_0) {\n    while (this$static.children_1.size_0 > 1) {\n      $remove_3(this$static, $get_4(this$static.children_1, 1));\n    }\n  }\n  slots = 0;\n  if (this$static.scrollable) {\n    for (i = 0; i < this$static.events.length; i++) {\n      !!this$static.events[i] && (slots = i + 1);\n    }\n    $setHeight_0(this$static, this$static.intHeight + 'px');\n  }\n   else {\n    $clinit_DOM();\n    $removeAttribute(this$static.element_0, 'height');\n    slots = ~~((this$static.intHeight - $getOffsetHeight(this$static.caption_0) - BOTTOMSPACERHEIGHT) / EVENTHEIGHT);\n    slots > 10 && (slots = 10);\n  }\n  $updateEvents(this$static, slots, clear_0);\n}\n\nfunction $setMonthGrid(this$static, monthGrid){\n  this$static.monthGrid = monthGrid;\n}\n\nfunction $startCalendarEventDrag(this$static, event_0, w){\n  var e;\n  this$static.moveRegistration = $addDomHandler(this$static, this$static, ($clinit_MouseMoveEvent() , $clinit_MouseMoveEvent() , TYPE_10));\n  this$static.startX = $getClientX(event_0.nativeEvent);\n  this$static.startY = $getClientY(event_0.nativeEvent);\n  this$static.startYrelative = $getRelativeY(event_0, $getElement(w.parent_1)) % (this$static.intHeight + 1);\n  this$static.startXrelative = $getRelativeX(event_0, $getElement(w.parent_1)) % ($getPropertyInt(($clinit_DOM() , this$static.element_0), 'offsetWidth') - 1);\n  e = $getEventByWidget(this$static, w);\n  this$static.dndSourceDateFrom = new Date_3(fromDouble(e.start_0.jsdate.getTime()));\n  this$static.dndSourceDateTo = new Date_3(fromDouble(e.end.jsdate.getTime()));\n  this$static.dndSourceStartDateTime = new Date_3(fromDouble(e.startTime.jsdate.getTime()));\n  this$static.dndSourceEndDateTime = new Date_3(fromDouble(e.endTime.jsdate.getTime()));\n  setCapture_0(this$static.element_0);\n  this$static.keyDownHandler = $addDomHandler(this$static, new SimpleDayCell$1(this$static, w), ($clinit_KeyDownEvent() , $clinit_KeyDownEvent() , TYPE_5));\n  ($clinit_FocusImpl() , $clinit_FocusImpl() , implPanel).focus_1(this$static.element_0);\n}\n\nfunction $updateDragPosition(this$static, w, dayDiff, weekDiff){\n  if (dayDiff == this$static.prevDayDiff && weekDiff == this$static.prevWeekDiff) {\n    return;\n  }\n  this$static.prevDayDiff = dayDiff;\n  this$static.prevWeekDiff = weekDiff;\n  !this$static.moveEvent && (this$static.moveEvent = $getEventByWidget(this$static, w));\n  $updateEventToMonthGrid(this$static.calendar, this$static.moveEvent);\n}\n\nfunction $updateEvents(this$static, slots, clear_0){\n  var e, eventsAdded, i, more, newHeight, remainingSpace, slot, w;\n  eventsAdded = 0;\n  for (i = 0; i < slots; i++) {\n    e = this$static.events[i];\n    if (!e) {\n      slot = new HTML;\n      $setClassName(($clinit_DOM() , slot.element_0), 'v-calendar-spacer');\n      if (clear_0) {\n        $add_1(this$static, slot, this$static.element_0);\n      }\n       else {\n        $remove_3(this$static, $get_4(this$static.children_1, i + 1));\n        $insert_0(this$static, slot, this$static.element_0, i + 1, true);\n      }\n    }\n     else {\n      ++eventsAdded;\n      if (clear_0) {\n        $add_6(this$static, $createMonthEventLabel(this$static, e));\n      }\n       else {\n        w = $get_4(this$static.children_1, i + 1);\n        if (!instanceOf(w, 91)) {\n          $remove_3(this$static, $get_4(this$static.children_1, i + 1));\n          $insert_1(this$static, $createMonthEventLabel(this$static, e), i + 1);\n        }\n      }\n    }\n  }\n  remainingSpace = this$static.intHeight - (slots * EVENTHEIGHT + BOTTOMSPACERHEIGHT + $getOffsetHeight(this$static.caption_0));\n  newHeight = remainingSpace + BOTTOMSPACERHEIGHT;\n  newHeight < 0 && (newHeight = EVENTHEIGHT);\n  this$static.bottomspacer.setHeight(newHeight + 'px');\n  clear_0 && $add_6(this$static, this$static.bottomspacer);\n  more = this$static.eventCount - eventsAdded;\n  if (more > 0) {\n    !this$static.bottomSpacerMouseDownHandler && (this$static.bottomSpacerMouseDownHandler = $addDomHandler(this$static.bottomspacer, this$static, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_9)));\n    $setStyleName(this$static.bottomspacer, 'v-calendar-bottom-spacer');\n    this$static.bottomspacer.setText('+ ' + more);\n  }\n   else {\n    if (!this$static.scrollable && !!this$static.bottomSpacerMouseDownHandler) {\n      $removeHandler_0(this$static.bottomSpacerMouseDownHandler.real);\n      this$static.bottomSpacerMouseDownHandler = null;\n    }\n    if (this$static.scrollable) {\n      this$static.bottomspacer.setText('[ - ]');\n    }\n     else {\n      $setStyleName(this$static.bottomspacer, 'v-calendar-bottom-spacer-empty');\n      this$static.bottomspacer.setText('');\n    }\n  }\n}\n\nfunction SimpleDayCell(calendar, row, cell){\n  FlowPanel.call(this);\n  $setTabIndex(($clinit_DOM() , this.element_0), 0);\n  this.events = initDim(_3Lcom_vaadin_client_ui_calendar_schedule_CalendarEvent_2_classLit, $intern_157, 146, 10, 0);\n  this.eventCount = 0;\n  this.startX = -1;\n  this.startY = -1;\n  this.prevDayDiff = 0;\n  this.prevWeekDiff = 0;\n  this.scrollable = false;\n  this.calendar = calendar;\n  this.row = row;\n  this.cell = cell;\n  setStylePrimaryName(this.element_0, 'v-calendar-month-day');\n  this.caption_0 = new Label;\n  this.bottomspacer = new HTML;\n  $setStyleName(this.bottomspacer, 'v-calendar-bottom-spacer-empty');\n  this.bottomspacer.setWidth('3em');\n  $setStyleName(this.caption_0, 'v-calendar-day-number');\n  $add_6(this, this.caption_0);\n  $add_6(this, this.bottomspacer);\n  $addDomHandler(this.caption_0, this, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_9));\n  $addDomHandler(this.caption_0, this, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_13));\n}\n\ndefineClass(67, 1009, {2088:1, 2222:1, 2169:1, 1931:1, 1304:1, 1751:1, 898:1, 1490:1, 2030:1, 352:1, 2199:1, 1293:1, 2138:1, 108:1, 1948:1, 1979:1, 217:1, 286:1, 20:1, 156:1, 67:1, 180:1}, SimpleDayCell);\n_.onAttach = function onAttach_15(){\n  $onAttach(this);\n  this.mouseUpRegistration = $addDomHandler(this, this, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_13));\n  this.mouseDownRegistration = $addDomHandler(this, this, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_9));\n  this.mouseOverRegistration = $addDomHandler(this, this, ($clinit_MouseOverEvent() , $clinit_MouseOverEvent() , TYPE_12));\n}\n;\n_.onDetach = function onDetach_26(){\n  $removeHandler_0(this.mouseUpRegistration.real);\n  $removeHandler_0(this.mouseDownRegistration.real);\n  $removeHandler_0(this.mouseOverRegistration.real);\n  $onDetach(this);\n}\n;\n_.onLoad_0 = function onLoad_17(){\n  BOTTOMSPACERHEIGHT = $getOffsetHeight(this.bottomspacer);\n  EVENTHEIGHT = BOTTOMSPACERHEIGHT;\n}\n;\n_.onMouseDown = function onMouseDown_9(event_0){\n  var grid, w;\n  if (this.calendar.disabled_0 || $getButton(event_0.nativeEvent) != 1) {\n    return;\n  }\n  w = dynamicCast(event_0.source_0, 20);\n  this.clickedWidget = w;\n  if (instanceOf(w, 91)) {\n    this.monthEventMouseDown = true;\n    instanceOf(w, 91) && $startCalendarEventDrag(this, event_0, dynamicCast(w, 91));\n  }\n   else if (!this.calendar.readOnly) {\n    if (w == this.bottomspacer) {\n      this.scrollable?(this.scrollable = false , $setStyleName_0(this, getStylePrimaryName(($clinit_DOM() , this.element_0)) + '-scrollable', false)):(this.scrollable = true , $setStyleName_0(this, getStylePrimaryName(($clinit_DOM() , this.element_0)) + '-scrollable', true));\n      $setHeightPX_0(this, this.intHeight + 1, true);\n    }\n     else if (w == this && !this.scrollable) {\n      grid = this.monthGrid;\n      if (grid.enabled && this.calendar.rangeSelectAllowed) {\n        $setSelectionStart(grid, this);\n        grid.selectionEnd = this;\n        $updateSelection(grid);\n      }\n    }\n     else \n      instanceOf(w, 238) && (this.labelMouseDown = true);\n  }\n  $stopPropagation(event_0.nativeEvent);\n  $preventDefault(event_0.nativeEvent);\n}\n;\n_.onMouseMove = function onMouseMove_3(event_0){\n  var currentX, currentY, dateCellHeigth, dateCellWidth, dayDiff, daysMs, e, end, from, moveX, moveY, parent_0, relativeX, relativeY, start_0, to, w, weekDiff, weeksMs;\n  if (instanceOf(this.clickedWidget, 91) && !this.monthEventMouseDown || this.startY < 0 && this.startX < 0) {\n    return;\n  }\n  w = dynamicCast(this.clickedWidget, 91);\n  if ($isDisabledOrReadOnly(this.calendar)) {\n    releaseCapture_0(($clinit_DOM() , this.element_0));\n    this.monthEventMouseDown = false;\n    this.startY = -1;\n    this.startX = -1;\n    return;\n  }\n  currentY = $getClientY(event_0.nativeEvent);\n  currentX = $getClientX(event_0.nativeEvent);\n  moveY = currentY - this.startY;\n  moveX = currentX - this.startX;\n  if (moveY < 5 && moveY > -6 && moveX < 5 && moveX > -6) {\n    return;\n  }\n  dateCellWidth = $getPropertyInt(($clinit_DOM() , this.element_0), 'offsetWidth') - 1;\n  dateCellHeigth = this.intHeight + 1;\n  parent_0 = $getElement(this.monthGrid);\n  relativeX = $getRelativeX(event_0, parent_0);\n  relativeY = $getRelativeY(event_0, parent_0);\n  moveY > 0?(weekDiff = ~~((this.startYrelative + moveY) / dateCellHeigth)):(weekDiff = ~~((moveY - (dateCellHeigth - this.startYrelative)) / dateCellHeigth));\n  moveX >= 0?(dayDiff = ~~((this.startXrelative + moveX) / dateCellWidth)):(dayDiff = ~~((moveX - (dateCellWidth - this.startXrelative)) / dateCellWidth));\n  if (relativeY < 0 || relativeY >= this.calendar.monthGrid.numRows * dateCellHeigth || relativeX < 0 || relativeX >= this.calendar.monthGrid.numColumns * dateCellWidth) {\n    return;\n  }\n  e = this.moveEvent;\n  !e && (e = $getEventByWidget(this, w));\n  from = e.start_0;\n  to = e.end;\n  daysMs = mul(fromInt(dayDiff), P5265c00_longLit);\n  weeksMs = mul(fromInt(weekDiff), P240c8400_longLit);\n  $setDates(this, e, from, to, add_2(weeksMs, daysMs), false);\n  e.start_0 = from;\n  e.end = to;\n  if (w.timeSpecificEvent) {\n    start_0 = new Date_0;\n    end = new Date_0;\n    $setDates(this, e, start_0, end, add_2(weeksMs, daysMs), true);\n    e.startTime = start_0;\n    e.endTime = end;\n  }\n   else {\n    $setStartTime(e, new Date_3(fromDouble(from.jsdate.getTime())));\n    $setEndTime(e, new Date_3(fromDouble(to.jsdate.getTime())));\n  }\n  $updateDragPosition(this, w, dayDiff, weekDiff);\n}\n;\n_.onMouseOver = function onMouseOver_3(event_0){\n  $preventDefault(event_0.nativeEvent);\n  $setSelectionEnd(this.monthGrid, this);\n}\n;\n_.onMouseUp = function onMouseUp_5(event_0){\n  var clickedDate, e, endX, endY, mel, w, xDiff, yDiff;\n  if ($getButton(event_0.nativeEvent) != 1) {\n    return;\n  }\n  w = dynamicCast(event_0.source_0, 20);\n  if (this.moveRegistration) {\n    releaseCapture_0(($clinit_DOM() , this.element_0));\n    $removeHandler_0(this.moveRegistration.real);\n    this.moveRegistration = null;\n    $removeHandler_0(this.keyDownHandler.real);\n    this.keyDownHandler = null;\n  }\n  if (w == this.bottomspacer && this.monthEventMouseDown)\n  ;\n  else if (instanceOf(this.clickedWidget, 91) && this.monthEventMouseDown) {\n    mel = dynamicCast(this.clickedWidget, 91);\n    endX = $getClientX(event_0.nativeEvent);\n    endY = $getClientY(event_0.nativeEvent);\n    xDiff = this.startX - endX;\n    yDiff = this.startY - endY;\n    this.startX = -1;\n    this.startY = -1;\n    this.prevDayDiff = 0;\n    this.prevWeekDiff = 0;\n    if (xDiff < -3 || xDiff > 3 || yDiff < -3 || yDiff > 3) {\n      $eventMoved_0(this, this.moveEvent);\n    }\n     else if (this.calendar.eventClickListener) {\n      e = $getEventByWidget(this, mel);\n      $eventClick_0(this.calendar.eventClickListener, e);\n    }\n    this.moveEvent = null;\n  }\n   else if (w == this) {\n    $setSelectionReady(this.monthGrid);\n  }\n   else if (instanceOf(w, 238) && this.labelMouseDown) {\n    clickedDate = $format(this.calendar.dateformat_date, this.date, null);\n    !!this.calendar.dateClickListener && $dateClick_0(this.calendar.dateClickListener, clickedDate);\n  }\n  this.monthEventMouseDown = false;\n  this.labelMouseDown = false;\n  this.clickedWidget = null;\n}\n;\n_.cell = 0;\n_.eventCount = 0;\n_.intHeight = 0;\n_.labelMouseDown = false;\n_.monthEventMouseDown = false;\n_.monthNameVisible = false;\n_.prevDayDiff = 0;\n_.prevWeekDiff = 0;\n_.row = 0;\n_.scrollable = false;\n_.startX = 0;\n_.startXrelative = 0;\n_.startY = 0;\n_.startYrelative = 0;\nvar BOTTOMSPACERHEIGHT = -1, EVENTHEIGHT = -1;\nfunction SimpleDayCell$1(this$0, val$w){\n  this.this$0 = this$0;\n  this.val$w = val$w;\n}\n\ndefineClass(505, 1, $intern_129, SimpleDayCell$1);\n_.onKeyDown = function onKeyDown_18(event_0){\n  $getKeyCode(event_0.nativeEvent) == 27 && $cancelEventDrag(this.this$0, this.val$w);\n}\n;\nfunction $setDayNames_0(this$static, dayNames){\n  var i, l_0;\n  $clear_1(this$static);\n  for (i = 0; i < dayNames.length; i++) {\n    l_0 = new Label_1(dayNames[i]);\n    setStylePrimaryName(($clinit_DOM() , l_0.element_0), 'v-calendar-header-day');\n    $add_7(this$static, l_0);\n  }\n  $updateCellWidth(this$static);\n}\n\nfunction $setWidthPX_1(this$static, width_0){\n  this$static.width_0 = width_0;\n  this$static.isWidthUndefined = width_0 == -1;\n  width_0 == -1?$setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-Hsized', true):$setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-Hsized', false);\n  if (!this$static.isWidthUndefined) {\n    $setWidth_0(this$static, this$static.width_0 + 'px');\n    if (this$static.children_1.size_0 == 0) {\n      return;\n    }\n  }\n  $updateCellWidth(this$static);\n}\n\nfunction $updateCellWidth(this$static){\n  var cellw, i, w, widget, widgetCount;\n  cellw = -1;\n  widgetCount = this$static.children_1.size_0;\n  if (widgetCount <= 0) {\n    return;\n  }\n  if (this$static.isWidthUndefined) {\n    widget = $get_4(this$static.children_1, 0);\n    w = $getWidth(($clinit_DOM() , widget.element_0).style);\n    w.length > 2 && (cellw = __parseAndValidateInt($substring_0(w, 0, w.length - 2), 10, $intern_32, $intern_27));\n  }\n   else {\n    cellw = ~~(this$static.width_0 / this$static.children_1.size_0);\n  }\n  if (cellw > 0) {\n    for (i = 0; i < this$static.children_1.size_0; i++) {\n      widget = $get_4(this$static.children_1, i);\n      $setCellWidth(this$static, widget, cellw + 'px');\n    }\n  }\n}\n\nfunction SimpleDayToolbar(){\n  HorizontalPanel.call(this);\n  this.width_0 = 0;\n  this.isWidthUndefined = false;\n  setStylePrimaryName(($clinit_DOM() , this.element_0), 'v-calendar-header-month');\n}\n\ndefineClass(595, 323, $intern_155, SimpleDayToolbar);\n_.isWidthUndefined = false;\n_.width_0 = 0;\nfunction $addWeek(this$static, week, year){\n  var l_0, rowCount;\n  l_0 = new WeekLabel(week + '', week, year);\n  $addDomHandler(l_0, this$static, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n  rowCount = $getDOMRowCount_0(this$static.bodyElem);\n  $insertRow(this$static, rowCount);\n  $setWidget_2(this$static, rowCount, 0, l_0);\n  $updateCellHeights(this$static);\n}\n\nfunction $setHeightPX_1(this$static, intHeight){\n  this$static.isHeightUndefined = intHeight == -1;\n  intHeight == -1?$setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-Vsized', true):$setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-Vsized', false);\n  this$static.height_0 = intHeight;\n  $updateCellHeights(this$static);\n}\n\nfunction $updateCellHeights(this$static){\n  var cellheight, i, remainder, rowCount;\n  if (this$static.isHeightUndefined) {\n    for (i = 0; i < $getDOMRowCount_0(this$static.bodyElem); i++) {\n      ($checkCellBounds(this$static, i, 0) , $getWidgetImpl(this$static, i, 0)).setHeight('');\n      $getElement(($checkCellBounds(this$static, i, 0) , $getWidgetImpl(this$static, i, 0))).style['lineHeight'] = '';\n    }\n  }\n   else {\n    rowCount = $getDOMRowCount_0(this$static.bodyElem);\n    if (rowCount == 0) {\n      return;\n    }\n    cellheight = ~~(this$static.height_0 / rowCount) - 1;\n    remainder = this$static.height_0 % rowCount;\n    cellheight < 0 && (cellheight = 0);\n    for (i = 0; i < rowCount; i++) {\n      remainder > 0?($checkCellBounds(this$static, i, 0) , $getWidgetImpl(this$static, i, 0)).setHeight(cellheight + 1 + 'px'):($checkCellBounds(this$static, i, 0) , $getWidgetImpl(this$static, i, 0)).setHeight(cellheight + 'px');\n      $getElement(($checkCellBounds(this$static, i, 0) , $getWidgetImpl(this$static, i, 0))).style['lineHeight'] = cellheight + 'px';\n      --remainder;\n    }\n  }\n}\n\nfunction SimpleWeekToolbar(parent_0){\n  $clinit_HTMLTable();\n  FlexTable.call(this);\n  this.calendar = parent_0;\n  $setPropertyInt(this.tableElem, 'cellSpacing', 0);\n  $setPropertyInt(this.tableElem, 'cellPadding', 0);\n  $setClassName(($clinit_DOM() , this.element_0), 'v-calendar-week-numbers');\n}\n\ndefineClass(1604, 966, $intern_133, SimpleWeekToolbar);\n_.onClick = function onClick_46(event_0){\n  var wl;\n  wl = dynamicCast(event_0.source_0, 331);\n  !!this.calendar.weekClickListener && $weekClick_0(this.calendar.weekClickListener, wl.year + 'w' + wl.week);\n}\n;\n_.height_0 = 0;\n_.isHeightUndefined = false;\nfunction $addDate(this$static, d){\n  var dc;\n  dc = new DateCell(this$static, d);\n  $setDisabled_2(dc, this$static.disabled_0);\n  $setHorizontalSized(dc, this$static.horizontalScrollEnabled || this$static.width_0 < 0);\n  $setVerticalSized(dc, this$static.verticalScrollEnabled);\n  $add_7(this$static.content_0, dc);\n}\n\nfunction $addEvent_0(this$static, e){\n  var comp, comp2, dateCount, dc, dcDate, from, i, toTime, main, dayEvent;\n  dateCount = this$static.content_0.children_1.size_0;\n  from = e.start_0;\n  toTime = e.endTime;\n  for (i = 1; i < dateCount; i++) {\n    dc = dynamicCast($getWidget(this$static.content_0, i), 59);\n    dcDate = dc.date;\n    comp = signum(sub_0(fromDouble(dcDate.jsdate.getTime()), fromDouble(from.jsdate.getTime())));\n    comp2 = signum(sub_0(fromDouble(dcDate.jsdate.getTime()), fromDouble(toTime.jsdate.getTime())));\n    (comp >= 0 && comp2 < 0 || comp == 0 && comp2 == 0 && areDatesEqualToSecond(e.startTime, e.endTime) && isMidnight(e.endTime)) && (main = ($clinit_DOM() , dc.element_0) , dayEvent = new DateCellDayEvent(dc, dc.weekgrid, e) , $setSlotHeightInPX(dayEvent, dc.startingSlotHeight) , $setDisabled_3(dayEvent, dc.disabled_0) , dc.startingSlotHeight > 0 && $updatePositionFor(dc, dayEvent, dcDate, e) , $add_1(dc, dayEvent, main) , undefined);\n  }\n}\n\nfunction $clearDates(this$static){\n  while (this$static.content_0.children_1.size_0 > 1) {\n    $remove_2(this$static.content_0, 1);\n  }\n  this$static.dateCellOfToday = null;\n}\n\nfunction $eventMoved_1(this$static, dayEvent){\n  var left, newParent, previousParent, s, se;\n  s = ($clinit_DOM() , dayEvent.element_0).style;\n  left = __parseAndValidateInt($substring_0($getPropertyImpl(s, 'left'), 0, $getPropertyImpl(s, 'left').length - 2), 10, $intern_32, $intern_27);\n  previousParent = dynamicCast(dayEvent.parent_1, 59);\n  newParent = dynamicCast($getWidget(this$static.content_0, ~~(left / $getDateCellWidth(this$static)) + 1), 59);\n  se = dayEvent.calendarEvent;\n  $remove_3(previousParent, dayEvent);\n  $addEvent(newParent, dayEvent);\n  previousParent == newParent || $recalculateEventWidths(previousParent);\n  $recalculateEventWidths(newParent);\n  !!this$static.calendar.eventMovedListener && $eventMoved(this$static.calendar.eventMovedListener, se);\n}\n\nfunction $getDateCellIndex(this$static, dateCell){\n  return $getWidgetIndex(this$static.content_0, dateCell) - 1;\n}\n\nfunction $getDateCellWidth(this$static){\n  var cellWidth, count, firstWidget;\n  count = this$static.content_0.children_1.size_0 - 1;\n  if (count <= 0) {\n    return -1;\n  }\n  if (this$static.width_0 == -1) {\n    firstWidget = $getWidget(this$static.content_0, 1);\n    cellWidth = (($clinit_DOM() , firstWidget.element_0).offsetWidth || 0) | 0;\n  }\n   else {\n    cellWidth = ~~(this$static.width_0 / count);\n  }\n  return cellWidth;\n}\n\nfunction $getPixelLengthFor(this$static, startFromMinutes, durationInMinutes){\n  var currentSlot, durationInSlots, endHourInMinutes, endOverFlowTime, firstHourInMinutes, lastFullSlot, lastSlotHeight, pixelLength, shownHeightInMinutes, slotsTillEvent, startOverFlowTime;\n  pixelLength = 0;\n  firstHourInMinutes = this$static.firstHour * 60;\n  endHourInMinutes = this$static.lastHour * 60;\n  if (firstHourInMinutes > startFromMinutes) {\n    durationInMinutes = durationInMinutes - (firstHourInMinutes - startFromMinutes);\n    startFromMinutes = 0;\n  }\n   else {\n    startFromMinutes -= firstHourInMinutes;\n  }\n  shownHeightInMinutes = endHourInMinutes - firstHourInMinutes + 60;\n  durationInMinutes = durationInMinutes < shownHeightInMinutes - startFromMinutes?durationInMinutes:shownHeightInMinutes - startFromMinutes;\n  slotsTillEvent = ~~(startFromMinutes / 30);\n  startOverFlowTime = 30 - startFromMinutes % 30;\n  if (startOverFlowTime == 30) {\n    startOverFlowTime = 0;\n    currentSlot = slotsTillEvent;\n  }\n   else {\n    currentSlot = slotsTillEvent + 1;\n  }\n  if (startOverFlowTime > 0) {\n    durationInSlots = ~~((durationInMinutes - startOverFlowTime) / 30);\n    endOverFlowTime = (durationInMinutes - startOverFlowTime) % 30;\n  }\n   else {\n    durationInSlots = ~~(durationInMinutes / 30);\n    endOverFlowTime = durationInMinutes % 30;\n  }\n  if (startOverFlowTime > 0 && currentSlot < this$static.cellHeights.length) {\n    lastSlotHeight = this$static.cellHeights[currentSlot] + this$static.dateCellBorder;\n    pixelLength += round_int(lastSlotHeight / 30 * startOverFlowTime);\n  }\n  lastFullSlot = currentSlot + durationInSlots;\n  for (; currentSlot < lastFullSlot && currentSlot < this$static.cellHeights.length; currentSlot++) {\n    pixelLength += this$static.cellHeights[currentSlot] + this$static.dateCellBorder;\n  }\n  if (endOverFlowTime > 0 && currentSlot < this$static.cellHeights.length) {\n    lastSlotHeight = this$static.cellHeights[currentSlot] + this$static.dateCellBorder;\n    pixelLength += round_int(lastSlotHeight / 30 * endOverFlowTime);\n  }\n  if (endOverFlowTime < 0) {\n    lastSlotHeight = this$static.cellHeights[currentSlot] + this$static.dateCellBorder;\n    pixelLength += round_int(lastSlotHeight / 30 * endOverFlowTime);\n  }\n  return pixelLength;\n}\n\nfunction $getPixelTopFor(this$static, startFromMinutes){\n  var firstHourInMinutes, lastSlotHeight, overFlowTime, pixelsToTop, slotIndex, slotsTillEvent;\n  pixelsToTop = 0;\n  slotIndex = 0;\n  firstHourInMinutes = this$static.firstHour * 60;\n  firstHourInMinutes > startFromMinutes?(startFromMinutes = 0):(startFromMinutes -= firstHourInMinutes);\n  slotsTillEvent = ~~(startFromMinutes / 30);\n  overFlowTime = startFromMinutes % 30;\n  if (slotsTillEvent > 0) {\n    for (slotIndex = 0; slotIndex < slotsTillEvent; slotIndex++) {\n      pixelsToTop += this$static.cellHeights[slotIndex] + this$static.dateCellBorder;\n    }\n  }\n  if (overFlowTime > 0) {\n    lastSlotHeight = this$static.cellHeights[slotIndex] + this$static.dateCellBorder;\n    pixelsToTop = round_int(pixelsToTop + lastSlotHeight / 30 * overFlowTime);\n  }\n  return pixelsToTop;\n}\n\nfunction $setDisabled_4(this$static, disabled){\n  this$static.disabled_0 = disabled;\n}\n\nfunction $setFirstHour(this$static, firstHour){\n  this$static.firstHour = firstHour;\n  $setFirstHour_0(this$static.timebar, firstHour);\n}\n\nfunction $setHeightPX_2(this$static, intHeight){\n  this$static.height_0 = intHeight;\n  $setVerticalScroll(this$static, this$static.height_0 <= -1);\n  if (!this$static.verticalScrollEnabled && this$static.height_0 > 0) {\n    $setHeight_0(this$static.content_0, this$static.height_0 + 'px');\n    $setHeight_0(this$static, this$static.height_0 + 'px');\n    this$static.wrapper.setHeight(this$static.height_0 + 'px');\n    $removeStyleDependentName(this$static.wrapper, 'Vsized');\n    $updateCellHeights_0(this$static);\n    $setCellHeights(this$static.timebar, this$static.cellHeights);\n    $setHeightPX_3(this$static.timebar, this$static.height_0);\n  }\n   else if (this$static.verticalScrollEnabled) {\n    $updateCellHeights_0(this$static);\n    this$static.wrapper.addStyleDependentName('Vsized');\n    $setCellHeights(this$static.timebar, this$static.cellHeights);\n    $setHeightPX_3(this$static.timebar, this$static.height_0);\n  }\n}\n\nfunction $setLastHour(this$static, lastHour){\n  this$static.lastHour = lastHour;\n  $setLastHour_0(this$static.timebar, lastHour);\n}\n\nfunction $setToday_0(this$static, todayDate, todayTimestamp){\n  var count, dc, i;\n  count = this$static.content_0.children_1.size_0;\n  if (count > 1) {\n    for (i = 1; i < count; i++) {\n      dc = dynamicCast($getWidget(this$static.content_0, i), 59);\n      eq(fromDouble(dc.date.jsdate.getTime()), fromDouble(todayDate.jsdate.getTime())) && (this$static.verticalScrollEnabled?$setToday(dc, todayTimestamp, -1):$setToday(dc, todayTimestamp, $getPropertyInt(($clinit_DOM() , this$static.element_0), 'offsetWidth')));\n      this$static.dateCellOfToday = dc;\n    }\n  }\n}\n\nfunction $setVerticalScroll(this$static, isVerticalScrollEnabled){\n  var scrollPanel, simplePanel;\n  if (isVerticalScrollEnabled && !this$static.verticalScrollEnabled) {\n    this$static.verticalScrollEnabled = true;\n    this$static.horizontalScrollEnabled = false;\n    this$static.wrapper.remove_2(this$static.content_0);\n    scrollPanel = new ScrollPanel;\n    setStylePrimaryName(($clinit_DOM() , scrollPanel.element_0), 'v-calendar-week-wrapper');\n    $setWidget(scrollPanel, this$static.content_0);\n    $addScrollHandler(scrollPanel, new WeekGrid$1(this$static, scrollPanel));\n    $setWidget(this$static, scrollPanel);\n    this$static.wrapper = scrollPanel;\n  }\n   else if (!isVerticalScrollEnabled && this$static.verticalScrollEnabled) {\n    this$static.verticalScrollEnabled = false;\n    this$static.horizontalScrollEnabled = false;\n    this$static.wrapper.remove_2(this$static.content_0);\n    simplePanel = new SimplePanel;\n    simplePanel.setStylePrimaryName('v-calendar-week-wrapper');\n    simplePanel.setWidget(this$static.content_0);\n    $setWidget(this$static, simplePanel);\n    this$static.wrapper = simplePanel;\n  }\n}\n\nfunction $setVerticalScrollPosition_0(this$static, verticalScrollPosition){\n  this$static.verticalScrollEnabled && $setScrollPosition(dynamicCast(this$static.wrapper, 308), verticalScrollPosition);\n}\n\nfunction $setWidthPX_2(this$static, width_0){\n  if (this$static.horizontalScrollEnabled) {\n    $updateCellWidths_0(this$static);\n    this$static.wrapper.setWidth($getOffsetWidth(this$static.content_0) + getNativeScrollbarSize() + 'px');\n    this$static.width_0 = $getOffsetWidth(this$static.content_0) - $getOffsetWidth(this$static.timebar);\n  }\n   else {\n    this$static.width_0 = width_0 == -1?-1:width_0 - $getOffsetWidth(this$static.timebar);\n    this$static.verticalScrollEnabled && width_0 != -1 && (this$static.width_0 = this$static.width_0 - getNativeScrollbarSize());\n    $updateCellWidths_0(this$static);\n  }\n}\n\nfunction $updateCellHeights_0(this$static){\n  var count, dateHeight, dc, first, i;\n  if (this$static.verticalScrollEnabled) {\n    count = this$static.content_0.children_1.size_0;\n    if (count > 1) {\n      first = dynamicCast($getWidget(this$static.content_0, 1), 59);\n      this$static.dateCellBorder = measureVerticalBorder(first.slotElements[0]);\n      dateHeight = ~~($getPropertyInt(($clinit_DOM() , first.element_0), 'offsetHeight') / first.numberOfSlots) - this$static.dateCellBorder;\n      this$static.cellHeights = initDim(_3I_classLit, $intern_12, 0, 48, 5);\n      fill(this$static.cellHeights, dateHeight);\n      for (i = 1; i < count; i++) {\n        dc = dynamicCast($getWidget(this$static.content_0, i), 59);\n        $setVerticalSized(dc, this$static.verticalScrollEnabled);\n      }\n    }\n  }\n   else {\n    count = this$static.content_0.children_1.size_0;\n    if (count > 1) {\n      first = dynamicCast($getWidget(this$static.content_0, 1), 59);\n      this$static.dateCellBorder = measureVerticalBorder(first.slotElements[0]);\n      this$static.cellHeights = distributeSize(this$static.height_0, first.numberOfSlots, -this$static.dateCellBorder);\n      for (i = 1; i < count; i++) {\n        dc = dynamicCast($getWidget(this$static.content_0, i), 59);\n        $setHeightPX(dc, this$static.height_0, this$static.cellHeights);\n      }\n    }\n  }\n}\n\nfunction $updateCellWidths_0(this$static){\n  var count, datesWidth, dc, i;\n  if (!this$static.horizontalScrollEnabled && this$static.width_0 != -1) {\n    count = this$static.content_0.children_1.size_0;\n    datesWidth = this$static.width_0;\n    if (datesWidth > 0 && count > 1) {\n      this$static.cellWidths = distributeSize(datesWidth, count - 1, -1);\n      for (i = 1; i < count; i++) {\n        dc = dynamicCast($getWidget(this$static.content_0, i), 59);\n        $setHorizontalSized(dc, this$static.horizontalScrollEnabled || this$static.width_0 < 0);\n        $setWidthPX(dc, this$static.cellWidths[i - 1]);\n        !!dc.today && $setTimeBarWidth(dc, $getPropertyInt(($clinit_DOM() , this$static.element_0), 'offsetWidth'));\n      }\n    }\n  }\n   else {\n    count = this$static.content_0.children_1.size_0;\n    if (count > 1) {\n      for (i = 1; i < count; i++) {\n        dc = dynamicCast($getWidget(this$static.content_0, i), 59);\n        $setHorizontalSized(dc, this$static.horizontalScrollEnabled || this$static.width_0 < 0);\n      }\n    }\n  }\n}\n\nfunction WeekGrid(parent_0, format24h){\n  SimplePanel.call(this);\n  this.width_0 = 0;\n  this.height_0 = 0;\n  this.calendar = parent_0;\n  this.content_0 = new HorizontalPanel;\n  this.timebar = new WeekGrid$Timebar(format24h);\n  $add_7(this.content_0, this.timebar);\n  this.wrapper = new SimplePanel;\n  this.wrapper.setStylePrimaryName('v-calendar-week-wrapper');\n  $add_4(this.wrapper, this.content_0);\n  $setWidget(this, this.wrapper);\n}\n\ndefineClass(404, $intern_70, $intern_71, WeekGrid);\n_.dateCellBorder = 0;\n_.disabled_0 = false;\n_.firstHour = 0;\n_.height_0 = 0;\n_.horizontalScrollEnabled = false;\n_.lastHour = 0;\n_.verticalScrollEnabled = false;\n_.width_0 = 0;\nfunction WeekGrid$1(this$0, val$scrollPanel){\n  this.this$0 = this$0;\n  this.val$scrollPanel = val$scrollPanel;\n}\n\ndefineClass(1074, 1, $intern_146, WeekGrid$1);\n_.onScroll = function onScroll_2(event_0){\n  !!this.this$0.calendar.scrollListener && $scroll_1(this.this$0.calendar.scrollListener, (($clinit_DOM() , this.val$scrollPanel.scrollableElem).scrollTop || 0) | 0);\n}\n;\nfunction $clinit_WeekGrid$Timebar(){\n  $clinit_WeekGrid$Timebar = nullMethod;\n  timesFor12h = initValues(_3I_classLit, $intern_12, 0, 5, [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]);\n}\n\nfunction $clear_6(this$static){\n  while (($clinit_DOM() , this$static.element_0).childNodes.length > 0) {\n    $removeChild(this$static.element_0, this$static.element_0.childNodes[0]);\n  }\n}\n\nfunction $createTimeBar(this$static, format24h){\n  var amStop, ampm, delimiter, dts, e, i, pmStart;\n  setStylePrimaryName(($clinit_DOM() , this$static.element_0), 'v-calendar-times');\n  e = $createDivElement($doc);\n  $setClassName(e, 'v-calendar-time');\n  ($clinit_DOMImpl() , impl_0).setInnerText(e, '');\n  $appendChild(this$static.element_0, e);\n  dts = new DateTimeService;\n  if (format24h) {\n    for (i = this$static.firstHour + 1; i <= this$static.lastHour; i++) {\n      e = $createDivElement($doc);\n      $setClassName(e, 'v-calendar-time');\n      delimiter = $getClockDelimeter(dts);\n      $setInnerHTML(e, '<span>' + i + '<\\/span>' + delimiter + '00');\n      $appendChild(this$static.element_0, e);\n    }\n  }\n   else {\n    ampm = initValues(_3Ljava_lang_String_2_classLit, $intern_6, 2, 0, ['AM', 'PM']);\n    amStop = this$static.lastHour < 11?this$static.lastHour:11;\n    pmStart = this$static.firstHour > 11?this$static.firstHour % 11:0;\n    if (this$static.firstHour < 12) {\n      for (i = this$static.firstHour + 1; i <= amStop; i++) {\n        e = $createDivElement($doc);\n        $setClassName(e, 'v-calendar-time');\n        $setInnerHTML(e, '<span>' + timesFor12h[i] + '<\\/span> ' + ampm[0]);\n        $appendChild(this$static.element_0, e);\n      }\n    }\n    if (this$static.lastHour > 11) {\n      for (i = pmStart; i < this$static.lastHour - 11; i++) {\n        e = $createDivElement($doc);\n        $setClassName(e, 'v-calendar-time');\n        $setInnerHTML(e, '<span>' + timesFor12h[i] + '<\\/span> ' + ampm[1]);\n        $appendChild(this$static.element_0, e);\n      }\n    }\n  }\n}\n\nfunction $setCellHeights(this$static, cellHeights){\n  this$static.slotCellHeights = cellHeights;\n}\n\nfunction $setFirstHour_0(this$static, firstHour){\n  this$static.firstHour = firstHour;\n}\n\nfunction $setHeightPX_3(this$static, pixelHeight){\n  this$static.height_0 = pixelHeight;\n  if (pixelHeight > -1) {\n    $setHeight_0(this$static, this$static.height_0 + 7 + 'px');\n    $setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-Vsized', false);\n    $updateChildHeights(this$static);\n  }\n   else {\n    $setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element_0)) + '-Vsized', true);\n    $updateChildHeights(this$static);\n  }\n}\n\nfunction $setLastHour_0(this$static, lastHour){\n  this$static.lastHour = lastHour;\n}\n\nfunction $updateChildHeights(this$static){\n  var cellHeights, childCount, e, hoursPerDay, i, i0, j, slotHeightPosition, slotsPerHour;\n  childCount = ($clinit_DOM() , this$static.element_0).childNodes.length;\n  if (this$static.height_0 != -1) {\n    hoursPerDay = this$static.lastHour - this$static.firstHour + 1;\n    slotsPerHour = ~~(this$static.slotCellHeights.length / hoursPerDay);\n    cellHeights = initDim(_3I_classLit, $intern_12, 0, ~~(this$static.slotCellHeights.length / slotsPerHour), 5);\n    slotHeightPosition = 0;\n    for (i0 = 0; i0 < cellHeights.length; i0++) {\n      for (j = slotHeightPosition; j < slotHeightPosition + slotsPerHour; j++) {\n        cellHeights[i0] += this$static.slotCellHeights[j] + 1;\n      }\n      slotHeightPosition += slotsPerHour;\n    }\n    for (i = 0; i < childCount; i++) {\n      e = $getChild(this$static.element_0, i);\n      e.style['height'] = cellHeights[i] + ($clinit_Style$Unit() , 'px');\n    }\n  }\n   else {\n    for (i = 0; i < childCount; i++) {\n      e = $getChild(this$static.element_0, i);\n      $setPropertyImpl(e.style, 'height', '');\n    }\n  }\n}\n\nfunction $updateTimeBar(this$static, format24h){\n  $clear_6(this$static);\n  $createTimeBar(this$static, format24h);\n}\n\nfunction WeekGrid$Timebar(format24h){\n  $clinit_WeekGrid$Timebar();\n  HTML.call(this);\n  $createTimeBar(this, format24h);\n}\n\ndefineClass(1278, 747, $intern_77, WeekGrid$Timebar);\n_.firstHour = 0;\n_.height_0 = 0;\n_.lastHour = 0;\nvar timesFor12h;\nfunction WeekGridMinuteTimeRange(start_0, end){\n  this.start_0 = new Date_3(fromDouble(start_0.jsdate.getTime()));\n  this.end = new Date_3(fromDouble(end.jsdate.getTime()));\n  this.start_0.setSeconds_0(0);\n  this.end.setSeconds_0(0);\n}\n\nfunction doesOverlap(a, b){\n  var overlaps;\n  overlaps = $compareTo_0(a.start_0, b.end) < 0 && $compareTo_0(a.end, b.start_0) > 0;\n  return overlaps;\n}\n\ndefineClass(1392, 1, {}, WeekGridMinuteTimeRange);\nfunction WeekLabel(string, week2, year2){\n  Label_1.call(this, string);\n  setStylePrimaryName(($clinit_DOM() , this.element_0), 'v-calendar-week-number');\n  this.week = week2;\n  this.year = year2;\n}\n\ndefineClass(331, 238, {2048:1, 1814:1, 1898:1, 1838:1, 383:1, 297:1, 1909:1, 2152:1, 2162:1, 2241:1, 1963:1, 2075:1, 1877:1, 1858:1, 2213:1, 1974:1, 1910:1, 2229:1, 1980:1, 2144:1, 2084:1, 1942:1, 1893:1, 1926:1, 1915:1, 1832:1, 2030:1, 2199:1, 1293:1, 1875:1, 2138:1, 1979:1, 238:1, 2061:1, 2039:1, 286:1, 20:1, 331:1}, WeekLabel);\n_.week = 0;\n_.year = 0;\nfunction $addDate_0(this$static, d){\n  var dcc;\n  dcc = new DateCellContainer;\n  dcc.date = d;\n  $setCalendar(dcc, this$static.calendar);\n  $add_7(this$static, dcc);\n}\n\nfunction $addEvent_1(this$static, calendarEvent){\n  var comp, comp2, dateCount, dc, dcDate, eventLabel, extraStyle, from, i, started, to;\n  $updateEventSlot(this$static, calendarEvent);\n  dateCount = this$static.children_1.size_0;\n  from = calendarEvent.start_0;\n  to = calendarEvent.end;\n  started = false;\n  for (i = 0; i < dateCount; i++) {\n    dc = dynamicCast($get_4(this$static.children_1, i), 210);\n    dcDate = dc.date;\n    comp = signum(sub_0(fromDouble(dcDate.jsdate.getTime()), fromDouble(from.jsdate.getTime())));\n    comp2 = signum(sub_0(fromDouble(dcDate.jsdate.getTime()), fromDouble(to.jsdate.getTime())));\n    eventLabel = $getDateCell(dc, calendarEvent.slotIndex);\n    setStylePrimaryName($getStyleElement(eventLabel), 'v-calendar-event');\n    if (comp >= 0 && comp2 <= 0) {\n      eventLabel.calendarEvent = calendarEvent;\n      $setStyleName_0(eventLabel, getStylePrimaryName($getStyleElement(eventLabel)) + '-all-day', true);\n      comp == 0 && $setStyleName_0(eventLabel, getStylePrimaryName($getStyleElement(eventLabel)) + '-start', true);\n      comp2 == 0 && $setStyleName_0(eventLabel, getStylePrimaryName($getStyleElement(eventLabel)) + '-end', true);\n      !started && comp > 0 && comp2 <= 0?$setStyleName_0(eventLabel, getStylePrimaryName($getStyleElement(eventLabel)) + '-continued-from', true):i == dateCount - 1 && $setStyleName_0(eventLabel, getStylePrimaryName($getStyleElement(eventLabel)) + '-continued-to', true);\n      extraStyle = calendarEvent.styleName;\n      extraStyle != null && extraStyle.length > 0 && $setStyleName_0(eventLabel, getStylePrimaryName($getStyleElement(eventLabel)) + '-' + extraStyle + '-all-day', true);\n      if (!started) {\n        $setText_1(eventLabel, calendarEvent.caption_0);\n        started = true;\n      }\n    }\n  }\n}\n\nfunction $addEvents(this$static, events){\n  var e, e$iterator;\n  for (e$iterator = new AbstractList$IteratorImpl(events); e$iterator.i < e$iterator.this$0_0.size_1();) {\n    e = dynamicCast($next_3(e$iterator), 146);\n    $addEvent_1(this$static, e);\n  }\n}\n\nfunction $isSlotFree(this$static, slot, start_0, end){\n  var comp, comp2, dateCount, dc, dcDate, i;\n  dateCount = this$static.children_1.size_0;\n  for (i = 0; i < dateCount; i++) {\n    dc = dynamicCast($get_4(this$static.children_1, i), 210);\n    dcDate = dc.date;\n    comp = signum(sub_0(fromDouble(dcDate.jsdate.getTime()), fromDouble(start_0.jsdate.getTime())));\n    comp2 = signum(sub_0(fromDouble(dcDate.jsdate.getTime()), fromDouble(end.jsdate.getTime())));\n    if (comp >= 0 && comp2 <= 0) {\n      if (dc.children_1.size_0 - 1 >= slot && !!dynamicCast($get_4(dc.children_1, slot), 177).calendarEvent) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction $setWidthPX_3(this$static, width_0){\n  if (this$static.children_1.size_0 == 0) {\n    return;\n  }\n  this$static.undefinedWidth = width_0 < 0;\n  $updateCellWidths_1(this$static);\n}\n\nfunction $updateCellWidths_1(this$static){\n  var cellWidth, cells_0, dc, i;\n  cells_0 = this$static.children_1.size_0;\n  if (cells_0 <= 0) {\n    return;\n  }\n  cellWidth = -1;\n  this$static.undefinedWidth && (cellWidth = $getDateCellWidth(this$static.calendar.weekGrid) - measureVerticalBorder(dynamicCast($getWidget(this$static.calendar.weekGrid.content_0, 1), 59).slotElements[0]));\n  for (i = 0; i < cells_0; i++) {\n    dc = dynamicCast($get_4(this$static.children_1, i), 210);\n    this$static.undefinedWidth?(($clinit_DOM() , dc.element_0).style['width'] = cellWidth + 'px' , undefined):$setWidth_0(dc, this$static.calendar.weekGrid.cellWidths[i] + 'px');\n  }\n}\n\nfunction $updateEventSlot(this$static, e){\n  var foundFreeSlot, slot;\n  foundFreeSlot = false;\n  slot = 0;\n  while (!foundFreeSlot) {\n    if ($isSlotFree(this$static, slot, e.start_0, e.end)) {\n      e.slotIndex = slot;\n      foundFreeSlot = true;\n    }\n     else {\n      ++slot;\n    }\n  }\n}\n\nfunction WeeklyLongEvents(calendar){\n  HorizontalPanel.call(this);\n  setStylePrimaryName(($clinit_DOM() , this.element_0), 'v-calendar-weekly-longevents');\n  this.calendar = calendar;\n}\n\ndefineClass(1048, 323, {2030:1, 2199:1, 1293:1, 2138:1, 108:1, 1948:1, 323:1, 1979:1, 217:1, 286:1, 20:1, 365:1, 180:1}, WeeklyLongEvents);\n_.getTooltipKey = function getTooltipKey_1(){\n  return null;\n}\n;\n_.undefinedWidth = false;\nfunction WeeklyLongEventsDateCell(){\n  HTML.call(this);\n}\n\ndefineClass(177, 747, {2048:1, 1814:1, 1898:1, 1838:1, 383:1, 297:1, 1909:1, 2152:1, 2162:1, 2241:1, 1963:1, 2075:1, 1877:1, 1858:1, 2213:1, 1974:1, 1910:1, 2229:1, 1980:1, 2144:1, 2084:1, 1942:1, 1893:1, 1926:1, 1915:1, 1832:1, 2030:1, 2199:1, 2204:1, 1293:1, 2127:1, 1875:1, 2138:1, 1979:1, 238:1, 2061:1, 2039:1, 286:1, 20:1, 365:1, 177:1}, WeeklyLongEventsDateCell);\n_.getTooltipKey = function getTooltipKey_2(){\n  if (this.calendarEvent) {\n    return valueOf_45(this.calendarEvent.index_0);\n  }\n  return null;\n}\n;\nfunction CalendarDropHandler(connector){\n  VAbstractDropHandler.call(this);\n  this.calendarConnector = connector;\n}\n\ndefineClass(1626, 1426, {});\n_.getApplicationConnection = function getApplicationConnection_2(){\n  return this.calendarConnector.connection;\n}\n;\n_.getConnector = function getConnector_2(){\n  return this.calendarConnector;\n}\n;\nfunction $deEmphasis_1(this$static){\n  if (!!this$static.currentTargetElement && !!this$static.currentTargetDay) {\n    $removeStyleDependentName(this$static.currentTargetDay, 'dragemphasis');\n    this$static.currentTargetElement = null;\n  }\n}\n\nfunction $dragAccepted_1(this$static, drag){\n  $deEmphasis_1(this$static);\n  this$static.currentTargetElement = $getElementOver(drag);\n  this$static.currentTargetDay = dynamicCast(findWidget(this$static.currentTargetElement, Lcom_vaadin_client_ui_calendar_schedule_SimpleDayCell_2_classLit), 67);\n  !!this$static.currentTargetElement && !!this$static.currentTargetDay && $addStyleDependentName(this$static.currentTargetDay, 'dragemphasis');\n}\n\nfunction $isLocationValid(this$static, elementOver){\n  var monthGridElement;\n  monthGridElement = $getElement(dynamicCast($getWidget_1(this$static.calendarConnector), 19).monthGrid);\n  return $clinit_DOM() , ($clinit_DOMImpl() , impl_0).isOrHasChild(monthGridElement, elementOver);\n}\n\nfunction CalendarMonthDropHandler(connector){\n  CalendarDropHandler.call(this, connector);\n}\n\ndefineClass(326, 1626, {326:1}, CalendarMonthDropHandler);\n_.dragAccepted = function dragAccepted_2(drag){\n  $dragAccepted_1(this, drag);\n}\n;\n_.dragEnter = function dragEnter_3(drag){\n}\n;\n_.dragLeave = function dragLeave_3(drag){\n  $deEmphasis_1(this);\n}\n;\n_.dragOver = function dragOver_3(drag){\n  $isLocationValid(this, $getElementOver(drag)) && $validate(this, new CalendarMonthDropHandler$1(this, drag), drag);\n}\n;\n_.drop = function drop_4(drag){\n  var dayIndex;\n  if ($isLocationValid(this, $getElementOver(drag))) {\n    dayIndex = $getDayCellIndex(dynamicCast($getWidget_1(this.calendarConnector), 19).monthGrid, this.currentTargetDay);\n    drag.dropDetails.put('dropDayIndex', valueOf_45(dayIndex));\n    $deEmphasis_1(this);\n    return $drop(this, drag);\n  }\n   else {\n    $deEmphasis_1(this);\n    return false;\n  }\n}\n;\nfunction CalendarMonthDropHandler$1(this$0, val$drag){\n  this.this$0 = this$0;\n  this.val$drag = val$drag;\n}\n\ndefineClass(1689, 1, {}, CalendarMonthDropHandler$1);\n_.accepted_0 = function accepted_3(event_0){\n  $dragAccepted_1(this.this$0, this.val$drag);\n}\n;\nfunction $deEmphasis_2(this$static){\n  if (this$static.currentTargetElement) {\n    $removeEmphasisStyle((this$static.currentTargetDay , $clinit_DOM() , this$static.currentTargetElement));\n    this$static.currentTargetElement = null;\n  }\n}\n\nfunction $dragAccepted_2(this$static, drag){\n  $deEmphasis_2(this$static);\n  this$static.currentTargetElement = $getElementOver(drag);\n  this$static.currentTargetDay = dynamicCast(findWidget(this$static.currentTargetElement, Lcom_vaadin_client_ui_calendar_schedule_DateCell_2_classLit), 59);\n  $addEmphasisStyle(this$static.currentTargetElement);\n}\n\nfunction $isLocationValid_0(this$static, elementOver){\n  var timeBarElement, todayBarElement, weekGridElement;\n  weekGridElement = $getElement(dynamicCast($getWidget_1(this$static.calendarConnector), 19).weekGrid);\n  timeBarElement = $getElement(dynamicCast($getWidget_1(this$static.calendarConnector), 19).weekGrid.timebar);\n  todayBarElement = null;\n  !!dynamicCast($getWidget_1(this$static.calendarConnector), 19).weekGrid.dateCellOfToday && (todayBarElement = dynamicCast($getWidget_1(this$static.calendarConnector), 19).weekGrid.dateCellOfToday.todaybar);\n  return $clinit_DOM() , ($clinit_DOMImpl() , impl_0).isOrHasChild(weekGridElement, elementOver) && !impl_0.isOrHasChild(timeBarElement, elementOver) && todayBarElement != elementOver && !findWidget(elementOver, Lcom_vaadin_client_ui_calendar_schedule_DateCellDayEvent_2_classLit);\n}\n\nfunction CalendarWeekDropHandler(connector){\n  CalendarDropHandler.call(this, connector);\n}\n\ndefineClass(313, 1626, {313:1}, CalendarWeekDropHandler);\n_.dragAccepted = function dragAccepted_3(drag){\n  $dragAccepted_2(this, drag);\n}\n;\n_.dragEnter = function dragEnter_4(drag){\n}\n;\n_.dragLeave = function dragLeave_4(drag){\n  $deEmphasis_2(this);\n}\n;\n_.dragOver = function dragOver_4(drag){\n  $isLocationValid_0(this, $getElementOver(drag)) && $validate(this, new CalendarWeekDropHandler$1(this, drag), drag);\n}\n;\n_.drop = function drop_5(drag){\n  var slotIndex, dayIndex;\n  if ($isLocationValid_0(this, $getElementOver(drag))) {\n    slotIndex = $getSlotIndex(this.currentTargetDay, this.currentTargetElement);\n    dayIndex = $getDateCellIndex(dynamicCast($getWidget_1(this.calendarConnector), 19).weekGrid, this.currentTargetDay);\n    drag.dropDetails.put('dropDayIndex', valueOf_45(dayIndex));\n    drag.dropDetails.put('dropSlotIndex', valueOf_45(slotIndex));\n    $deEmphasis_2(this);\n    return $drop(this, drag);\n  }\n   else {\n    $deEmphasis_2(this);\n    return false;\n  }\n}\n;\nfunction CalendarWeekDropHandler$1(this$0, val$drag){\n  this.this$0 = this$0;\n  this.val$drag = val$drag;\n}\n\ndefineClass(1268, 1, {}, CalendarWeekDropHandler$1);\n_.accepted_0 = function accepted_4(event_0){\n  $dragAccepted_2(this.this$0, this.val$drag);\n}\n;\nfunction CalendarState(){\n  AbstractComponentState.call(this);\n  this.firstVisibleDayOfWeek = 1;\n  this.lastVisibleDayOfWeek = 7;\n  this.firstHourOfDay = 0;\n  this.lastHourOfDay = 23;\n}\n\ndefineClass(79, 5, {5:1, 291:1, 79:1, 3:1}, CalendarState);\n_.firstDayOfWeek = 0;\n_.firstHourOfDay = 0;\n_.firstVisibleDayOfWeek = 0;\n_.format24H = false;\n_.lastHourOfDay = 0;\n_.lastVisibleDayOfWeek = 0;\n_.scroll_0 = 0;\nfunction CalendarState$Action(){\n}\n\ndefineClass(338, 1, {338:1, 3:1}, CalendarState$Action);\nfunction CalendarState$Day(){\n}\n\ndefineClass(317, 1, {317:1, 3:1}, CalendarState$Day);\n_.dayOfWeek = 0;\n_.week = 0;\n_.yearOfWeek = 0;\nfunction CalendarState$Event(){\n}\n\ndefineClass(273, 1, {273:1, 3:1}, CalendarState$Event);\n_.allDay = false;\n_.index_0 = 0;\nfunction valueOf_46(i){\n  var rebase, result;\n  if (gt(i, N81_longLit) && lt(i, P80_longLit)) {\n    rebase = toInt(i) + 128;\n    result = ($clinit_Long$BoxedValues() , boxedValues_3)[rebase];\n    !result && (result = boxedValues_3[rebase] = new Long(i));\n    return result;\n  }\n  return new Long(i);\n}\n\nfunction $clinit_Long$BoxedValues(){\n  $clinit_Long$BoxedValues = nullMethod;\n  boxedValues_3 = initDim(_3Ljava_lang_Long_2_classLit, $intern_5, 163, 256, 0);\n}\n\nvar boxedValues_3;\nfunction abs_0(x_0){\n  return x_0 <= 0?0 - x_0:x_0;\n}\n\nfunction fill(a, val){\n  fill_0(a, a.length, val);\n}\n\nfunction fill_0(a, toIndex, val){\n  var i;\n  for (i = 0; i < toIndex; ++i) {\n    a[i] = val;\n  }\n}\n\nfunction replaceContents(target, x_0){\n  var i, size_0;\n  size_0 = target.size_0;\n  for (i = 0; i < size_0; i++) {\n    $set_2(target, i, x_0[i]);\n  }\n}\n\nfunction sort_1(target){\n  $clinit_Collections();\n  var x_0;\n  x_0 = cloneSubrange(target.array, target.size_0);\n  mergeSort(x_0, 0, x_0.length, ($clinit_Comparators() , $clinit_Comparators() , NATURAL));\n  replaceContents(target, x_0);\n}\n\nvar _3Ljava_lang_Long_2_classLit = createForArray('[Ljava.lang.', 'Long;', Ljava_lang_Long_2_classLit), Lcom_google_gwt_user_client_ui_HorizontalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HorizontalPanel', 323), Lcom_vaadin_shared_ui_calendar_CalendarState$Action_2_classLit = createForClass('com.vaadin.shared.ui.calendar.', 'CalendarState$Action', 338), Lcom_vaadin_shared_ui_calendar_CalendarState$Day_2_classLit = createForClass('com.vaadin.shared.ui.calendar.', 'CalendarState$Day', 317), Lcom_vaadin_shared_ui_calendar_CalendarState$Event_2_classLit = createForClass('com.vaadin.shared.ui.calendar.', 'CalendarState$Event', 273), Lcom_vaadin_shared_ui_calendar_CalendarState_2_classLit = createForClass('com.vaadin.shared.ui.calendar.', 'CalendarState', 79), Lcom_vaadin_client_ui_calendar_CalendarConnector_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector', 1219), Lcom_vaadin_client_ui_VCalendar_2_classLit = createForClass('com.vaadin.client.ui.', 'VCalendar', 19), Lcom_vaadin_client_metadata_ConnectorBundleLoaderImpl$6$1$1_2_classLit = createForClass('com.vaadin.client.metadata.', 'ConnectorBundleLoaderImpl$6$1$1', 1560), Lcom_vaadin_client_metadata_ConnectorBundleLoaderImpl$6$1$2_2_classLit = createForClass('com.vaadin.client.metadata.', 'ConnectorBundleLoaderImpl$6$1$2', 1298), Lcom_vaadin_client_metadata_ConnectorBundleLoaderImpl$6$1$3_2_classLit = createForClass('com.vaadin.client.metadata.', 'ConnectorBundleLoaderImpl$6$1$3', 861), Lcom_vaadin_client_metadata_ConnectorBundleLoaderImpl$6$1$4_2_classLit = createForClass('com.vaadin.client.metadata.', 'ConnectorBundleLoaderImpl$6$1$4', 1327), Lcom_vaadin_client_metadata_ConnectorBundleLoaderImpl$6$1$5_2_classLit = createForClass('com.vaadin.client.metadata.', 'ConnectorBundleLoaderImpl$6$1$5', 574), Lcom_vaadin_client_metadata_ConnectorBundleLoaderImpl$6$1$6_2_classLit = createForClass('com.vaadin.client.metadata.', 'ConnectorBundleLoaderImpl$6$1$6', 1170), Lcom_google_gwt_event_dom_client_TouchEvent$TouchSupportDetector_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'TouchEvent$TouchSupportDetector', 1787), Lcom_vaadin_client_ui_calendar_CalendarConnector$1_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector$1', 669), Lcom_vaadin_client_ui_calendar_CalendarConnector$2_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector$2', 1199), Lcom_vaadin_client_ui_calendar_CalendarConnector$3_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector$3', 980), Lcom_vaadin_client_ui_calendar_CalendarConnector$4_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector$4', 836), Lcom_vaadin_client_ui_calendar_CalendarConnector$5_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector$5', 941), Lcom_vaadin_client_ui_calendar_CalendarConnector$6_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector$6', 1618), Lcom_vaadin_client_ui_calendar_CalendarConnector$7_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector$7', 1701), Lcom_vaadin_client_ui_calendar_CalendarConnector$8_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector$8', 464), Lcom_vaadin_client_ui_calendar_CalendarConnector$9_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector$9', 1635), Lcom_vaadin_client_ui_calendar_CalendarConnector$10_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector$10', 1244), Lcom_vaadin_client_ui_calendar_CalendarConnector$11_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector$11', 899), Lcom_vaadin_client_ui_calendar_CalendarConnector$11$1_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'CalendarConnector$11$1', 1256), Lcom_vaadin_client_ui_calendar_schedule_CalendarEvent_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'CalendarEvent', 146), _3Lcom_vaadin_client_ui_calendar_schedule_CalendarEvent_2_classLit = createForArray('[Lcom.vaadin.client.ui.calendar.schedule.', 'CalendarEvent;', Lcom_vaadin_client_ui_calendar_schedule_CalendarEvent_2_classLit), Lcom_vaadin_client_ui_VCalendar$1_2_classLit = createForClass('com.vaadin.client.ui.', 'VCalendar$1', 710), Lcom_vaadin_client_ui_VCalendar$2_2_classLit = createForClass('com.vaadin.client.ui.', 'VCalendar$2', 1623), Lcom_vaadin_client_ui_calendar_schedule_SimpleWeekToolbar_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'SimpleWeekToolbar', 1604), Lcom_google_gwt_user_client_ui_DockPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockPanel', 928), Lcom_google_gwt_user_client_ui_DockPanel$TmpRow_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockPanel$TmpRow', 307), _3Lcom_google_gwt_user_client_ui_DockPanel$TmpRow_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'DockPanel$TmpRow;', Lcom_google_gwt_user_client_ui_DockPanel$TmpRow_2_classLit), Lcom_google_gwt_user_client_ui_DockPanel$DockLayoutConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockPanel$DockLayoutConstant', 1148), Lcom_google_gwt_user_client_ui_DockPanel$LayoutData_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockPanel$LayoutData', 473), Lcom_vaadin_client_ui_calendar_schedule_SimpleDayToolbar_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'SimpleDayToolbar', 595), Lcom_vaadin_client_ui_calendar_schedule_DayToolbar_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'DayToolbar', 1717), Lcom_vaadin_client_ui_calendar_schedule_DayToolbar$1_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'DayToolbar$1', 1317), Lcom_vaadin_client_ui_calendar_schedule_dd_CalendarDropHandler_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.dd.', 'CalendarDropHandler', 1626), Lcom_vaadin_client_ui_calendar_schedule_dd_CalendarMonthDropHandler_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.dd.', 'CalendarMonthDropHandler', 326), Lcom_vaadin_client_ui_FocusableFlowPanel_2_classLit = createForClass('com.vaadin.client.ui.', 'FocusableFlowPanel', 1009), Lcom_vaadin_client_ui_calendar_schedule_SimpleDayCell_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'SimpleDayCell', 67), Lcom_vaadin_client_ui_calendar_schedule_dd_CalendarMonthDropHandler$1_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.dd.', 'CalendarMonthDropHandler$1', 1689), Lcom_vaadin_client_ui_calendar_schedule_dd_CalendarWeekDropHandler_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.dd.', 'CalendarWeekDropHandler', 313), Lcom_vaadin_client_ui_calendar_schedule_FocusableComplexPanel_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'FocusableComplexPanel', 637), Lcom_vaadin_client_ui_calendar_schedule_DateCell_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'DateCell', 59), Lcom_vaadin_client_ui_calendar_schedule_FocusableHTML_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'FocusableHTML', 762), Lcom_vaadin_client_ui_calendar_schedule_DateCellDayEvent_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'DateCellDayEvent', 70), Lcom_vaadin_client_ui_calendar_schedule_dd_CalendarWeekDropHandler$1_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.dd.', 'CalendarWeekDropHandler$1', 1268), Lcom_vaadin_client_ui_calendar_schedule_WeekLabel_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'WeekLabel', 331), Lcom_vaadin_client_ui_calendar_schedule_CalendarDay_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'CalendarDay', 229), Lcom_vaadin_client_ui_calendar_schedule_WeeklyLongEvents_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'WeeklyLongEvents', 1048), Lcom_vaadin_client_ui_calendar_schedule_WeekGrid_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'WeekGrid', 404), Lcom_vaadin_client_ui_calendar_schedule_WeekGrid$Timebar_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'WeekGrid$Timebar', 1278), Lcom_vaadin_client_ui_calendar_schedule_WeekGrid$1_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'WeekGrid$1', 1074), Lcom_vaadin_client_ui_calendar_schedule_FocusableGrid_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'FocusableGrid', 406), Lcom_vaadin_client_ui_calendar_schedule_MonthGrid_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'MonthGrid', 949), Lcom_vaadin_client_ui_calendar_schedule_SimpleDayCell$1_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'SimpleDayCell$1', 505), Lcom_google_gwt_user_client_ui_ScrollPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ScrollPanel', 308), Lcom_vaadin_client_ui_calendar_schedule_DateCell$DateCellSlot_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'DateCell$DateCellSlot', 376), Lcom_vaadin_client_ui_calendar_VCalendarAction_2_classLit = createForClass('com.vaadin.client.ui.calendar.', 'VCalendarAction', 275), Lcom_vaadin_client_ui_calendar_schedule_DateCellContainer_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'DateCellContainer', 210), Lcom_vaadin_client_ui_calendar_schedule_WeeklyLongEventsDateCell_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'WeeklyLongEventsDateCell', 177), Lcom_vaadin_client_ui_calendar_schedule_MonthEventLabel_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'MonthEventLabel', 91), Lcom_vaadin_client_ui_calendar_schedule_MonthEventLabel$1_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'MonthEventLabel$1', 956), Lcom_vaadin_client_ui_calendar_schedule_DateCellGroup_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'DateCellGroup', 220), Lcom_vaadin_client_ui_calendar_schedule_WeekGridMinuteTimeRange_2_classLit = createForClass('com.vaadin.client.ui.calendar.schedule.', 'WeekGridMinuteTimeRange', 1392), Lcom_google_gwt_touch_client_TouchScroller_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller', 1476), Lcom_google_gwt_touch_client_TouchScroller$TemporalPoint_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$TemporalPoint', 278), Lcom_google_gwt_touch_client_TouchScroller$MomentumCommand_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$MomentumCommand', 1620), Lcom_google_gwt_touch_client_TouchScroller$MomentumTouchRemovalCommand_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$MomentumTouchRemovalCommand', 1235), Lcom_google_gwt_touch_client_TouchScroller$MomentumCommand$1_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$MomentumCommand$1', 1675), Lcom_google_gwt_touch_client_TouchScroller$1_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$1', 1538), Lcom_google_gwt_touch_client_TouchScroller$2_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$2', 1149), Lcom_google_gwt_touch_client_TouchScroller$3_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$3', 697), Lcom_google_gwt_touch_client_TouchScroller$4_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$4', 398), Lcom_google_gwt_touch_client_TouchScroller$5_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$5', 768), Lcom_google_gwt_touch_client_TouchScroller$6_2_classLit = createForClass('com.google.gwt.touch.client.', 'TouchScroller$6', 996), Lcom_google_gwt_touch_client_DefaultMomentum_2_classLit = createForClass('com.google.gwt.touch.client.', 'DefaultMomentum', 601), Lcom_google_gwt_touch_client_Momentum$State_2_classLit = createForClass('com.google.gwt.touch.client.', 'Momentum$State', 1699), Lcom_google_gwt_touch_client_Point_2_classLit = createForClass('com.google.gwt.touch.client.', 'Point', 256);\n$entry(onLoad)(6);\n\n//# sourceURL=MyWidgetset-6.js\n")
